   1               		.file	"usbdrv.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	usbSetInterrupt
  11               		.type	usbSetInterrupt, @function
  12               	usbSetInterrupt:
  13               	.LFB5:
  14               		.file 1 "../usbdrv/usbdrv.c"
   1:../usbdrv/usbdrv.c **** /* Name: usbdrv.c
   2:../usbdrv/usbdrv.c ****  * Project: V-USB, virtual USB port for Atmel's(r) AVR(r) microcontrollers
   3:../usbdrv/usbdrv.c ****  * Author: Christian Starkjohann
   4:../usbdrv/usbdrv.c ****  * Creation Date: 2004-12-29
   5:../usbdrv/usbdrv.c ****  * Tabsize: 4
   6:../usbdrv/usbdrv.c ****  * Copyright: (c) 2005 by OBJECTIVE DEVELOPMENT Software GmbH
   7:../usbdrv/usbdrv.c ****  * License: GNU GPL v2 (see License.txt), GNU GPL v3 or proprietary (CommercialLicense.txt)
   8:../usbdrv/usbdrv.c ****  * This Revision: $Id: usbdrv.c 791 2010-07-15 15:56:13Z cs $
   9:../usbdrv/usbdrv.c ****  */
  10:../usbdrv/usbdrv.c **** 
  11:../usbdrv/usbdrv.c **** #include "usbportability.h"
  12:../usbdrv/usbdrv.c **** #include "usbdrv.h"
  13:../usbdrv/usbdrv.c **** #include "oddebug.h"
  14:../usbdrv/usbdrv.c **** 
  15:../usbdrv/usbdrv.c **** /*
  16:../usbdrv/usbdrv.c **** General Description:
  17:../usbdrv/usbdrv.c **** This module implements the C-part of the USB driver. See usbdrv.h for a
  18:../usbdrv/usbdrv.c **** documentation of the entire driver.
  19:../usbdrv/usbdrv.c **** */
  20:../usbdrv/usbdrv.c **** 
  21:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
  22:../usbdrv/usbdrv.c **** 
  23:../usbdrv/usbdrv.c **** /* raw USB registers / interface to assembler code: */
  24:../usbdrv/usbdrv.c **** uchar usbRxBuf[2*USB_BUFSIZE];  /* raw RX buffer: PID, 8 bytes data, 2 bytes CRC */
  25:../usbdrv/usbdrv.c **** uchar       usbInputBufOffset;  /* offset in usbRxBuf used for low level receiving */
  26:../usbdrv/usbdrv.c **** uchar       usbDeviceAddr;      /* assigned during enumeration, defaults to 0 */
  27:../usbdrv/usbdrv.c **** uchar       usbNewDeviceAddr;   /* device ID which should be set after status phase */
  28:../usbdrv/usbdrv.c **** uchar       usbConfiguration;   /* currently selected configuration. Administered by driver, but no
  29:../usbdrv/usbdrv.c **** volatile schar usbRxLen;        /* = 0; number of bytes in usbRxBuf; 0 means free, -1 for flow cont
  30:../usbdrv/usbdrv.c **** uchar       usbCurrentTok;      /* last token received or endpoint number for last OUT token if != 
  31:../usbdrv/usbdrv.c **** uchar       usbRxToken;         /* token for data we received; or endpont number for last OUT */
  32:../usbdrv/usbdrv.c **** volatile uchar usbTxLen = USBPID_NAK;   /* number of bytes to transmit with next IN token or handsh
  33:../usbdrv/usbdrv.c **** uchar       usbTxBuf[USB_BUFSIZE];/* data to transmit with next IN, free if usbTxLen contains hands
  34:../usbdrv/usbdrv.c **** #if USB_COUNT_SOF
  35:../usbdrv/usbdrv.c **** volatile uchar  usbSofCount;    /* incremented by assembler module every SOF */
  36:../usbdrv/usbdrv.c **** #endif
  37:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT && !USB_CFG_SUPPRESS_INTR_CODE
  38:../usbdrv/usbdrv.c **** usbTxStatus_t  usbTxStatus1;
  39:../usbdrv/usbdrv.c **** #   if USB_CFG_HAVE_INTRIN_ENDPOINT3
  40:../usbdrv/usbdrv.c **** usbTxStatus_t  usbTxStatus3;
  41:../usbdrv/usbdrv.c **** #   endif
  42:../usbdrv/usbdrv.c **** #endif
  43:../usbdrv/usbdrv.c **** #if USB_CFG_CHECK_DATA_TOGGLING
  44:../usbdrv/usbdrv.c **** uchar       usbCurrentDataToken;/* when we check data toggling to ignore duplicate packets */
  45:../usbdrv/usbdrv.c **** #endif
  46:../usbdrv/usbdrv.c **** 
  47:../usbdrv/usbdrv.c **** /* USB status registers / not shared with asm code */
  48:../usbdrv/usbdrv.c **** uchar               *usbMsgPtr;     /* data to transmit next -- ROM or RAM address */
  49:../usbdrv/usbdrv.c **** static usbMsgLen_t  usbMsgLen = USB_NO_MSG; /* remaining number of bytes */
  50:../usbdrv/usbdrv.c **** static uchar        usbMsgFlags;    /* flag values see below */
  51:../usbdrv/usbdrv.c **** 
  52:../usbdrv/usbdrv.c **** #define USB_FLG_MSGPTR_IS_ROM   (1<<6)
  53:../usbdrv/usbdrv.c **** #define USB_FLG_USE_USER_RW     (1<<7)
  54:../usbdrv/usbdrv.c **** 
  55:../usbdrv/usbdrv.c **** /*
  56:../usbdrv/usbdrv.c **** optimizing hints:
  57:../usbdrv/usbdrv.c **** - do not post/pre inc/dec integer values in operations
  58:../usbdrv/usbdrv.c **** - assign value of USB_READ_FLASH() to register variables and don't use side effects in arg
  59:../usbdrv/usbdrv.c **** - use narrow scope for variables which should be in X/Y/Z register
  60:../usbdrv/usbdrv.c **** - assign char sized expressions to variables to force 8 bit arithmetics
  61:../usbdrv/usbdrv.c **** */
  62:../usbdrv/usbdrv.c **** 
  63:../usbdrv/usbdrv.c **** /* -------------------------- String Descriptors --------------------------- */
  64:../usbdrv/usbdrv.c **** 
  65:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_STRINGS == 0
  66:../usbdrv/usbdrv.c **** 
  67:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_STRING_0 == 0
  68:../usbdrv/usbdrv.c **** #undef USB_CFG_DESCR_PROPS_STRING_0
  69:../usbdrv/usbdrv.c **** #define USB_CFG_DESCR_PROPS_STRING_0    sizeof(usbDescriptorString0)
  70:../usbdrv/usbdrv.c **** PROGMEM const char usbDescriptorString0[] = { /* language descriptor */
  71:../usbdrv/usbdrv.c ****     4,          /* sizeof(usbDescriptorString0): length of descriptor in bytes */
  72:../usbdrv/usbdrv.c ****     3,          /* descriptor type */
  73:../usbdrv/usbdrv.c ****     0x09, 0x04, /* language index (0x0409 = US-English) */
  74:../usbdrv/usbdrv.c **** };
  75:../usbdrv/usbdrv.c **** #endif
  76:../usbdrv/usbdrv.c **** 
  77:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_STRING_VENDOR == 0 && USB_CFG_VENDOR_NAME_LEN
  78:../usbdrv/usbdrv.c **** #undef USB_CFG_DESCR_PROPS_STRING_VENDOR
  79:../usbdrv/usbdrv.c **** #define USB_CFG_DESCR_PROPS_STRING_VENDOR   sizeof(usbDescriptorStringVendor)
  80:../usbdrv/usbdrv.c **** PROGMEM const int  usbDescriptorStringVendor[] = {
  81:../usbdrv/usbdrv.c ****     USB_STRING_DESCRIPTOR_HEADER(USB_CFG_VENDOR_NAME_LEN),
  82:../usbdrv/usbdrv.c ****     USB_CFG_VENDOR_NAME
  83:../usbdrv/usbdrv.c **** };
  84:../usbdrv/usbdrv.c **** #endif
  85:../usbdrv/usbdrv.c **** 
  86:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_STRING_PRODUCT == 0 && USB_CFG_DEVICE_NAME_LEN
  87:../usbdrv/usbdrv.c **** #undef USB_CFG_DESCR_PROPS_STRING_PRODUCT
  88:../usbdrv/usbdrv.c **** #define USB_CFG_DESCR_PROPS_STRING_PRODUCT   sizeof(usbDescriptorStringDevice)
  89:../usbdrv/usbdrv.c **** PROGMEM const int  usbDescriptorStringDevice[] = {
  90:../usbdrv/usbdrv.c ****     USB_STRING_DESCRIPTOR_HEADER(USB_CFG_DEVICE_NAME_LEN),
  91:../usbdrv/usbdrv.c ****     USB_CFG_DEVICE_NAME
  92:../usbdrv/usbdrv.c **** };
  93:../usbdrv/usbdrv.c **** #endif
  94:../usbdrv/usbdrv.c **** 
  95:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER == 0 && USB_CFG_SERIAL_NUMBER_LEN
  96:../usbdrv/usbdrv.c **** #undef USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER
  97:../usbdrv/usbdrv.c **** #define USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER    sizeof(usbDescriptorStringSerialNumber)
  98:../usbdrv/usbdrv.c **** PROGMEM const int usbDescriptorStringSerialNumber[] = {
  99:../usbdrv/usbdrv.c ****     USB_STRING_DESCRIPTOR_HEADER(USB_CFG_SERIAL_NUMBER_LEN),
 100:../usbdrv/usbdrv.c ****     USB_CFG_SERIAL_NUMBER
 101:../usbdrv/usbdrv.c **** };
 102:../usbdrv/usbdrv.c **** #endif
 103:../usbdrv/usbdrv.c **** 
 104:../usbdrv/usbdrv.c **** #endif  /* USB_CFG_DESCR_PROPS_STRINGS == 0 */
 105:../usbdrv/usbdrv.c **** 
 106:../usbdrv/usbdrv.c **** /* --------------------------- Device Descriptor --------------------------- */
 107:../usbdrv/usbdrv.c **** 
 108:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_DEVICE == 0
 109:../usbdrv/usbdrv.c **** #undef USB_CFG_DESCR_PROPS_DEVICE
 110:../usbdrv/usbdrv.c **** #define USB_CFG_DESCR_PROPS_DEVICE  sizeof(usbDescriptorDevice)
 111:../usbdrv/usbdrv.c **** PROGMEM const char usbDescriptorDevice[] = {    /* USB device descriptor */
 112:../usbdrv/usbdrv.c ****     18,         /* sizeof(usbDescriptorDevice): length of descriptor in bytes */
 113:../usbdrv/usbdrv.c ****     USBDESCR_DEVICE,        /* descriptor type */
 114:../usbdrv/usbdrv.c ****     0x10, 0x01,             /* USB version supported */
 115:../usbdrv/usbdrv.c ****     USB_CFG_DEVICE_CLASS,
 116:../usbdrv/usbdrv.c ****     USB_CFG_DEVICE_SUBCLASS,
 117:../usbdrv/usbdrv.c ****     0,                      /* protocol */
 118:../usbdrv/usbdrv.c ****     8,                      /* max packet size */
 119:../usbdrv/usbdrv.c ****     /* the following two casts affect the first byte of the constant only, but
 120:../usbdrv/usbdrv.c ****      * that's sufficient to avoid a warning with the default values.
 121:../usbdrv/usbdrv.c ****      */
 122:../usbdrv/usbdrv.c ****     (char)USB_CFG_VENDOR_ID,/* 2 bytes */
 123:../usbdrv/usbdrv.c ****     (char)USB_CFG_DEVICE_ID,/* 2 bytes */
 124:../usbdrv/usbdrv.c ****     USB_CFG_DEVICE_VERSION, /* 2 bytes */
 125:../usbdrv/usbdrv.c ****     USB_CFG_DESCR_PROPS_STRING_VENDOR != 0 ? 1 : 0,         /* manufacturer string index */
 126:../usbdrv/usbdrv.c ****     USB_CFG_DESCR_PROPS_STRING_PRODUCT != 0 ? 2 : 0,        /* product string index */
 127:../usbdrv/usbdrv.c ****     USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER != 0 ? 3 : 0,  /* serial number string index */
 128:../usbdrv/usbdrv.c ****     1,          /* number of configurations */
 129:../usbdrv/usbdrv.c **** };
 130:../usbdrv/usbdrv.c **** #endif
 131:../usbdrv/usbdrv.c **** 
 132:../usbdrv/usbdrv.c **** /* ----------------------- Configuration Descriptor ------------------------ */
 133:../usbdrv/usbdrv.c **** 
 134:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_HID_REPORT != 0 && USB_CFG_DESCR_PROPS_HID == 0
 135:../usbdrv/usbdrv.c **** #undef USB_CFG_DESCR_PROPS_HID
 136:../usbdrv/usbdrv.c **** #define USB_CFG_DESCR_PROPS_HID     9   /* length of HID descriptor in config descriptor below */
 137:../usbdrv/usbdrv.c **** #endif
 138:../usbdrv/usbdrv.c **** 
 139:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_CONFIGURATION == 0
 140:../usbdrv/usbdrv.c **** #undef USB_CFG_DESCR_PROPS_CONFIGURATION
 141:../usbdrv/usbdrv.c **** #define USB_CFG_DESCR_PROPS_CONFIGURATION   sizeof(usbDescriptorConfiguration)
 142:../usbdrv/usbdrv.c **** PROGMEM const char usbDescriptorConfiguration[] = {    /* USB configuration descriptor */
 143:../usbdrv/usbdrv.c ****     9,          /* sizeof(usbDescriptorConfiguration): length of descriptor in bytes */
 144:../usbdrv/usbdrv.c ****     USBDESCR_CONFIG,    /* descriptor type */
 145:../usbdrv/usbdrv.c ****     18 + 7 * USB_CFG_HAVE_INTRIN_ENDPOINT + 7 * USB_CFG_HAVE_INTRIN_ENDPOINT3 +
 146:../usbdrv/usbdrv.c ****                 (USB_CFG_DESCR_PROPS_HID & 0xff), 0,
 147:../usbdrv/usbdrv.c ****                 /* total length of data returned (including inlined descriptors) */
 148:../usbdrv/usbdrv.c ****     1,          /* number of interfaces in this configuration */
 149:../usbdrv/usbdrv.c ****     1,          /* index of this configuration */
 150:../usbdrv/usbdrv.c ****     0,          /* configuration name string index */
 151:../usbdrv/usbdrv.c **** #if USB_CFG_IS_SELF_POWERED
 152:../usbdrv/usbdrv.c ****     (1 << 7) | USBATTR_SELFPOWER,       /* attributes */
 153:../usbdrv/usbdrv.c **** #else
 154:../usbdrv/usbdrv.c ****     (1 << 7),                           /* attributes */
 155:../usbdrv/usbdrv.c **** #endif
 156:../usbdrv/usbdrv.c ****     USB_CFG_MAX_BUS_POWER/2,            /* max USB current in 2mA units */
 157:../usbdrv/usbdrv.c **** /* interface descriptor follows inline: */
 158:../usbdrv/usbdrv.c ****     9,          /* sizeof(usbDescrInterface): length of descriptor in bytes */
 159:../usbdrv/usbdrv.c ****     USBDESCR_INTERFACE, /* descriptor type */
 160:../usbdrv/usbdrv.c ****     0,          /* index of this interface */
 161:../usbdrv/usbdrv.c ****     0,          /* alternate setting for this interface */
 162:../usbdrv/usbdrv.c ****     USB_CFG_HAVE_INTRIN_ENDPOINT + USB_CFG_HAVE_INTRIN_ENDPOINT3, /* endpoints excl 0: number of en
 163:../usbdrv/usbdrv.c ****     USB_CFG_INTERFACE_CLASS,
 164:../usbdrv/usbdrv.c ****     USB_CFG_INTERFACE_SUBCLASS,
 165:../usbdrv/usbdrv.c ****     USB_CFG_INTERFACE_PROTOCOL,
 166:../usbdrv/usbdrv.c ****     0,          /* string index for interface */
 167:../usbdrv/usbdrv.c **** #if (USB_CFG_DESCR_PROPS_HID & 0xff)    /* HID descriptor */
 168:../usbdrv/usbdrv.c ****     9,          /* sizeof(usbDescrHID): length of descriptor in bytes */
 169:../usbdrv/usbdrv.c ****     USBDESCR_HID,   /* descriptor type: HID */
 170:../usbdrv/usbdrv.c ****     0x01, 0x01, /* BCD representation of HID version */
 171:../usbdrv/usbdrv.c ****     0x00,       /* target country code */
 172:../usbdrv/usbdrv.c ****     0x01,       /* number of HID Report (or other HID class) Descriptor infos to follow */
 173:../usbdrv/usbdrv.c ****     0x22,       /* descriptor type: report */
 174:../usbdrv/usbdrv.c ****     USB_CFG_HID_REPORT_DESCRIPTOR_LENGTH, 0,  /* total length of report descriptor */
 175:../usbdrv/usbdrv.c **** #endif
 176:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT    /* endpoint descriptor for endpoint 1 */
 177:../usbdrv/usbdrv.c ****     7,          /* sizeof(usbDescrEndpoint) */
 178:../usbdrv/usbdrv.c ****     USBDESCR_ENDPOINT,  /* descriptor type = endpoint */
 179:../usbdrv/usbdrv.c ****     (char)0x81, /* IN endpoint number 1 */
 180:../usbdrv/usbdrv.c ****     0x03,       /* attrib: Interrupt endpoint */
 181:../usbdrv/usbdrv.c ****     8, 0,       /* maximum packet size */
 182:../usbdrv/usbdrv.c ****     USB_CFG_INTR_POLL_INTERVAL, /* in ms */
 183:../usbdrv/usbdrv.c **** #endif
 184:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT3   /* endpoint descriptor for endpoint 3 */
 185:../usbdrv/usbdrv.c ****     7,          /* sizeof(usbDescrEndpoint) */
 186:../usbdrv/usbdrv.c ****     USBDESCR_ENDPOINT,  /* descriptor type = endpoint */
 187:../usbdrv/usbdrv.c ****     (char)(0x80 | USB_CFG_EP3_NUMBER), /* IN endpoint number 3 */
 188:../usbdrv/usbdrv.c ****     0x03,       /* attrib: Interrupt endpoint */
 189:../usbdrv/usbdrv.c ****     8, 0,       /* maximum packet size */
 190:../usbdrv/usbdrv.c ****     USB_CFG_INTR_POLL_INTERVAL, /* in ms */
 191:../usbdrv/usbdrv.c **** #endif
 192:../usbdrv/usbdrv.c **** };
 193:../usbdrv/usbdrv.c **** #endif
 194:../usbdrv/usbdrv.c **** 
 195:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
 196:../usbdrv/usbdrv.c **** 
 197:../usbdrv/usbdrv.c **** static inline void  usbResetDataToggling(void)
 198:../usbdrv/usbdrv.c **** {
 199:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT && !USB_CFG_SUPPRESS_INTR_CODE
 200:../usbdrv/usbdrv.c ****     USB_SET_DATATOKEN1(USB_INITIAL_DATATOKEN);  /* reset data toggling for interrupt endpoint */
 201:../usbdrv/usbdrv.c **** #   if USB_CFG_HAVE_INTRIN_ENDPOINT3
 202:../usbdrv/usbdrv.c ****     USB_SET_DATATOKEN3(USB_INITIAL_DATATOKEN);  /* reset data toggling for interrupt endpoint */
 203:../usbdrv/usbdrv.c **** #   endif
 204:../usbdrv/usbdrv.c **** #endif
 205:../usbdrv/usbdrv.c **** }
 206:../usbdrv/usbdrv.c **** 
 207:../usbdrv/usbdrv.c **** static inline void  usbResetStall(void)
 208:../usbdrv/usbdrv.c **** {
 209:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_HALT && USB_CFG_HAVE_INTRIN_ENDPOINT
 210:../usbdrv/usbdrv.c ****         usbTxLen1 = USBPID_NAK;
 211:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT3
 212:../usbdrv/usbdrv.c ****         usbTxLen3 = USBPID_NAK;
 213:../usbdrv/usbdrv.c **** #endif
 214:../usbdrv/usbdrv.c **** #endif
 215:../usbdrv/usbdrv.c **** }
 216:../usbdrv/usbdrv.c **** 
 217:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
 218:../usbdrv/usbdrv.c **** 
 219:../usbdrv/usbdrv.c **** #if !USB_CFG_SUPPRESS_INTR_CODE
 220:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT
 221:../usbdrv/usbdrv.c **** static void usbGenericSetInterrupt(uchar *data, uchar len, usbTxStatus_t *txStatus)
 222:../usbdrv/usbdrv.c **** {
 223:../usbdrv/usbdrv.c **** uchar   *p;
 224:../usbdrv/usbdrv.c **** char    i;
 225:../usbdrv/usbdrv.c **** 
 226:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_HALT
 227:../usbdrv/usbdrv.c ****     if(usbTxLen1 == USBPID_STALL)
 228:../usbdrv/usbdrv.c ****         return;
 229:../usbdrv/usbdrv.c **** #endif
 230:../usbdrv/usbdrv.c ****     if(txStatus->len & 0x10){   /* packet buffer was empty */
 231:../usbdrv/usbdrv.c ****         txStatus->buffer[0] ^= USBPID_DATA0 ^ USBPID_DATA1; /* toggle token */
 232:../usbdrv/usbdrv.c ****     }else{
 233:../usbdrv/usbdrv.c ****         txStatus->len = USBPID_NAK; /* avoid sending outdated (overwritten) interrupt data */
 234:../usbdrv/usbdrv.c ****     }
 235:../usbdrv/usbdrv.c ****     p = txStatus->buffer + 1;
 236:../usbdrv/usbdrv.c ****     i = len;
 237:../usbdrv/usbdrv.c ****     do{                         /* if len == 0, we still copy 1 byte, but that's no problem */
 238:../usbdrv/usbdrv.c ****         *p++ = *data++;
 239:../usbdrv/usbdrv.c ****     }while(--i > 0);            /* loop control at the end is 2 bytes shorter than at beginning */
 240:../usbdrv/usbdrv.c ****     usbCrc16Append(&txStatus->buffer[1], len);
 241:../usbdrv/usbdrv.c ****     txStatus->len = len + 4;    /* len must be given including sync byte */
 242:../usbdrv/usbdrv.c ****     DBG2(0x21 + (((int)txStatus >> 3) & 3), txStatus->buffer, len + 3);
 243:../usbdrv/usbdrv.c **** }
 244:../usbdrv/usbdrv.c **** 
 245:../usbdrv/usbdrv.c **** USB_PUBLIC void usbSetInterrupt(uchar *data, uchar len)
 246:../usbdrv/usbdrv.c **** {
  15               		.loc 1 246 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22               	/* prologue: function */
  23               	/* frame size = 0 */
  24               	/* stack size = 1 */
  25               	.L__stack_usage = 1
  26               	.LVL1:
  27               	.LBB24:
  28               	.LBB25:
 227:../usbdrv/usbdrv.c ****         return;
  29               		.loc 1 227 0
  30 0002 2091 0000 		lds r18,usbTxStatus1
  31 0006 2E31      		cpi r18,lo8(30)
  32 0008 01F0      		breq .L1
 230:../usbdrv/usbdrv.c ****         txStatus->buffer[0] ^= USBPID_DATA0 ^ USBPID_DATA1; /* toggle token */
  33               		.loc 1 230 0
  34 000a 2091 0000 		lds r18,usbTxStatus1
  35 000e 24FF      		sbrs r18,4
  36 0010 00C0      		rjmp .L3
 231:../usbdrv/usbdrv.c ****     }else{
  37               		.loc 1 231 0
  38 0012 3091 0000 		lds r19,usbTxStatus1+1
  39 0016 28E8      		ldi r18,lo8(-120)
  40 0018 2327      		eor r18,r19
  41 001a 2093 0000 		sts usbTxStatus1+1,r18
  42               	.L5:
  43 001e FC01      		movw r30,r24
  44 0020 A0E0      		ldi r26,lo8(usbTxStatus1+2)
  45 0022 B0E0      		ldi r27,hi8(usbTxStatus1+2)
  46               	.LBE25:
  47               	.LBE24:
  48               		.loc 1 246 0
  49 0024 862F      		mov r24,r22
  50               	.LVL2:
  51 0026 00C0      		rjmp .L4
  52               	.LVL3:
  53               	.L3:
  54               	.LBB27:
  55               	.LBB26:
 233:../usbdrv/usbdrv.c ****     }
  56               		.loc 1 233 0
  57 0028 2AE5      		ldi r18,lo8(90)
  58 002a 2093 0000 		sts usbTxStatus1,r18
  59 002e 00C0      		rjmp .L5
  60               	.LVL4:
  61               	.L4:
 238:../usbdrv/usbdrv.c ****     }while(--i > 0);            /* loop control at the end is 2 bytes shorter than at beginning */
  62               		.loc 1 238 0
  63 0030 9191      		ld r25,Z+
  64               	.LVL5:
  65 0032 9D93      		st X+,r25
 239:../usbdrv/usbdrv.c ****     usbCrc16Append(&txStatus->buffer[1], len);
  66               		.loc 1 239 0
  67 0034 8150      		subi r24,lo8(-(-1))
  68               	.LVL6:
  69 0036 01F4      		brne .L4
  70 0038 C62F      		mov r28,r22
 240:../usbdrv/usbdrv.c ****     txStatus->len = len + 4;    /* len must be given including sync byte */
  71               		.loc 1 240 0
  72 003a 80E0      		ldi r24,lo8(usbTxStatus1+2)
  73 003c 90E0      		ldi r25,hi8(usbTxStatus1+2)
  74               	.LVL7:
  75 003e 00D0      		rcall usbCrc16Append
  76               	.LVL8:
 241:../usbdrv/usbdrv.c ****     DBG2(0x21 + (((int)txStatus >> 3) & 3), txStatus->buffer, len + 3);
  77               		.loc 1 241 0
  78 0040 CC5F      		subi r28,lo8(-(4))
  79               	.LVL9:
  80 0042 C093 0000 		sts usbTxStatus1,r28
  81               	.LVL10:
  82               	.L1:
  83               	/* epilogue start */
  84               	.LBE26:
  85               	.LBE27:
 247:../usbdrv/usbdrv.c ****     usbGenericSetInterrupt(data, len, &usbTxStatus1);
 248:../usbdrv/usbdrv.c **** }
  86               		.loc 1 248 0
  87 0046 CF91      		pop r28
  88 0048 0895      		ret
  89               		.cfi_endproc
  90               	.LFE5:
  91               		.size	usbSetInterrupt, .-usbSetInterrupt
  92               	.global	usbPoll
  93               		.type	usbPoll, @function
  94               	usbPoll:
  95               	.LFB12:
 249:../usbdrv/usbdrv.c **** #endif
 250:../usbdrv/usbdrv.c **** 
 251:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT3
 252:../usbdrv/usbdrv.c **** USB_PUBLIC void usbSetInterrupt3(uchar *data, uchar len)
 253:../usbdrv/usbdrv.c **** {
 254:../usbdrv/usbdrv.c ****     usbGenericSetInterrupt(data, len, &usbTxStatus3);
 255:../usbdrv/usbdrv.c **** }
 256:../usbdrv/usbdrv.c **** #endif
 257:../usbdrv/usbdrv.c **** #endif /* USB_CFG_SUPPRESS_INTR_CODE */
 258:../usbdrv/usbdrv.c **** 
 259:../usbdrv/usbdrv.c **** /* ------------------ utilities for code following below ------------------- */
 260:../usbdrv/usbdrv.c **** 
 261:../usbdrv/usbdrv.c **** /* Use defines for the switch statement so that we can choose between an
 262:../usbdrv/usbdrv.c ****  * if()else if() and a switch/case based implementation. switch() is more
 263:../usbdrv/usbdrv.c ****  * efficient for a LARGE set of sequential choices, if() is better in all other
 264:../usbdrv/usbdrv.c ****  * cases.
 265:../usbdrv/usbdrv.c ****  */
 266:../usbdrv/usbdrv.c **** #if USB_CFG_USE_SWITCH_STATEMENT
 267:../usbdrv/usbdrv.c **** #   define SWITCH_START(cmd)       switch(cmd){{
 268:../usbdrv/usbdrv.c **** #   define SWITCH_CASE(value)      }break; case (value):{
 269:../usbdrv/usbdrv.c **** #   define SWITCH_CASE2(v1,v2)     }break; case (v1): case(v2):{
 270:../usbdrv/usbdrv.c **** #   define SWITCH_CASE3(v1,v2,v3)  }break; case (v1): case(v2): case(v3):{
 271:../usbdrv/usbdrv.c **** #   define SWITCH_DEFAULT          }break; default:{
 272:../usbdrv/usbdrv.c **** #   define SWITCH_END              }}
 273:../usbdrv/usbdrv.c **** #else
 274:../usbdrv/usbdrv.c **** #   define SWITCH_START(cmd)       {uchar _cmd = cmd; if(0){
 275:../usbdrv/usbdrv.c **** #   define SWITCH_CASE(value)      }else if(_cmd == (value)){
 276:../usbdrv/usbdrv.c **** #   define SWITCH_CASE2(v1,v2)     }else if(_cmd == (v1) || _cmd == (v2)){
 277:../usbdrv/usbdrv.c **** #   define SWITCH_CASE3(v1,v2,v3)  }else if(_cmd == (v1) || _cmd == (v2) || (_cmd == v3)){
 278:../usbdrv/usbdrv.c **** #   define SWITCH_DEFAULT          }else{
 279:../usbdrv/usbdrv.c **** #   define SWITCH_END              }}
 280:../usbdrv/usbdrv.c **** #endif
 281:../usbdrv/usbdrv.c **** 
 282:../usbdrv/usbdrv.c **** #ifndef USB_RX_USER_HOOK
 283:../usbdrv/usbdrv.c **** #define USB_RX_USER_HOOK(data, len)
 284:../usbdrv/usbdrv.c **** #endif
 285:../usbdrv/usbdrv.c **** #ifndef USB_SET_ADDRESS_HOOK
 286:../usbdrv/usbdrv.c **** #define USB_SET_ADDRESS_HOOK()
 287:../usbdrv/usbdrv.c **** #endif
 288:../usbdrv/usbdrv.c **** 
 289:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
 290:../usbdrv/usbdrv.c **** 
 291:../usbdrv/usbdrv.c **** /* We use if() instead of #if in the macro below because #if can't be used
 292:../usbdrv/usbdrv.c ****  * in macros and the compiler optimizes constant conditions anyway.
 293:../usbdrv/usbdrv.c ****  * This may cause problems with undefined symbols if compiled without
 294:../usbdrv/usbdrv.c ****  * optimizing!
 295:../usbdrv/usbdrv.c ****  */
 296:../usbdrv/usbdrv.c **** #define GET_DESCRIPTOR(cfgProp, staticName)         \
 297:../usbdrv/usbdrv.c ****     if(cfgProp){                                    \
 298:../usbdrv/usbdrv.c ****         if((cfgProp) & USB_PROP_IS_RAM)             \
 299:../usbdrv/usbdrv.c ****             flags = 0;                              \
 300:../usbdrv/usbdrv.c ****         if((cfgProp) & USB_PROP_IS_DYNAMIC){        \
 301:../usbdrv/usbdrv.c ****             len = usbFunctionDescriptor(rq);        \
 302:../usbdrv/usbdrv.c ****         }else{                                      \
 303:../usbdrv/usbdrv.c ****             len = USB_PROP_LENGTH(cfgProp);         \
 304:../usbdrv/usbdrv.c ****             usbMsgPtr = (uchar *)(staticName);      \
 305:../usbdrv/usbdrv.c ****         }                                           \
 306:../usbdrv/usbdrv.c ****     }
 307:../usbdrv/usbdrv.c **** 
 308:../usbdrv/usbdrv.c **** /* usbDriverDescriptor() is similar to usbFunctionDescriptor(), but used
 309:../usbdrv/usbdrv.c ****  * internally for all types of descriptors.
 310:../usbdrv/usbdrv.c ****  */
 311:../usbdrv/usbdrv.c **** static inline usbMsgLen_t usbDriverDescriptor(usbRequest_t *rq)
 312:../usbdrv/usbdrv.c **** {
 313:../usbdrv/usbdrv.c **** usbMsgLen_t len = 0;
 314:../usbdrv/usbdrv.c **** uchar       flags = USB_FLG_MSGPTR_IS_ROM;
 315:../usbdrv/usbdrv.c **** 
 316:../usbdrv/usbdrv.c ****     SWITCH_START(rq->wValue.bytes[1])
 317:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBDESCR_DEVICE)    /* 1 */
 318:../usbdrv/usbdrv.c ****         GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_DEVICE, usbDescriptorDevice)
 319:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBDESCR_CONFIG)    /* 2 */
 320:../usbdrv/usbdrv.c ****         GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_CONFIGURATION, usbDescriptorConfiguration)
 321:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBDESCR_STRING)    /* 3 */
 322:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_STRINGS & USB_PROP_IS_DYNAMIC
 323:../usbdrv/usbdrv.c ****         if(USB_CFG_DESCR_PROPS_STRINGS & USB_PROP_IS_RAM)
 324:../usbdrv/usbdrv.c ****             flags = 0;
 325:../usbdrv/usbdrv.c ****         len = usbFunctionDescriptor(rq);
 326:../usbdrv/usbdrv.c **** #else   /* USB_CFG_DESCR_PROPS_STRINGS & USB_PROP_IS_DYNAMIC */
 327:../usbdrv/usbdrv.c ****         SWITCH_START(rq->wValue.bytes[0])
 328:../usbdrv/usbdrv.c ****         SWITCH_CASE(0)
 329:../usbdrv/usbdrv.c ****             GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_STRING_0, usbDescriptorString0)
 330:../usbdrv/usbdrv.c ****         SWITCH_CASE(1)
 331:../usbdrv/usbdrv.c ****             GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_STRING_VENDOR, usbDescriptorStringVendor)
 332:../usbdrv/usbdrv.c ****         SWITCH_CASE(2)
 333:../usbdrv/usbdrv.c ****             GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_STRING_PRODUCT, usbDescriptorStringDevice)
 334:../usbdrv/usbdrv.c ****         SWITCH_CASE(3)
 335:../usbdrv/usbdrv.c ****             GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_STRING_SERIAL_NUMBER, usbDescriptorStringSerialNumbe
 336:../usbdrv/usbdrv.c ****         SWITCH_DEFAULT
 337:../usbdrv/usbdrv.c ****             if(USB_CFG_DESCR_PROPS_UNKNOWN & USB_PROP_IS_DYNAMIC){
 338:../usbdrv/usbdrv.c ****                 len = usbFunctionDescriptor(rq);
 339:../usbdrv/usbdrv.c ****             }
 340:../usbdrv/usbdrv.c ****         SWITCH_END
 341:../usbdrv/usbdrv.c **** #endif  /* USB_CFG_DESCR_PROPS_STRINGS & USB_PROP_IS_DYNAMIC */
 342:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_HID_REPORT  /* only support HID descriptors if enabled */
 343:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBDESCR_HID)       /* 0x21 */
 344:../usbdrv/usbdrv.c ****         GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_HID, usbDescriptorConfiguration + 18)
 345:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBDESCR_HID_REPORT)/* 0x22 */
 346:../usbdrv/usbdrv.c ****         GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_HID_REPORT, usbDescriptorHidReport)
 347:../usbdrv/usbdrv.c **** #endif
 348:../usbdrv/usbdrv.c ****     SWITCH_DEFAULT
 349:../usbdrv/usbdrv.c ****         if(USB_CFG_DESCR_PROPS_UNKNOWN & USB_PROP_IS_DYNAMIC){
 350:../usbdrv/usbdrv.c ****             len = usbFunctionDescriptor(rq);
 351:../usbdrv/usbdrv.c ****         }
 352:../usbdrv/usbdrv.c ****     SWITCH_END
 353:../usbdrv/usbdrv.c ****     usbMsgFlags = flags;
 354:../usbdrv/usbdrv.c ****     return len;
 355:../usbdrv/usbdrv.c **** }
 356:../usbdrv/usbdrv.c **** 
 357:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
 358:../usbdrv/usbdrv.c **** 
 359:../usbdrv/usbdrv.c **** /* usbDriverSetup() is similar to usbFunctionSetup(), but it's used for
 360:../usbdrv/usbdrv.c ****  * standard requests instead of class and custom requests.
 361:../usbdrv/usbdrv.c ****  */
 362:../usbdrv/usbdrv.c **** static inline usbMsgLen_t usbDriverSetup(usbRequest_t *rq)
 363:../usbdrv/usbdrv.c **** {
 364:../usbdrv/usbdrv.c **** uchar   len  = 0, *dataPtr = usbTxBuf + 9;  /* there are 2 bytes free space at the end of the buffe
 365:../usbdrv/usbdrv.c **** uchar   value = rq->wValue.bytes[0];
 366:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_HALT
 367:../usbdrv/usbdrv.c **** uchar   index = rq->wIndex.bytes[0];
 368:../usbdrv/usbdrv.c **** #endif
 369:../usbdrv/usbdrv.c **** 
 370:../usbdrv/usbdrv.c ****     dataPtr[0] = 0; /* default reply common to USBRQ_GET_STATUS and USBRQ_GET_INTERFACE */
 371:../usbdrv/usbdrv.c ****     SWITCH_START(rq->bRequest)
 372:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBRQ_GET_STATUS)           /* 0 */
 373:../usbdrv/usbdrv.c ****         uchar recipient = rq->bmRequestType & USBRQ_RCPT_MASK;  /* assign arith ops to variables to
 374:../usbdrv/usbdrv.c ****         if(USB_CFG_IS_SELF_POWERED && recipient == USBRQ_RCPT_DEVICE)
 375:../usbdrv/usbdrv.c ****             dataPtr[0] =  USB_CFG_IS_SELF_POWERED;
 376:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_HALT
 377:../usbdrv/usbdrv.c ****         if(recipient == USBRQ_RCPT_ENDPOINT && index == 0x81)   /* request status for endpoint 1 */
 378:../usbdrv/usbdrv.c ****             dataPtr[0] = usbTxLen1 == USBPID_STALL;
 379:../usbdrv/usbdrv.c **** #endif
 380:../usbdrv/usbdrv.c ****         dataPtr[1] = 0;
 381:../usbdrv/usbdrv.c ****         len = 2;
 382:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_HALT
 383:../usbdrv/usbdrv.c ****     SWITCH_CASE2(USBRQ_CLEAR_FEATURE, USBRQ_SET_FEATURE)    /* 1, 3 */
 384:../usbdrv/usbdrv.c ****         if(value == 0 && index == 0x81){    /* feature 0 == HALT for endpoint == 1 */
 385:../usbdrv/usbdrv.c ****             usbTxLen1 = rq->bRequest == USBRQ_CLEAR_FEATURE ? USBPID_NAK : USBPID_STALL;
 386:../usbdrv/usbdrv.c ****             usbResetDataToggling();
 387:../usbdrv/usbdrv.c ****         }
 388:../usbdrv/usbdrv.c **** #endif
 389:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBRQ_SET_ADDRESS)          /* 5 */
 390:../usbdrv/usbdrv.c ****         usbNewDeviceAddr = value;
 391:../usbdrv/usbdrv.c ****         USB_SET_ADDRESS_HOOK();
 392:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBRQ_GET_DESCRIPTOR)       /* 6 */
 393:../usbdrv/usbdrv.c ****         len = usbDriverDescriptor(rq);
 394:../usbdrv/usbdrv.c ****         goto skipMsgPtrAssignment;
 395:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBRQ_GET_CONFIGURATION)    /* 8 */
 396:../usbdrv/usbdrv.c ****         dataPtr = &usbConfiguration;  /* send current configuration value */
 397:../usbdrv/usbdrv.c ****         len = 1;
 398:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBRQ_SET_CONFIGURATION)    /* 9 */
 399:../usbdrv/usbdrv.c ****         usbConfiguration = value;
 400:../usbdrv/usbdrv.c ****         usbResetStall();
 401:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBRQ_GET_INTERFACE)        /* 10 */
 402:../usbdrv/usbdrv.c ****         len = 1;
 403:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT && !USB_CFG_SUPPRESS_INTR_CODE
 404:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBRQ_SET_INTERFACE)        /* 11 */
 405:../usbdrv/usbdrv.c ****         usbResetDataToggling();
 406:../usbdrv/usbdrv.c ****         usbResetStall();
 407:../usbdrv/usbdrv.c **** #endif
 408:../usbdrv/usbdrv.c ****     SWITCH_DEFAULT                          /* 7=SET_DESCRIPTOR, 12=SYNC_FRAME */
 409:../usbdrv/usbdrv.c ****         /* Should we add an optional hook here? */
 410:../usbdrv/usbdrv.c ****     SWITCH_END
 411:../usbdrv/usbdrv.c ****     usbMsgPtr = dataPtr;
 412:../usbdrv/usbdrv.c **** skipMsgPtrAssignment:
 413:../usbdrv/usbdrv.c ****     return len;
 414:../usbdrv/usbdrv.c **** }
 415:../usbdrv/usbdrv.c **** 
 416:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
 417:../usbdrv/usbdrv.c **** 
 418:../usbdrv/usbdrv.c **** /* usbProcessRx() is called for every message received by the interrupt
 419:../usbdrv/usbdrv.c ****  * routine. It distinguishes between SETUP and DATA packets and processes
 420:../usbdrv/usbdrv.c ****  * them accordingly.
 421:../usbdrv/usbdrv.c ****  */
 422:../usbdrv/usbdrv.c **** static inline void usbProcessRx(uchar *data, uchar len)
 423:../usbdrv/usbdrv.c **** {
 424:../usbdrv/usbdrv.c **** usbRequest_t    *rq = (void *)data;
 425:../usbdrv/usbdrv.c **** 
 426:../usbdrv/usbdrv.c **** /* usbRxToken can be:
 427:../usbdrv/usbdrv.c ****  * 0x2d 00101101 (USBPID_SETUP for setup data)
 428:../usbdrv/usbdrv.c ****  * 0xe1 11100001 (USBPID_OUT: data phase of setup transfer)
 429:../usbdrv/usbdrv.c ****  * 0...0x0f for OUT on endpoint X
 430:../usbdrv/usbdrv.c ****  */
 431:../usbdrv/usbdrv.c ****     DBG2(0x10 + (usbRxToken & 0xf), data, len + 2); /* SETUP=1d, SETUP-DATA=11, OUTx=1x */
 432:../usbdrv/usbdrv.c ****     USB_RX_USER_HOOK(data, len)
 433:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_FN_WRITEOUT
 434:../usbdrv/usbdrv.c ****     if(usbRxToken < 0x10){  /* OUT to endpoint != 0: endpoint number in usbRxToken */
 435:../usbdrv/usbdrv.c ****         usbFunctionWriteOut(data, len);
 436:../usbdrv/usbdrv.c ****         return;
 437:../usbdrv/usbdrv.c ****     }
 438:../usbdrv/usbdrv.c **** #endif
 439:../usbdrv/usbdrv.c ****     if(usbRxToken == (uchar)USBPID_SETUP){
 440:../usbdrv/usbdrv.c ****         if(len != 8)    /* Setup size must be always 8 bytes. Ignore otherwise. */
 441:../usbdrv/usbdrv.c ****             return;
 442:../usbdrv/usbdrv.c ****         usbMsgLen_t replyLen;
 443:../usbdrv/usbdrv.c ****         usbTxBuf[0] = USBPID_DATA0;         /* initialize data toggling */
 444:../usbdrv/usbdrv.c ****         usbTxLen = USBPID_NAK;              /* abort pending transmit */
 445:../usbdrv/usbdrv.c ****         usbMsgFlags = 0;
 446:../usbdrv/usbdrv.c ****         uchar type = rq->bmRequestType & USBRQ_TYPE_MASK;
 447:../usbdrv/usbdrv.c ****         if(type != USBRQ_TYPE_STANDARD){    /* standard requests are handled by driver */
 448:../usbdrv/usbdrv.c ****             replyLen = usbFunctionSetup(data);
 449:../usbdrv/usbdrv.c ****         }else{
 450:../usbdrv/usbdrv.c ****             replyLen = usbDriverSetup(rq);
 451:../usbdrv/usbdrv.c ****         }
 452:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_FN_READ || USB_CFG_IMPLEMENT_FN_WRITE
 453:../usbdrv/usbdrv.c ****         if(replyLen == USB_NO_MSG){         /* use user-supplied read/write function */
 454:../usbdrv/usbdrv.c ****             /* do some conditioning on replyLen, but on IN transfers only */
 455:../usbdrv/usbdrv.c ****             if((rq->bmRequestType & USBRQ_DIR_MASK) != USBRQ_DIR_HOST_TO_DEVICE){
 456:../usbdrv/usbdrv.c ****                 if(sizeof(replyLen) < sizeof(rq->wLength.word)){ /* help compiler with optimizing *
 457:../usbdrv/usbdrv.c ****                     replyLen = rq->wLength.bytes[0];
 458:../usbdrv/usbdrv.c ****                 }else{
 459:../usbdrv/usbdrv.c ****                     replyLen = rq->wLength.word;
 460:../usbdrv/usbdrv.c ****                 }
 461:../usbdrv/usbdrv.c ****             }
 462:../usbdrv/usbdrv.c ****             usbMsgFlags = USB_FLG_USE_USER_RW;
 463:../usbdrv/usbdrv.c ****         }else   /* The 'else' prevents that we limit a replyLen of USB_NO_MSG to the maximum transf
 464:../usbdrv/usbdrv.c **** #endif
 465:../usbdrv/usbdrv.c ****         if(sizeof(replyLen) < sizeof(rq->wLength.word)){ /* help compiler with optimizing */
 466:../usbdrv/usbdrv.c ****             if(!rq->wLength.bytes[1] && replyLen > rq->wLength.bytes[0])    /* limit length to max 
 467:../usbdrv/usbdrv.c ****                 replyLen = rq->wLength.bytes[0];
 468:../usbdrv/usbdrv.c ****         }else{
 469:../usbdrv/usbdrv.c ****             if(replyLen > rq->wLength.word)     /* limit length to max */
 470:../usbdrv/usbdrv.c ****                 replyLen = rq->wLength.word;
 471:../usbdrv/usbdrv.c ****         }
 472:../usbdrv/usbdrv.c ****         usbMsgLen = replyLen;
 473:../usbdrv/usbdrv.c ****     }else{  /* usbRxToken must be USBPID_OUT, which means data phase of setup (control-out) */
 474:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_FN_WRITE
 475:../usbdrv/usbdrv.c ****         if(usbMsgFlags & USB_FLG_USE_USER_RW){
 476:../usbdrv/usbdrv.c ****             uchar rval = usbFunctionWrite(data, len);
 477:../usbdrv/usbdrv.c ****             if(rval == 0xff){   /* an error occurred */
 478:../usbdrv/usbdrv.c ****                 usbTxLen = USBPID_STALL;
 479:../usbdrv/usbdrv.c ****             }else if(rval != 0){    /* This was the final package */
 480:../usbdrv/usbdrv.c ****                 usbMsgLen = 0;  /* answer with a zero-sized data packet */
 481:../usbdrv/usbdrv.c ****             }
 482:../usbdrv/usbdrv.c ****         }
 483:../usbdrv/usbdrv.c **** #endif
 484:../usbdrv/usbdrv.c ****     }
 485:../usbdrv/usbdrv.c **** }
 486:../usbdrv/usbdrv.c **** 
 487:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
 488:../usbdrv/usbdrv.c **** 
 489:../usbdrv/usbdrv.c **** /* This function is similar to usbFunctionRead(), but it's also called for
 490:../usbdrv/usbdrv.c ****  * data handled automatically by the driver (e.g. descriptor reads).
 491:../usbdrv/usbdrv.c ****  */
 492:../usbdrv/usbdrv.c **** static uchar usbDeviceRead(uchar *data, uchar len)
 493:../usbdrv/usbdrv.c **** {
 494:../usbdrv/usbdrv.c ****     if(len > 0){    /* don't bother app with 0 sized reads */
 495:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_FN_READ
 496:../usbdrv/usbdrv.c ****         if(usbMsgFlags & USB_FLG_USE_USER_RW){
 497:../usbdrv/usbdrv.c ****             len = usbFunctionRead(data, len);
 498:../usbdrv/usbdrv.c ****         }else
 499:../usbdrv/usbdrv.c **** #endif
 500:../usbdrv/usbdrv.c ****         {
 501:../usbdrv/usbdrv.c ****             uchar i = len, *r = usbMsgPtr;
 502:../usbdrv/usbdrv.c ****             if(usbMsgFlags & USB_FLG_MSGPTR_IS_ROM){    /* ROM data */
 503:../usbdrv/usbdrv.c ****                 do{
 504:../usbdrv/usbdrv.c ****                     uchar c = USB_READ_FLASH(r);    /* assign to char size variable to enforce byte
 505:../usbdrv/usbdrv.c ****                     *data++ = c;
 506:../usbdrv/usbdrv.c ****                     r++;
 507:../usbdrv/usbdrv.c ****                 }while(--i);
 508:../usbdrv/usbdrv.c ****             }else{  /* RAM data */
 509:../usbdrv/usbdrv.c ****                 do{
 510:../usbdrv/usbdrv.c ****                     *data++ = *r++;
 511:../usbdrv/usbdrv.c ****                 }while(--i);
 512:../usbdrv/usbdrv.c ****             }
 513:../usbdrv/usbdrv.c ****             usbMsgPtr = r;
 514:../usbdrv/usbdrv.c ****         }
 515:../usbdrv/usbdrv.c ****     }
 516:../usbdrv/usbdrv.c ****     return len;
 517:../usbdrv/usbdrv.c **** }
 518:../usbdrv/usbdrv.c **** 
 519:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
 520:../usbdrv/usbdrv.c **** 
 521:../usbdrv/usbdrv.c **** /* usbBuildTxBlock() is called when we have data to transmit and the
 522:../usbdrv/usbdrv.c ****  * interrupt routine's transmit buffer is empty.
 523:../usbdrv/usbdrv.c ****  */
 524:../usbdrv/usbdrv.c **** static inline void usbBuildTxBlock(void)
 525:../usbdrv/usbdrv.c **** {
 526:../usbdrv/usbdrv.c **** usbMsgLen_t wantLen;
 527:../usbdrv/usbdrv.c **** uchar       len;
 528:../usbdrv/usbdrv.c **** 
 529:../usbdrv/usbdrv.c ****     wantLen = usbMsgLen;
 530:../usbdrv/usbdrv.c ****     if(wantLen > 8)
 531:../usbdrv/usbdrv.c ****         wantLen = 8;
 532:../usbdrv/usbdrv.c ****     usbMsgLen -= wantLen;
 533:../usbdrv/usbdrv.c ****     usbTxBuf[0] ^= USBPID_DATA0 ^ USBPID_DATA1; /* DATA toggling */
 534:../usbdrv/usbdrv.c ****     len = usbDeviceRead(usbTxBuf + 1, wantLen);
 535:../usbdrv/usbdrv.c ****     if(len <= 8){           /* valid data packet */
 536:../usbdrv/usbdrv.c ****         usbCrc16Append(&usbTxBuf[1], len);
 537:../usbdrv/usbdrv.c ****         len += 4;           /* length including sync byte */
 538:../usbdrv/usbdrv.c ****         if(len < 12)        /* a partial package identifies end of message */
 539:../usbdrv/usbdrv.c ****             usbMsgLen = USB_NO_MSG;
 540:../usbdrv/usbdrv.c ****     }else{
 541:../usbdrv/usbdrv.c ****         len = USBPID_STALL;   /* stall the endpoint */
 542:../usbdrv/usbdrv.c ****         usbMsgLen = USB_NO_MSG;
 543:../usbdrv/usbdrv.c ****     }
 544:../usbdrv/usbdrv.c ****     usbTxLen = len;
 545:../usbdrv/usbdrv.c ****     DBG2(0x20, usbTxBuf, len-1);
 546:../usbdrv/usbdrv.c **** }
 547:../usbdrv/usbdrv.c **** 
 548:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
 549:../usbdrv/usbdrv.c **** 
 550:../usbdrv/usbdrv.c **** static inline void usbHandleResetHook(uchar notResetState)
 551:../usbdrv/usbdrv.c **** {
 552:../usbdrv/usbdrv.c **** #ifdef USB_RESET_HOOK
 553:../usbdrv/usbdrv.c **** static uchar    wasReset;
 554:../usbdrv/usbdrv.c **** uchar           isReset = !notResetState;
 555:../usbdrv/usbdrv.c **** 
 556:../usbdrv/usbdrv.c ****     if(wasReset != isReset){
 557:../usbdrv/usbdrv.c ****         USB_RESET_HOOK(isReset);
 558:../usbdrv/usbdrv.c ****         wasReset = isReset;
 559:../usbdrv/usbdrv.c ****     }
 560:../usbdrv/usbdrv.c **** #endif
 561:../usbdrv/usbdrv.c **** }
 562:../usbdrv/usbdrv.c **** 
 563:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
 564:../usbdrv/usbdrv.c **** 
 565:../usbdrv/usbdrv.c **** USB_PUBLIC void usbPoll(void)
 566:../usbdrv/usbdrv.c **** {
  96               		.loc 1 566 0
  97               		.cfi_startproc
  98 004a CF93      		push r28
  99               	.LCFI1:
 100               		.cfi_def_cfa_offset 3
 101               		.cfi_offset 28, -2
 102 004c DF93      		push r29
 103               	.LCFI2:
 104               		.cfi_def_cfa_offset 4
 105               		.cfi_offset 29, -3
 106               	/* prologue: function */
 107               	/* frame size = 0 */
 108               	/* stack size = 2 */
 109               	.L__stack_usage = 2
 567:../usbdrv/usbdrv.c **** schar   len;
 568:../usbdrv/usbdrv.c **** uchar   i;
 569:../usbdrv/usbdrv.c **** 
 570:../usbdrv/usbdrv.c ****     len = usbRxLen - 3;
 110               		.loc 1 570 0
 111 004e 6091 0000 		lds r22,usbRxLen
 112 0052 6350      		subi r22,lo8(-(-3))
 113               	.LVL11:
 571:../usbdrv/usbdrv.c ****     if(len >= 0){
 114               		.loc 1 571 0
 115 0054 67FD      		sbrc r22,7
 116 0056 00C0      		rjmp .L12
 572:../usbdrv/usbdrv.c **** /* We could check CRC16 here -- but ACK has already been sent anyway. If you
 573:../usbdrv/usbdrv.c ****  * need data integrity checks with this driver, check the CRC in your app
 574:../usbdrv/usbdrv.c ****  * code and report errors back to the host. Since the ACK was already sent,
 575:../usbdrv/usbdrv.c ****  * retries must be handled on application level.
 576:../usbdrv/usbdrv.c ****  * unsigned crc = usbCrc16(buffer + 1, usbRxLen - 3);
 577:../usbdrv/usbdrv.c ****  */
 578:../usbdrv/usbdrv.c ****         usbProcessRx(usbRxBuf + USB_BUFSIZE + 1 - usbInputBufOffset, len);
 117               		.loc 1 578 0
 118 0058 8091 0000 		lds r24,usbInputBufOffset
 119 005c CCE0      		ldi r28,lo8(12)
 120 005e D0E0      		ldi r29,0
 121 0060 C81B      		sub r28,r24
 122 0062 D109      		sbc r29,__zero_reg__
 123 0064 C050      		subi r28,lo8(-(usbRxBuf))
 124 0066 D040      		sbci r29,hi8(-(usbRxBuf))
 125               	.LVL12:
 126               	.LBB60:
 127               	.LBB61:
 439:../usbdrv/usbdrv.c ****         if(len != 8)    /* Setup size must be always 8 bytes. Ignore otherwise. */
 128               		.loc 1 439 0
 129 0068 8091 0000 		lds r24,usbRxToken
 130 006c 8D32      		cpi r24,lo8(45)
 131 006e 01F0      		breq .+2
 132 0070 00C0      		rjmp .L13
 133               	.LBB62:
 440:../usbdrv/usbdrv.c ****             return;
 134               		.loc 1 440 0
 135 0072 6830      		cpi r22,lo8(8)
 136 0074 01F0      		breq .+2
 137 0076 00C0      		rjmp .L15
 443:../usbdrv/usbdrv.c ****         usbTxLen = USBPID_NAK;              /* abort pending transmit */
 138               		.loc 1 443 0
 139 0078 83EC      		ldi r24,lo8(-61)
 140 007a 8093 0000 		sts usbTxBuf,r24
 444:../usbdrv/usbdrv.c ****         usbMsgFlags = 0;
 141               		.loc 1 444 0
 142 007e 8AE5      		ldi r24,lo8(90)
 143 0080 8093 0000 		sts usbTxLen,r24
 445:../usbdrv/usbdrv.c ****         uchar type = rq->bmRequestType & USBRQ_TYPE_MASK;
 144               		.loc 1 445 0
 145 0084 1092 0000 		sts usbMsgFlags,__zero_reg__
 446:../usbdrv/usbdrv.c ****         if(type != USBRQ_TYPE_STANDARD){    /* standard requests are handled by driver */
 146               		.loc 1 446 0
 147 0088 2881      		ld r18,Y
 148               	.LVL13:
 447:../usbdrv/usbdrv.c ****             replyLen = usbFunctionSetup(data);
 149               		.loc 1 447 0
 150 008a 822F      		mov r24,r18
 151 008c 8076      		andi r24,lo8(96)
 152               	.LVL14:
 153 008e 01F0      		breq .L16
 448:../usbdrv/usbdrv.c ****         }else{
 154               		.loc 1 448 0
 155 0090 CE01      		movw r24,r28
 156               	.LVL15:
 157 0092 00D0      		rcall usbFunctionSetup
 158               	.LVL16:
 453:../usbdrv/usbdrv.c ****             /* do some conditioning on replyLen, but on IN transfers only */
 159               		.loc 1 453 0
 160 0094 8F3F      		cpi r24,lo8(-1)
 161 0096 01F4      		brne .+2
 162 0098 00C0      		rjmp .L17
 163 009a 00C0      		rjmp .L18
 164               	.LVL17:
 165               	.L16:
 166               	.LBB63:
 167               	.LBB64:
 365:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_HALT
 168               		.loc 1 365 0
 169 009c 9A81      		ldd r25,Y+2
 170               	.LVL18:
 367:../usbdrv/usbdrv.c **** #endif
 171               		.loc 1 367 0
 172 009e 3C81      		ldd r19,Y+4
 173               	.LVL19:
 370:../usbdrv/usbdrv.c ****     SWITCH_START(rq->bRequest)
 174               		.loc 1 370 0
 175 00a0 1092 0000 		sts usbTxBuf+9,__zero_reg__
 176               	.LBB65:
 371:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBRQ_GET_STATUS)           /* 0 */
 177               		.loc 1 371 0
 178 00a4 8981      		ldd r24,Y+1
 179               	.LVL20:
 372:../usbdrv/usbdrv.c ****         uchar recipient = rq->bmRequestType & USBRQ_RCPT_MASK;  /* assign arith ops to variables to
 180               		.loc 1 372 0
 181 00a6 8111      		cpse r24,__zero_reg__
 182 00a8 00C0      		rjmp .L19
 183               	.LVL21:
 184               	.LBB66:
 377:../usbdrv/usbdrv.c ****             dataPtr[0] = usbTxLen1 == USBPID_STALL;
 185               		.loc 1 377 0
 186 00aa 2F71      		andi r18,lo8(31)
 187               	.LVL22:
 188 00ac 2230      		cpi r18,lo8(2)
 189 00ae 01F4      		brne .L20
 190 00b0 3138      		cpi r19,lo8(-127)
 191 00b2 01F4      		brne .L20
 378:../usbdrv/usbdrv.c **** #endif
 192               		.loc 1 378 0
 193 00b4 9091 0000 		lds r25,usbTxStatus1
 194               	.LVL23:
 195 00b8 81E0      		ldi r24,lo8(1)
 196               	.LVL24:
 197 00ba 9E31      		cpi r25,lo8(30)
 198 00bc 01F0      		breq .L21
 199 00be 80E0      		ldi r24,0
 200               	.L21:
 201 00c0 8093 0000 		sts usbTxBuf+9,r24
 202               	.L20:
 380:../usbdrv/usbdrv.c ****         len = 2;
 203               		.loc 1 380 0
 204 00c4 1092 0000 		sts usbTxBuf+10,__zero_reg__
 205               	.LVL25:
 206               	.LBE66:
 207               	.LBE65:
 364:../usbdrv/usbdrv.c **** uchar   value = rq->wValue.bytes[0];
 208               		.loc 1 364 0
 209 00c8 20E0      		ldi r18,lo8(usbTxBuf+9)
 210 00ca 30E0      		ldi r19,hi8(usbTxBuf+9)
 211               	.LVL26:
 212               	.LBB78:
 213               	.LBB67:
 381:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_HALT
 214               		.loc 1 381 0
 215 00cc 82E0      		ldi r24,lo8(2)
 216 00ce 00C0      		rjmp .L22
 217               	.LVL27:
 218               	.L19:
 219               	.LBE67:
 383:../usbdrv/usbdrv.c ****         if(value == 0 && index == 0x81){    /* feature 0 == HALT for endpoint == 1 */
 220               		.loc 1 383 0
 221 00d0 282F      		mov r18,r24
 222               	.LVL28:
 223 00d2 2D7F      		andi r18,lo8(-3)
 224 00d4 2130      		cpi r18,lo8(1)
 225 00d6 01F4      		brne .L23
 384:../usbdrv/usbdrv.c ****             usbTxLen1 = rq->bRequest == USBRQ_CLEAR_FEATURE ? USBPID_NAK : USBPID_STALL;
 226               		.loc 1 384 0
 227 00d8 9111      		cpse r25,__zero_reg__
 228 00da 00C0      		rjmp .L65
 229 00dc 3138      		cpi r19,lo8(-127)
 230 00de 01F0      		breq .+2
 231 00e0 00C0      		rjmp .L65
 385:../usbdrv/usbdrv.c ****             usbResetDataToggling();
 232               		.loc 1 385 0
 233 00e2 8130      		cpi r24,lo8(1)
 234 00e4 01F0      		breq .L60
 235 00e6 8EE1      		ldi r24,lo8(30)
 236               	.LVL29:
 237 00e8 00C0      		rjmp .L24
 238               	.LVL30:
 239               	.L60:
 240 00ea 8AE5      		ldi r24,lo8(90)
 241               	.LVL31:
 242               	.L24:
 243 00ec 8093 0000 		sts usbTxStatus1,r24
 244               	.LBB68:
 245               	.LBB69:
 200:../usbdrv/usbdrv.c **** #   if USB_CFG_HAVE_INTRIN_ENDPOINT3
 246               		.loc 1 200 0
 247 00f0 8BE4      		ldi r24,lo8(75)
 248 00f2 8093 0000 		sts usbTxStatus1+1,r24
 249 00f6 00C0      		rjmp .L65
 250               	.LVL32:
 251               	.L23:
 252               	.LBE69:
 253               	.LBE68:
 389:../usbdrv/usbdrv.c ****         usbNewDeviceAddr = value;
 254               		.loc 1 389 0
 255 00f8 8530      		cpi r24,lo8(5)
 256 00fa 01F4      		brne .L25
 390:../usbdrv/usbdrv.c ****         USB_SET_ADDRESS_HOOK();
 257               		.loc 1 390 0
 258 00fc 9093 0000 		sts usbNewDeviceAddr,r25
 259 0100 00C0      		rjmp .L65
 260               	.L25:
 392:../usbdrv/usbdrv.c ****         len = usbDriverDescriptor(rq);
 261               		.loc 1 392 0
 262 0102 8630      		cpi r24,lo8(6)
 263 0104 01F0      		breq .+2
 264 0106 00C0      		rjmp .L26
 265 0108 8B81      		ldd r24,Y+3
 266               	.LVL33:
 267               	.LBB70:
 268               	.LBB71:
 269               	.LBB72:
 317:../usbdrv/usbdrv.c ****         GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_DEVICE, usbDescriptorDevice)
 270               		.loc 1 317 0
 271 010a 8130      		cpi r24,lo8(1)
 272 010c 01F4      		brne .L27
 273               	.LVL34:
 318:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBDESCR_CONFIG)    /* 2 */
 274               		.loc 1 318 0
 275 010e 80E0      		ldi r24,lo8(usbDescriptorDevice)
 276 0110 90E0      		ldi r25,hi8(usbDescriptorDevice)
 277               	.LVL35:
 278 0112 9093 0000 		sts usbMsgPtr+1,r25
 279 0116 8093 0000 		sts usbMsgPtr,r24
 280 011a 82E1      		ldi r24,lo8(18)
 281 011c 00C0      		rjmp .L28
 282               	.LVL36:
 283               	.L27:
 319:../usbdrv/usbdrv.c ****         GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_CONFIGURATION, usbDescriptorConfiguration)
 284               		.loc 1 319 0
 285 011e 8230      		cpi r24,lo8(2)
 286 0120 01F4      		brne .L29
 287               	.LVL37:
 320:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBDESCR_STRING)    /* 3 */
 288               		.loc 1 320 0
 289 0122 80E0      		ldi r24,lo8(usbDescriptorConfiguration)
 290 0124 90E0      		ldi r25,hi8(usbDescriptorConfiguration)
 291               	.LVL38:
 292 0126 9093 0000 		sts usbMsgPtr+1,r25
 293 012a 8093 0000 		sts usbMsgPtr,r24
 294 012e 82E2      		ldi r24,lo8(34)
 295 0130 00C0      		rjmp .L28
 296               	.LVL39:
 297               	.L29:
 321:../usbdrv/usbdrv.c **** #if USB_CFG_DESCR_PROPS_STRINGS & USB_PROP_IS_DYNAMIC
 298               		.loc 1 321 0
 299 0132 8330      		cpi r24,lo8(3)
 300 0134 01F4      		brne .L30
 301               	.LVL40:
 302               	.LBB73:
 328:../usbdrv/usbdrv.c ****             GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_STRING_0, usbDescriptorString0)
 303               		.loc 1 328 0
 304 0136 9111      		cpse r25,__zero_reg__
 305 0138 00C0      		rjmp .L31
 306               	.LVL41:
 329:../usbdrv/usbdrv.c ****         SWITCH_CASE(1)
 307               		.loc 1 329 0
 308 013a 80E0      		ldi r24,lo8(usbDescriptorString0)
 309 013c 90E0      		ldi r25,hi8(usbDescriptorString0)
 310               	.LVL42:
 311 013e 9093 0000 		sts usbMsgPtr+1,r25
 312 0142 8093 0000 		sts usbMsgPtr,r24
 313 0146 84E0      		ldi r24,lo8(4)
 314 0148 00C0      		rjmp .L28
 315               	.LVL43:
 316               	.L31:
 330:../usbdrv/usbdrv.c ****             GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_STRING_VENDOR, usbDescriptorStringVendor)
 317               		.loc 1 330 0
 318 014a 9130      		cpi r25,lo8(1)
 319 014c 01F4      		brne .L32
 320               	.LVL44:
 331:../usbdrv/usbdrv.c ****         SWITCH_CASE(2)
 321               		.loc 1 331 0
 322 014e 80E0      		ldi r24,lo8(usbDescriptorStringVendor)
 323 0150 90E0      		ldi r25,hi8(usbDescriptorStringVendor)
 324               	.LVL45:
 325 0152 9093 0000 		sts usbMsgPtr+1,r25
 326 0156 8093 0000 		sts usbMsgPtr,r24
 327 015a 86E1      		ldi r24,lo8(22)
 328 015c 00C0      		rjmp .L28
 329               	.LVL46:
 330               	.L32:
 332:../usbdrv/usbdrv.c ****             GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_STRING_PRODUCT, usbDescriptorStringDevice)
 331               		.loc 1 332 0
 332 015e 9230      		cpi r25,lo8(2)
 333 0160 01F4      		brne .L62
 334               	.LVL47:
 333:../usbdrv/usbdrv.c ****         SWITCH_CASE(3)
 335               		.loc 1 333 0
 336 0162 80E0      		ldi r24,lo8(usbDescriptorStringDevice)
 337 0164 90E0      		ldi r25,hi8(usbDescriptorStringDevice)
 338               	.LVL48:
 339 0166 9093 0000 		sts usbMsgPtr+1,r25
 340 016a 8093 0000 		sts usbMsgPtr,r24
 341 016e 84E2      		ldi r24,lo8(36)
 342 0170 00C0      		rjmp .L28
 343               	.LVL49:
 344               	.L30:
 345               	.LBE73:
 343:../usbdrv/usbdrv.c ****         GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_HID, usbDescriptorConfiguration + 18)
 346               		.loc 1 343 0
 347 0172 8132      		cpi r24,lo8(33)
 348 0174 01F4      		brne .L33
 349               	.LVL50:
 344:../usbdrv/usbdrv.c ****     SWITCH_CASE(USBDESCR_HID_REPORT)/* 0x22 */
 350               		.loc 1 344 0
 351 0176 80E0      		ldi r24,lo8(usbDescriptorConfiguration+18)
 352 0178 90E0      		ldi r25,hi8(usbDescriptorConfiguration+18)
 353               	.LVL51:
 354 017a 9093 0000 		sts usbMsgPtr+1,r25
 355 017e 8093 0000 		sts usbMsgPtr,r24
 356 0182 89E0      		ldi r24,lo8(9)
 357 0184 00C0      		rjmp .L28
 358               	.LVL52:
 359               	.L33:
 345:../usbdrv/usbdrv.c ****         GET_DESCRIPTOR(USB_CFG_DESCR_PROPS_HID_REPORT, usbDescriptorHidReport)
 360               		.loc 1 345 0
 361 0186 8232      		cpi r24,lo8(34)
 362 0188 01F4      		brne .L62
 363               	.LVL53:
 346:../usbdrv/usbdrv.c **** #endif
 364               		.loc 1 346 0
 365 018a 80E0      		ldi r24,lo8(usbDescriptorHidReport)
 366 018c 90E0      		ldi r25,hi8(usbDescriptorHidReport)
 367               	.LVL54:
 368 018e 9093 0000 		sts usbMsgPtr+1,r25
 369 0192 8093 0000 		sts usbMsgPtr,r24
 370 0196 80E5      		ldi r24,lo8(80)
 371 0198 00C0      		rjmp .L28
 372               	.LVL55:
 373               	.L62:
 374               	.LBE72:
 313:../usbdrv/usbdrv.c **** uchar       flags = USB_FLG_MSGPTR_IS_ROM;
 375               		.loc 1 313 0
 376 019a 80E0      		ldi r24,0
 377               	.LVL56:
 378               	.L28:
 353:../usbdrv/usbdrv.c ****     return len;
 379               		.loc 1 353 0
 380 019c 90E4      		ldi r25,lo8(64)
 381               	.LVL57:
 382 019e 9093 0000 		sts usbMsgFlags,r25
 383               	.LVL58:
 384 01a2 00C0      		rjmp .L18
 385               	.LVL59:
 386               	.L26:
 387               	.LBE71:
 388               	.LBE70:
 395:../usbdrv/usbdrv.c ****         dataPtr = &usbConfiguration;  /* send current configuration value */
 389               		.loc 1 395 0
 390 01a4 8830      		cpi r24,lo8(8)
 391 01a6 01F0      		breq .L63
 398:../usbdrv/usbdrv.c ****         usbConfiguration = value;
 392               		.loc 1 398 0
 393 01a8 8930      		cpi r24,lo8(9)
 394 01aa 01F4      		brne .L35
 399:../usbdrv/usbdrv.c ****         usbResetStall();
 395               		.loc 1 399 0
 396 01ac 9093 0000 		sts usbConfiguration,r25
 397 01b0 00C0      		rjmp .L93
 398               	.L35:
 401:../usbdrv/usbdrv.c ****         len = 1;
 399               		.loc 1 401 0
 400 01b2 8A30      		cpi r24,lo8(10)
 401 01b4 01F0      		breq .L64
 404:../usbdrv/usbdrv.c ****         usbResetDataToggling();
 402               		.loc 1 404 0
 403 01b6 8B30      		cpi r24,lo8(11)
 404 01b8 01F4      		brne .L65
 405               	.LBB74:
 406               	.LBB75:
 200:../usbdrv/usbdrv.c **** #   if USB_CFG_HAVE_INTRIN_ENDPOINT3
 407               		.loc 1 200 0
 408 01ba 8BE4      		ldi r24,lo8(75)
 409               	.LVL60:
 410 01bc 8093 0000 		sts usbTxStatus1+1,r24
 411               	.L93:
 412               	.LBE75:
 413               	.LBE74:
 414               	.LBB76:
 415               	.LBB77:
 210:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT3
 416               		.loc 1 210 0
 417 01c0 8AE5      		ldi r24,lo8(90)
 418 01c2 8093 0000 		sts usbTxStatus1,r24
 419 01c6 00C0      		rjmp .L65
 420               	.LVL61:
 421               	.L63:
 422               	.LBE77:
 423               	.LBE76:
 396:../usbdrv/usbdrv.c ****         len = 1;
 424               		.loc 1 396 0
 425 01c8 20E0      		ldi r18,lo8(usbConfiguration)
 426 01ca 30E0      		ldi r19,hi8(usbConfiguration)
 427 01cc 00C0      		rjmp .L91
 428               	.L64:
 429               	.LBE78:
 364:../usbdrv/usbdrv.c **** uchar   value = rq->wValue.bytes[0];
 430               		.loc 1 364 0
 431 01ce 20E0      		ldi r18,lo8(usbTxBuf+9)
 432 01d0 30E0      		ldi r19,hi8(usbTxBuf+9)
 433               	.LVL62:
 434               	.L91:
 435               	.LBB79:
 402:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT && !USB_CFG_SUPPRESS_INTR_CODE
 436               		.loc 1 402 0
 437 01d2 81E0      		ldi r24,lo8(1)
 438               	.LVL63:
 439 01d4 00C0      		rjmp .L22
 440               	.L65:
 441               	.LBE79:
 364:../usbdrv/usbdrv.c **** uchar   value = rq->wValue.bytes[0];
 442               		.loc 1 364 0
 443 01d6 20E0      		ldi r18,lo8(usbTxBuf+9)
 444 01d8 30E0      		ldi r19,hi8(usbTxBuf+9)
 445               	.LVL64:
 446 01da 80E0      		ldi r24,0
 447               	.LVL65:
 448               	.L22:
 411:../usbdrv/usbdrv.c **** skipMsgPtrAssignment:
 449               		.loc 1 411 0
 450 01dc 3093 0000 		sts usbMsgPtr+1,r19
 451 01e0 2093 0000 		sts usbMsgPtr,r18
 452 01e4 00C0      		rjmp .L18
 453               	.LVL66:
 454               	.L17:
 455               	.LBE64:
 456               	.LBE63:
 455:../usbdrv/usbdrv.c ****                 if(sizeof(replyLen) < sizeof(rq->wLength.word)){ /* help compiler with optimizing *
 457               		.loc 1 455 0
 458 01e6 9881      		ld r25,Y
 459 01e8 97FD      		sbrc r25,7
 457:../usbdrv/usbdrv.c ****                 }else{
 460               		.loc 1 457 0
 461 01ea 8E81      		ldd r24,Y+6
 462               	.LVL67:
 463               	.L36:
 462:../usbdrv/usbdrv.c ****         }else   /* The 'else' prevents that we limit a replyLen of USB_NO_MSG to the maximum transf
 464               		.loc 1 462 0
 465 01ec 90E8      		ldi r25,lo8(-128)
 466 01ee 9093 0000 		sts usbMsgFlags,r25
 467 01f2 00C0      		rjmp .L37
 468               	.LVL68:
 469               	.L18:
 466:../usbdrv/usbdrv.c ****                 replyLen = rq->wLength.bytes[0];
 470               		.loc 1 466 0
 471 01f4 9F81      		ldd r25,Y+7
 472 01f6 9111      		cpse r25,__zero_reg__
 473 01f8 00C0      		rjmp .L37
 474 01fa 9E81      		ldd r25,Y+6
 475 01fc 9817      		cp r25,r24
 476 01fe 00F4      		brsh .L37
 477 0200 892F      		mov r24,r25
 478               	.LVL69:
 479               	.L37:
 472:../usbdrv/usbdrv.c ****     }else{  /* usbRxToken must be USBPID_OUT, which means data phase of setup (control-out) */
 480               		.loc 1 472 0
 481 0202 8093 0000 		sts usbMsgLen,r24
 482 0206 00C0      		rjmp .L15
 483               	.LVL70:
 484               	.L13:
 485               	.LBE62:
 475:../usbdrv/usbdrv.c ****             uchar rval = usbFunctionWrite(data, len);
 486               		.loc 1 475 0
 487 0208 8091 0000 		lds r24,usbMsgFlags
 488 020c 87FF      		sbrs r24,7
 489 020e 00C0      		rjmp .L15
 490               	.LBB80:
 476:../usbdrv/usbdrv.c ****             if(rval == 0xff){   /* an error occurred */
 491               		.loc 1 476 0
 492 0210 CE01      		movw r24,r28
 493 0212 00D0      		rcall usbFunctionWrite
 494               	.LVL71:
 477:../usbdrv/usbdrv.c ****                 usbTxLen = USBPID_STALL;
 495               		.loc 1 477 0
 496 0214 8F3F      		cpi r24,lo8(-1)
 497 0216 01F4      		brne .L40
 478:../usbdrv/usbdrv.c ****             }else if(rval != 0){    /* This was the final package */
 498               		.loc 1 478 0
 499 0218 8EE1      		ldi r24,lo8(30)
 500               	.LVL72:
 501 021a 8093 0000 		sts usbTxLen,r24
 502 021e 00C0      		rjmp .L15
 503               	.LVL73:
 504               	.L40:
 479:../usbdrv/usbdrv.c ****                 usbMsgLen = 0;  /* answer with a zero-sized data packet */
 505               		.loc 1 479 0
 506 0220 8111      		cpse r24,__zero_reg__
 480:../usbdrv/usbdrv.c ****             }
 507               		.loc 1 480 0
 508 0222 1092 0000 		sts usbMsgLen,__zero_reg__
 509               	.LVL74:
 510               	.L15:
 511               	.LBE80:
 512               	.LBE61:
 513               	.LBE60:
 579:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_FLOWCONTROL
 580:../usbdrv/usbdrv.c ****         if(usbRxLen > 0)    /* only mark as available if not inactivated */
 581:../usbdrv/usbdrv.c ****             usbRxLen = 0;
 582:../usbdrv/usbdrv.c **** #else
 583:../usbdrv/usbdrv.c ****         usbRxLen = 0;       /* mark rx buffer as available */
 514               		.loc 1 583 0
 515 0226 1092 0000 		sts usbRxLen,__zero_reg__
 516               	.LVL75:
 517               	.L12:
 584:../usbdrv/usbdrv.c **** #endif
 585:../usbdrv/usbdrv.c ****     }
 586:../usbdrv/usbdrv.c ****     if(usbTxLen & 0x10){    /* transmit system idle */
 518               		.loc 1 586 0
 519 022a 8091 0000 		lds r24,usbTxLen
 520 022e 84FF      		sbrs r24,4
 521 0230 00C0      		rjmp .L41
 587:../usbdrv/usbdrv.c ****         if(usbMsgLen != USB_NO_MSG){    /* transmit data pending? */
 522               		.loc 1 587 0
 523 0232 8091 0000 		lds r24,usbMsgLen
 524 0236 8F3F      		cpi r24,lo8(-1)
 525 0238 01F4      		brne .+2
 526 023a 00C0      		rjmp .L41
 527               	.LVL76:
 528 023c C82F      		mov r28,r24
 529 023e 8930      		cpi r24,lo8(9)
 530 0240 00F0      		brlo .L42
 531 0242 C8E0      		ldi r28,lo8(8)
 532               	.L42:
 533               	.LVL77:
 534               	.LBB81:
 535               	.LBB82:
 532:../usbdrv/usbdrv.c ****     usbTxBuf[0] ^= USBPID_DATA0 ^ USBPID_DATA1; /* DATA toggling */
 536               		.loc 1 532 0
 537 0244 8C1B      		sub r24,r28
 538 0246 8093 0000 		sts usbMsgLen,r24
 533:../usbdrv/usbdrv.c ****     len = usbDeviceRead(usbTxBuf + 1, wantLen);
 539               		.loc 1 533 0
 540 024a 9091 0000 		lds r25,usbTxBuf
 541 024e 88E8      		ldi r24,lo8(-120)
 542 0250 8927      		eor r24,r25
 543 0252 8093 0000 		sts usbTxBuf,r24
 544               	.LVL78:
 545               	.LBB83:
 546               	.LBB84:
 494:../usbdrv/usbdrv.c **** #if USB_CFG_IMPLEMENT_FN_READ
 547               		.loc 1 494 0
 548 0256 CC23      		tst r28
 549 0258 01F4      		brne .+2
 550 025a 00C0      		rjmp .L43
 496:../usbdrv/usbdrv.c ****             len = usbFunctionRead(data, len);
 551               		.loc 1 496 0
 552 025c 2091 0000 		lds r18,usbMsgFlags
 553 0260 27FF      		sbrs r18,7
 554 0262 00C0      		rjmp .L44
 497:../usbdrv/usbdrv.c ****         }else
 555               		.loc 1 497 0
 556 0264 6C2F      		mov r22,r28
 557 0266 80E0      		ldi r24,lo8(usbTxBuf+1)
 558 0268 90E0      		ldi r25,hi8(usbTxBuf+1)
 559               	.LVL79:
 560 026a 00D0      		rcall usbFunctionRead
 561               	.LVL80:
 562 026c C82F      		mov r28,r24
 563               	.LVL81:
 564               	.LBE84:
 565               	.LBE83:
 535:../usbdrv/usbdrv.c ****         usbCrc16Append(&usbTxBuf[1], len);
 566               		.loc 1 535 0
 567 026e 8930      		cpi r24,lo8(9)
 568 0270 00F4      		brsh .L90
 569 0272 00C0      		rjmp .L45
 570               	.LVL82:
 571               	.L44:
 572               	.LBB89:
 573               	.LBB88:
 574               	.LBB85:
 501:../usbdrv/usbdrv.c ****             if(usbMsgFlags & USB_FLG_MSGPTR_IS_ROM){    /* ROM data */
 575               		.loc 1 501 0
 576 0274 8091 0000 		lds r24,usbMsgPtr
 577 0278 9091 0000 		lds r25,usbMsgPtr+1
 578               	.LVL83:
 502:../usbdrv/usbdrv.c ****                 do{
 579               		.loc 1 502 0
 580 027c 26FF      		sbrs r18,6
 581 027e 00C0      		rjmp .L47
 582 0280 A0E0      		ldi r26,lo8(usbTxBuf+1)
 583 0282 B0E0      		ldi r27,hi8(usbTxBuf+1)
 584               	.LVL84:
 585 0284 FC01      		movw r30,r24
 586 0286 2C2F      		mov r18,r28
 587               	.LVL85:
 588               	.L48:
 589               	.LBB86:
 590               	.LBB87:
 504:../usbdrv/usbdrv.c ****                     *data++ = c;
 591               		.loc 1 504 0
 592               	/* #APP */
 593               	 ;  504 "../usbdrv/usbdrv.c" 1
 594 0288 3491      		lpm r19, Z
 595               		
 596               	 ;  0 "" 2
 597               	.LVL86:
 598               	/* #NOAPP */
 599               	.LBE87:
 505:../usbdrv/usbdrv.c ****                     r++;
 600               		.loc 1 505 0
 601 028a 3D93      		st X+,r19
 506:../usbdrv/usbdrv.c ****                 }while(--i);
 602               		.loc 1 506 0
 603 028c 3196      		adiw r30,1
 604               	.LVL87:
 605               	.LBE86:
 507:../usbdrv/usbdrv.c ****             }else{  /* RAM data */
 606               		.loc 1 507 0
 607 028e 2150      		subi r18,lo8(-(-1))
 608               	.LVL88:
 609 0290 01F4      		brne .L48
 610 0292 00C0      		rjmp .L92
 611               	.LVL89:
 612               	.L47:
 613 0294 DC01      		movw r26,r24
 614 0296 E0E0      		ldi r30,lo8(usbTxBuf+1)
 615 0298 F0E0      		ldi r31,hi8(usbTxBuf+1)
 616               	.LVL90:
 502:../usbdrv/usbdrv.c ****                 do{
 617               		.loc 1 502 0
 618 029a 2C2F      		mov r18,r28
 619               	.LVL91:
 620               	.L50:
 510:../usbdrv/usbdrv.c ****                 }while(--i);
 621               		.loc 1 510 0
 622 029c 3D91      		ld r19,X+
 623               	.LVL92:
 624 029e 3193      		st Z+,r19
 511:../usbdrv/usbdrv.c ****             }
 625               		.loc 1 511 0
 626 02a0 2150      		subi r18,lo8(-(-1))
 627               	.LVL93:
 628 02a2 01F4      		brne .L50
 629               	.LVL94:
 630               	.L92:
 631 02a4 2FEF      		ldi r18,lo8(-1)
 632               	.LVL95:
 633 02a6 2C0F      		add r18,r28
 634 02a8 30E0      		ldi r19,0
 635 02aa 2F5F      		subi r18,-1
 636 02ac 3F4F      		sbci r19,-1
 637 02ae 820F      		add r24,r18
 638 02b0 931F      		adc r25,r19
 639               	.LVL96:
 513:../usbdrv/usbdrv.c ****         }
 640               		.loc 1 513 0
 641 02b2 9093 0000 		sts usbMsgPtr+1,r25
 642 02b6 8093 0000 		sts usbMsgPtr,r24
 643               	.LVL97:
 644               	.L45:
 645               	.LBE85:
 646               	.LBE88:
 647               	.LBE89:
 536:../usbdrv/usbdrv.c ****         len += 4;           /* length including sync byte */
 648               		.loc 1 536 0
 649 02ba 6C2F      		mov r22,r28
 650 02bc 80E0      		ldi r24,lo8(usbTxBuf+1)
 651 02be 90E0      		ldi r25,hi8(usbTxBuf+1)
 652 02c0 00D0      		rcall usbCrc16Append
 653               	.LVL98:
 537:../usbdrv/usbdrv.c ****         if(len < 12)        /* a partial package identifies end of message */
 654               		.loc 1 537 0
 655 02c2 CC5F      		subi r28,lo8(-(4))
 656               	.LVL99:
 538:../usbdrv/usbdrv.c ****             usbMsgLen = USB_NO_MSG;
 657               		.loc 1 538 0
 658 02c4 CC30      		cpi r28,lo8(12)
 659 02c6 01F0      		breq .L51
 660               	.LVL100:
 661               	.L57:
 539:../usbdrv/usbdrv.c ****     }else{
 662               		.loc 1 539 0
 663 02c8 8FEF      		ldi r24,lo8(-1)
 664 02ca 8093 0000 		sts usbMsgLen,r24
 665 02ce 00C0      		rjmp .L51
 666               	.LVL101:
 667               	.L90:
 542:../usbdrv/usbdrv.c ****     }
 668               		.loc 1 542 0
 669 02d0 8FEF      		ldi r24,lo8(-1)
 670 02d2 8093 0000 		sts usbMsgLen,r24
 541:../usbdrv/usbdrv.c ****         usbMsgLen = USB_NO_MSG;
 671               		.loc 1 541 0
 672 02d6 CEE1      		ldi r28,lo8(30)
 673               	.LVL102:
 674               	.L51:
 544:../usbdrv/usbdrv.c ****     DBG2(0x20, usbTxBuf, len-1);
 675               		.loc 1 544 0
 676 02d8 C093 0000 		sts usbTxLen,r28
 677               	.LVL103:
 678               	.L41:
 679               	.LBE82:
 680               	.LBE81:
 588:../usbdrv/usbdrv.c ****             usbBuildTxBlock();
 589:../usbdrv/usbdrv.c ****         }
 590:../usbdrv/usbdrv.c ****     }
 591:../usbdrv/usbdrv.c ****     for(i = 20; i > 0; i--){
 681               		.loc 1 591 0
 682 02dc 84E1      		ldi r24,lo8(20)
 683               	.LVL104:
 684               	.L53:
 685               	.LBB91:
 592:../usbdrv/usbdrv.c ****         uchar usbLineStatus = USBIN & USBMASK;
 686               		.loc 1 592 0
 687 02de 96B3      		in r25,0x16
 688               	.LVL105:
 593:../usbdrv/usbdrv.c ****         if(usbLineStatus != 0)  /* SE0 has ended */
 689               		.loc 1 593 0
 690 02e0 9474      		andi r25,lo8(68)
 691               	.LVL106:
 692 02e2 01F4      		brne .L52
 693               	.LBE91:
 591:../usbdrv/usbdrv.c ****         uchar usbLineStatus = USBIN & USBMASK;
 694               		.loc 1 591 0 discriminator 2
 695 02e4 8150      		subi r24,lo8(-(-1))
 696               	.LVL107:
 697 02e6 01F4      		brne .L53
 594:../usbdrv/usbdrv.c ****             goto isNotReset;
 595:../usbdrv/usbdrv.c ****     }
 596:../usbdrv/usbdrv.c ****     /* RESET condition, called multiple times during reset */
 597:../usbdrv/usbdrv.c ****     usbNewDeviceAddr = 0;
 698               		.loc 1 597 0
 699 02e8 1092 0000 		sts usbNewDeviceAddr,__zero_reg__
 598:../usbdrv/usbdrv.c ****     usbDeviceAddr = 0;
 700               		.loc 1 598 0
 701 02ec 1092 0000 		sts usbDeviceAddr,__zero_reg__
 702               	.LBB92:
 703               	.LBB93:
 210:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT3
 704               		.loc 1 210 0
 705 02f0 9AE5      		ldi r25,lo8(90)
 706               	.LVL108:
 707 02f2 9093 0000 		sts usbTxStatus1,r25
 708               	.L52:
 709               	.LVL109:
 710               	.LBE93:
 711               	.LBE92:
 712               	.LBB94:
 713               	.LBB95:
 554:../usbdrv/usbdrv.c **** 
 714               		.loc 1 554 0
 715 02f6 C1E0      		ldi r28,lo8(1)
 716 02f8 8111      		cpse r24,__zero_reg__
 717 02fa C0E0      		ldi r28,0
 718               	.L54:
 719               	.LVL110:
 556:../usbdrv/usbdrv.c ****         USB_RESET_HOOK(isReset);
 720               		.loc 1 556 0
 721 02fc 9091 0000 		lds r25,wasReset.1770
 722 0300 C917      		cp r28,r25
 723 0302 01F0      		breq .L11
 557:../usbdrv/usbdrv.c ****         wasReset = isReset;
 724               		.loc 1 557 0
 725 0304 8823      		tst r24
 726 0306 01F0      		breq .L56
 727               	/* #APP */
 728               	 ;  557 "../usbdrv/usbdrv.c" 1
 729 0308 F894      		cli
 730               	 ;  0 "" 2
 731               	/* #NOAPP */
 732 030a 00D0      		rcall calibrateOscillator
 733               	.LVL111:
 734               	/* #APP */
 735               	 ;  557 "../usbdrv/usbdrv.c" 1
 736 030c 7894      		sei
 737               	 ;  0 "" 2
 738               	/* #NOAPP */
 739               	.L56:
 558:../usbdrv/usbdrv.c ****     }
 740               		.loc 1 558 0
 741 030e C093 0000 		sts wasReset.1770,r28
 742               	.LVL112:
 743               	.LBE95:
 744               	.LBE94:
 599:../usbdrv/usbdrv.c ****     usbResetStall();
 600:../usbdrv/usbdrv.c ****     DBG1(0xff, 0, 0);
 601:../usbdrv/usbdrv.c **** isNotReset:
 602:../usbdrv/usbdrv.c ****     usbHandleResetHook(i);
 603:../usbdrv/usbdrv.c **** }
 745               		.loc 1 603 0
 746 0312 00C0      		rjmp .L11
 747               	.LVL113:
 748               	.L43:
 749               	.LBB96:
 750               	.LBB90:
 536:../usbdrv/usbdrv.c ****         len += 4;           /* length including sync byte */
 751               		.loc 1 536 0
 752 0314 60E0      		ldi r22,0
 753 0316 80E0      		ldi r24,lo8(usbTxBuf+1)
 754 0318 90E0      		ldi r25,hi8(usbTxBuf+1)
 755 031a 00D0      		rcall usbCrc16Append
 756               	.LVL114:
 537:../usbdrv/usbdrv.c ****         if(len < 12)        /* a partial package identifies end of message */
 757               		.loc 1 537 0
 758 031c C4E0      		ldi r28,lo8(4)
 759               	.LVL115:
 760 031e 00C0      		rjmp .L57
 761               	.LVL116:
 762               	.L11:
 763               	/* epilogue start */
 764               	.LBE90:
 765               	.LBE96:
 766               		.loc 1 603 0
 767 0320 DF91      		pop r29
 768 0322 CF91      		pop r28
 769 0324 0895      		ret
 770               		.cfi_endproc
 771               	.LFE12:
 772               		.size	usbPoll, .-usbPoll
 773               	.global	usbInit
 774               		.type	usbInit, @function
 775               	usbInit:
 776               	.LFB13:
 604:../usbdrv/usbdrv.c **** 
 605:../usbdrv/usbdrv.c **** /* ------------------------------------------------------------------------- */
 606:../usbdrv/usbdrv.c **** 
 607:../usbdrv/usbdrv.c **** USB_PUBLIC void usbInit(void)
 608:../usbdrv/usbdrv.c **** {
 777               		.loc 1 608 0
 778               		.cfi_startproc
 779               	/* prologue: function */
 780               	/* frame size = 0 */
 781               	/* stack size = 0 */
 782               	.L__stack_usage = 0
 609:../usbdrv/usbdrv.c **** #if USB_INTR_CFG_SET != 0
 610:../usbdrv/usbdrv.c ****     USB_INTR_CFG |= USB_INTR_CFG_SET;
 783               		.loc 1 610 0
 784 0326 85B7      		in r24,0x35
 785 0328 8260      		ori r24,lo8(2)
 786 032a 85BF      		out 0x35,r24
 611:../usbdrv/usbdrv.c **** #endif
 612:../usbdrv/usbdrv.c **** #if USB_INTR_CFG_CLR != 0
 613:../usbdrv/usbdrv.c ****     USB_INTR_CFG &= ~(USB_INTR_CFG_CLR);
 614:../usbdrv/usbdrv.c **** #endif
 615:../usbdrv/usbdrv.c ****     USB_INTR_ENABLE |= (1 << USB_INTR_ENABLE_BIT);
 787               		.loc 1 615 0
 788 032c 8BB7      		in r24,0x3b
 789 032e 8064      		ori r24,lo8(64)
 790 0330 8BBF      		out 0x3b,r24
 791               	.LBB97:
 792               	.LBB98:
 200:../usbdrv/usbdrv.c **** #   if USB_CFG_HAVE_INTRIN_ENDPOINT3
 793               		.loc 1 200 0
 794 0332 E0E0      		ldi r30,lo8(usbTxStatus1)
 795 0334 F0E0      		ldi r31,hi8(usbTxStatus1)
 796 0336 8BE4      		ldi r24,lo8(75)
 797 0338 8183      		std Z+1,r24
 798               	.LBE98:
 799               	.LBE97:
 616:../usbdrv/usbdrv.c ****     usbResetDataToggling();
 617:../usbdrv/usbdrv.c **** #if USB_CFG_HAVE_INTRIN_ENDPOINT && !USB_CFG_SUPPRESS_INTR_CODE
 618:../usbdrv/usbdrv.c ****     usbTxLen1 = USBPID_NAK;
 800               		.loc 1 618 0
 801 033a 8AE5      		ldi r24,lo8(90)
 802 033c 8083      		st Z,r24
 803 033e 0895      		ret
 804               		.cfi_endproc
 805               	.LFE13:
 806               		.size	usbInit, .-usbInit
 807               		.local	wasReset.1770
 808               		.comm	wasReset.1770,1,1
 809               	.global	usbDescriptorConfiguration
 810               		.section	.progmem.data,"a",@progbits
 811               		.type	usbDescriptorConfiguration, @object
 812               		.size	usbDescriptorConfiguration, 34
 813               	usbDescriptorConfiguration:
 814 0000 09        		.byte	9
 815 0001 02        		.byte	2
 816 0002 22        		.byte	34
 817 0003 00        		.byte	0
 818 0004 01        		.byte	1
 819 0005 01        		.byte	1
 820 0006 00        		.byte	0
 821 0007 80        		.byte	-128
 822 0008 32        		.byte	50
 823 0009 09        		.byte	9
 824 000a 04        		.byte	4
 825 000b 00        		.byte	0
 826 000c 00        		.byte	0
 827 000d 01        		.byte	1
 828 000e 03        		.byte	3
 829 000f 00        		.byte	0
 830 0010 00        		.byte	0
 831 0011 00        		.byte	0
 832 0012 09        		.byte	9
 833 0013 21        		.byte	33
 834 0014 01        		.byte	1
 835 0015 01        		.byte	1
 836 0016 00        		.byte	0
 837 0017 01        		.byte	1
 838 0018 22        		.byte	34
 839 0019 50        		.byte	80
 840 001a 00        		.byte	0
 841 001b 07        		.byte	7
 842 001c 05        		.byte	5
 843 001d 81        		.byte	-127
 844 001e 03        		.byte	3
 845 001f 08        		.byte	8
 846 0020 00        		.byte	0
 847 0021 64        		.byte	100
 848               	.global	usbDescriptorDevice
 849               		.type	usbDescriptorDevice, @object
 850               		.size	usbDescriptorDevice, 18
 851               	usbDescriptorDevice:
 852 0022 12        		.byte	18
 853 0023 01        		.byte	1
 854 0024 10        		.byte	16
 855 0025 01        		.byte	1
 856 0026 00        		.byte	0
 857 0027 00        		.byte	0
 858 0028 00        		.byte	0
 859 0029 08        		.byte	8
 860 002a 42        		.byte	66
 861 002b 42        		.byte	66
 862 002c 55        		.byte	85
 863 002d E4        		.byte	-28
 864 002e 09        		.byte	9
 865 002f 00        		.byte	0
 866 0030 01        		.byte	1
 867 0031 02        		.byte	2
 868 0032 00        		.byte	0
 869 0033 01        		.byte	1
 870               	.global	usbDescriptorStringDevice
 871               		.type	usbDescriptorStringDevice, @object
 872               		.size	usbDescriptorStringDevice, 36
 873               	usbDescriptorStringDevice:
 874 0034 2403      		.word	804
 875 0036 4200      		.word	66
 876 0038 6900      		.word	105
 877 003a 7200      		.word	114
 878 003c 6B00      		.word	107
 879 003e 6C00      		.word	108
 880 0040 6500      		.word	101
 881 0042 7200      		.word	114
 882 0044 2000      		.word	32
 883 0046 5300      		.word	83
 884 0048 6900      		.word	105
 885 004a 6D00      		.word	109
 886 004c 7000      		.word	112
 887 004e 6C00      		.word	108
 888 0050 6500      		.word	101
 889 0052 4800      		.word	72
 890 0054 4900      		.word	73
 891 0056 4400      		.word	68
 892               	.global	usbDescriptorStringVendor
 893               		.type	usbDescriptorStringVendor, @object
 894               		.size	usbDescriptorStringVendor, 22
 895               	usbDescriptorStringVendor:
 896 0058 1603      		.word	790
 897 005a 6200      		.word	98
 898 005c 6900      		.word	105
 899 005e 7200      		.word	114
 900 0060 6B00      		.word	107
 901 0062 6C00      		.word	108
 902 0064 6500      		.word	101
 903 0066 7200      		.word	114
 904 0068 2E00      		.word	46
 905 006a 7300      		.word	115
 906 006c 6500      		.word	101
 907               	.global	usbDescriptorString0
 908               		.type	usbDescriptorString0, @object
 909               		.size	usbDescriptorString0, 4
 910               	usbDescriptorString0:
 911 006e 04        		.byte	4
 912 006f 03        		.byte	3
 913 0070 09        		.byte	9
 914 0071 04        		.byte	4
 915               		.local	usbMsgFlags
 916               		.comm	usbMsgFlags,1,1
 917               		.data
 918               		.type	usbMsgLen, @object
 919               		.size	usbMsgLen, 1
 920               	usbMsgLen:
 921 0000 FF        		.byte	-1
 922               		.comm	usbMsgPtr,2,1
 923               		.comm	usbTxStatus1,12,1
 924               		.comm	usbTxBuf,11,1
 925               	.global	usbTxLen
 926               		.type	usbTxLen, @object
 927               		.size	usbTxLen, 1
 928               	usbTxLen:
 929 0001 5A        		.byte	90
 930               		.comm	usbRxToken,1,1
 931               		.comm	usbCurrentTok,1,1
 932               		.comm	usbRxLen,1,1
 933               		.comm	usbConfiguration,1,1
 934               		.comm	usbNewDeviceAddr,1,1
 935               		.comm	usbDeviceAddr,1,1
 936               		.comm	usbInputBufOffset,1,1
 937               		.comm	usbRxBuf,22,1
 938               		.text
 939               	.Letext0:
 940               		.file 2 "/usr/lib/avr/include/stdint.h"
 941               		.file 3 "../usbdrv/usbdrv.h"
 942               		.file 4 "./usbconfig.h"
 943               		.section	.debug_info,"",@progbits
 944               	.Ldebug_info0:
 945 0000 2F0A 0000 		.long	0xa2f
 946 0004 0200      		.word	0x2
 947 0006 0000 0000 		.long	.Ldebug_abbrev0
 948 000a 04        		.byte	0x4
 949 000b 01        		.uleb128 0x1
 950 000c 0000 0000 		.long	.LASF80
 951 0010 0C        		.byte	0xc
 952 0011 0000 0000 		.long	.LASF81
 953 0015 0000 0000 		.long	.LASF82
 954 0019 0000 0000 		.long	.Ltext0
 955 001d 0000 0000 		.long	.Letext0
 956 0021 0000 0000 		.long	.Ldebug_line0
 957 0025 02        		.uleb128 0x2
 958 0026 01        		.byte	0x1
 959 0027 06        		.byte	0x6
 960 0028 0000 0000 		.long	.LASF0
 961 002c 03        		.uleb128 0x3
 962 002d 0000 0000 		.long	.LASF2
 963 0031 02        		.byte	0x2
 964 0032 7E        		.byte	0x7e
 965 0033 3700 0000 		.long	0x37
 966 0037 02        		.uleb128 0x2
 967 0038 01        		.byte	0x1
 968 0039 08        		.byte	0x8
 969 003a 0000 0000 		.long	.LASF1
 970 003e 04        		.uleb128 0x4
 971 003f 02        		.byte	0x2
 972 0040 05        		.byte	0x5
 973 0041 696E 7400 		.string	"int"
 974 0045 03        		.uleb128 0x3
 975 0046 0000 0000 		.long	.LASF3
 976 004a 02        		.byte	0x2
 977 004b 80        		.byte	0x80
 978 004c 5000 0000 		.long	0x50
 979 0050 02        		.uleb128 0x2
 980 0051 02        		.byte	0x2
 981 0052 07        		.byte	0x7
 982 0053 0000 0000 		.long	.LASF4
 983 0057 02        		.uleb128 0x2
 984 0058 04        		.byte	0x4
 985 0059 05        		.byte	0x5
 986 005a 0000 0000 		.long	.LASF5
 987 005e 02        		.uleb128 0x2
 988 005f 04        		.byte	0x4
 989 0060 07        		.byte	0x7
 990 0061 0000 0000 		.long	.LASF6
 991 0065 02        		.uleb128 0x2
 992 0066 08        		.byte	0x8
 993 0067 05        		.byte	0x5
 994 0068 0000 0000 		.long	.LASF7
 995 006c 02        		.uleb128 0x2
 996 006d 08        		.byte	0x8
 997 006e 07        		.byte	0x7
 998 006f 0000 0000 		.long	.LASF8
 999 0073 05        		.uleb128 0x5
 1000 0074 0000 0000 		.long	.LASF15
 1001 0078 0C        		.byte	0xc
 1002 0079 03        		.byte	0x3
 1003 007a 8702      		.word	0x287
 1004 007c 9F00 0000 		.long	0x9f
 1005 0080 06        		.uleb128 0x6
 1006 0081 6C65 6E00 		.string	"len"
 1007 0085 03        		.byte	0x3
 1008 0086 8802      		.word	0x288
 1009 0088 9F00 0000 		.long	0x9f
 1010 008c 02        		.byte	0x2
 1011 008d 23        		.byte	0x23
 1012 008e 00        		.uleb128 0
 1013 008f 07        		.uleb128 0x7
 1014 0090 0000 0000 		.long	.LASF9
 1015 0094 03        		.byte	0x3
 1016 0095 8902      		.word	0x289
 1017 0097 A400 0000 		.long	0xa4
 1018 009b 02        		.byte	0x2
 1019 009c 23        		.byte	0x23
 1020 009d 01        		.uleb128 0x1
 1021 009e 00        		.byte	0
 1022 009f 08        		.uleb128 0x8
 1023 00a0 3700 0000 		.long	0x37
 1024 00a4 09        		.uleb128 0x9
 1025 00a5 3700 0000 		.long	0x37
 1026 00a9 B400 0000 		.long	0xb4
 1027 00ad 0A        		.uleb128 0xa
 1028 00ae B400 0000 		.long	0xb4
 1029 00b2 0A        		.byte	0xa
 1030 00b3 00        		.byte	0
 1031 00b4 02        		.uleb128 0x2
 1032 00b5 02        		.byte	0x2
 1033 00b6 07        		.byte	0x7
 1034 00b7 0000 0000 		.long	.LASF10
 1035 00bb 0B        		.uleb128 0xb
 1036 00bc 0000 0000 		.long	.LASF11
 1037 00c0 03        		.byte	0x3
 1038 00c1 8A02      		.word	0x28a
 1039 00c3 7300 0000 		.long	0x73
 1040 00c7 0C        		.uleb128 0xc
 1041 00c8 0000 0000 		.long	.LASF83
 1042 00cc 02        		.byte	0x2
 1043 00cd 03        		.byte	0x3
 1044 00ce 9302      		.word	0x293
 1045 00d0 ED00 0000 		.long	0xed
 1046 00d4 0D        		.uleb128 0xd
 1047 00d5 0000 0000 		.long	.LASF12
 1048 00d9 03        		.byte	0x3
 1049 00da 9402      		.word	0x294
 1050 00dc 5000 0000 		.long	0x50
 1051 00e0 0D        		.uleb128 0xd
 1052 00e1 0000 0000 		.long	.LASF13
 1053 00e5 03        		.byte	0x3
 1054 00e6 9502      		.word	0x295
 1055 00e8 ED00 0000 		.long	0xed
 1056 00ec 00        		.byte	0
 1057 00ed 09        		.uleb128 0x9
 1058 00ee 3700 0000 		.long	0x37
 1059 00f2 FD00 0000 		.long	0xfd
 1060 00f6 0A        		.uleb128 0xa
 1061 00f7 B400 0000 		.long	0xb4
 1062 00fb 01        		.byte	0x1
 1063 00fc 00        		.byte	0
 1064 00fd 0B        		.uleb128 0xb
 1065 00fe 0000 0000 		.long	.LASF14
 1066 0102 03        		.byte	0x3
 1067 0103 9602      		.word	0x296
 1068 0105 C700 0000 		.long	0xc7
 1069 0109 05        		.uleb128 0x5
 1070 010a 0000 0000 		.long	.LASF16
 1071 010e 08        		.byte	0x8
 1072 010f 03        		.byte	0x3
 1073 0110 9802      		.word	0x298
 1074 0112 6201 0000 		.long	0x162
 1075 0116 07        		.uleb128 0x7
 1076 0117 0000 0000 		.long	.LASF17
 1077 011b 03        		.byte	0x3
 1078 011c 9902      		.word	0x299
 1079 011e 3700 0000 		.long	0x37
 1080 0122 02        		.byte	0x2
 1081 0123 23        		.byte	0x23
 1082 0124 00        		.uleb128 0
 1083 0125 07        		.uleb128 0x7
 1084 0126 0000 0000 		.long	.LASF18
 1085 012a 03        		.byte	0x3
 1086 012b 9A02      		.word	0x29a
 1087 012d 3700 0000 		.long	0x37
 1088 0131 02        		.byte	0x2
 1089 0132 23        		.byte	0x23
 1090 0133 01        		.uleb128 0x1
 1091 0134 07        		.uleb128 0x7
 1092 0135 0000 0000 		.long	.LASF19
 1093 0139 03        		.byte	0x3
 1094 013a 9B02      		.word	0x29b
 1095 013c FD00 0000 		.long	0xfd
 1096 0140 02        		.byte	0x2
 1097 0141 23        		.byte	0x23
 1098 0142 02        		.uleb128 0x2
 1099 0143 07        		.uleb128 0x7
 1100 0144 0000 0000 		.long	.LASF20
 1101 0148 03        		.byte	0x3
 1102 0149 9C02      		.word	0x29c
 1103 014b FD00 0000 		.long	0xfd
 1104 014f 02        		.byte	0x2
 1105 0150 23        		.byte	0x23
 1106 0151 04        		.uleb128 0x4
 1107 0152 07        		.uleb128 0x7
 1108 0153 0000 0000 		.long	.LASF21
 1109 0157 03        		.byte	0x3
 1110 0158 9D02      		.word	0x29d
 1111 015a FD00 0000 		.long	0xfd
 1112 015e 02        		.byte	0x2
 1113 015f 23        		.byte	0x23
 1114 0160 06        		.uleb128 0x6
 1115 0161 00        		.byte	0
 1116 0162 0B        		.uleb128 0xb
 1117 0163 0000 0000 		.long	.LASF22
 1118 0167 03        		.byte	0x3
 1119 0168 9E02      		.word	0x29e
 1120 016a 0901 0000 		.long	0x109
 1121 016e 0E        		.uleb128 0xe
 1122 016f 0000 0000 		.long	.LASF30
 1123 0173 01        		.byte	0x1
 1124 0174 3701      		.word	0x137
 1125 0176 01        		.byte	0x1
 1126 0177 3700 0000 		.long	0x37
 1127 017b 03        		.byte	0x3
 1128 017c C001 0000 		.long	0x1c0
 1129 0180 0F        		.uleb128 0xf
 1130 0181 7271 00   		.string	"rq"
 1131 0184 01        		.byte	0x1
 1132 0185 3701      		.word	0x137
 1133 0187 C001 0000 		.long	0x1c0
 1134 018b 10        		.uleb128 0x10
 1135 018c 6C65 6E00 		.string	"len"
 1136 0190 01        		.byte	0x1
 1137 0191 3901      		.word	0x139
 1138 0193 3700 0000 		.long	0x37
 1139 0197 11        		.uleb128 0x11
 1140 0198 0000 0000 		.long	.LASF23
 1141 019c 01        		.byte	0x1
 1142 019d 3A01      		.word	0x13a
 1143 019f 3700 0000 		.long	0x37
 1144 01a3 12        		.uleb128 0x12
 1145 01a4 11        		.uleb128 0x11
 1146 01a5 0000 0000 		.long	.LASF24
 1147 01a9 01        		.byte	0x1
 1148 01aa 3C01      		.word	0x13c
 1149 01ac 3700 0000 		.long	0x37
 1150 01b0 12        		.uleb128 0x12
 1151 01b1 11        		.uleb128 0x11
 1152 01b2 0000 0000 		.long	.LASF24
 1153 01b6 01        		.byte	0x1
 1154 01b7 4701      		.word	0x147
 1155 01b9 3700 0000 		.long	0x37
 1156 01bd 00        		.byte	0
 1157 01be 00        		.byte	0
 1158 01bf 00        		.byte	0
 1159 01c0 13        		.uleb128 0x13
 1160 01c1 02        		.byte	0x2
 1161 01c2 6201 0000 		.long	0x162
 1162 01c6 14        		.uleb128 0x14
 1163 01c7 0000 0000 		.long	.LASF25
 1164 01cb 01        		.byte	0x1
 1165 01cc C5        		.byte	0xc5
 1166 01cd 01        		.byte	0x1
 1167 01ce 03        		.byte	0x3
 1168 01cf 14        		.uleb128 0x14
 1169 01d0 0000 0000 		.long	.LASF26
 1170 01d4 01        		.byte	0x1
 1171 01d5 CF        		.byte	0xcf
 1172 01d6 01        		.byte	0x1
 1173 01d7 03        		.byte	0x3
 1174 01d8 15        		.uleb128 0x15
 1175 01d9 0000 0000 		.long	.LASF34
 1176 01dd 01        		.byte	0x1
 1177 01de DD        		.byte	0xdd
 1178 01df 01        		.byte	0x1
 1179 01e0 01        		.byte	0x1
 1180 01e1 1902 0000 		.long	0x219
 1181 01e5 16        		.uleb128 0x16
 1182 01e6 0000 0000 		.long	.LASF27
 1183 01ea 01        		.byte	0x1
 1184 01eb DD        		.byte	0xdd
 1185 01ec 1902 0000 		.long	0x219
 1186 01f0 17        		.uleb128 0x17
 1187 01f1 6C65 6E00 		.string	"len"
 1188 01f5 01        		.byte	0x1
 1189 01f6 DD        		.byte	0xdd
 1190 01f7 3700 0000 		.long	0x37
 1191 01fb 16        		.uleb128 0x16
 1192 01fc 0000 0000 		.long	.LASF28
 1193 0200 01        		.byte	0x1
 1194 0201 DD        		.byte	0xdd
 1195 0202 1F02 0000 		.long	0x21f
 1196 0206 18        		.uleb128 0x18
 1197 0207 7000      		.string	"p"
 1198 0209 01        		.byte	0x1
 1199 020a DF        		.byte	0xdf
 1200 020b 1902 0000 		.long	0x219
 1201 020f 18        		.uleb128 0x18
 1202 0210 6900      		.string	"i"
 1203 0212 01        		.byte	0x1
 1204 0213 E0        		.byte	0xe0
 1205 0214 2502 0000 		.long	0x225
 1206 0218 00        		.byte	0
 1207 0219 13        		.uleb128 0x13
 1208 021a 02        		.byte	0x2
 1209 021b 3700 0000 		.long	0x37
 1210 021f 13        		.uleb128 0x13
 1211 0220 02        		.byte	0x2
 1212 0221 BB00 0000 		.long	0xbb
 1213 0225 02        		.uleb128 0x2
 1214 0226 01        		.byte	0x1
 1215 0227 08        		.byte	0x8
 1216 0228 0000 0000 		.long	.LASF29
 1217 022c 0E        		.uleb128 0xe
 1218 022d 0000 0000 		.long	.LASF31
 1219 0231 01        		.byte	0x1
 1220 0232 EC01      		.word	0x1ec
 1221 0234 01        		.byte	0x1
 1222 0235 3700 0000 		.long	0x37
 1223 0239 01        		.byte	0x1
 1224 023a 9302 0000 		.long	0x293
 1225 023e 19        		.uleb128 0x19
 1226 023f 0000 0000 		.long	.LASF27
 1227 0243 01        		.byte	0x1
 1228 0244 EC01      		.word	0x1ec
 1229 0246 1902 0000 		.long	0x219
 1230 024a 0F        		.uleb128 0xf
 1231 024b 6C65 6E00 		.string	"len"
 1232 024f 01        		.byte	0x1
 1233 0250 EC01      		.word	0x1ec
 1234 0252 3700 0000 		.long	0x37
 1235 0256 12        		.uleb128 0x12
 1236 0257 10        		.uleb128 0x10
 1237 0258 6900      		.string	"i"
 1238 025a 01        		.byte	0x1
 1239 025b F501      		.word	0x1f5
 1240 025d 3700 0000 		.long	0x37
 1241 0261 10        		.uleb128 0x10
 1242 0262 7200      		.string	"r"
 1243 0264 01        		.byte	0x1
 1244 0265 F501      		.word	0x1f5
 1245 0267 1902 0000 		.long	0x219
 1246 026b 12        		.uleb128 0x12
 1247 026c 10        		.uleb128 0x10
 1248 026d 6300      		.string	"c"
 1249 026f 01        		.byte	0x1
 1250 0270 F801      		.word	0x1f8
 1251 0272 3700 0000 		.long	0x37
 1252 0276 12        		.uleb128 0x12
 1253 0277 11        		.uleb128 0x11
 1254 0278 0000 0000 		.long	.LASF32
 1255 027c 01        		.byte	0x1
 1256 027d F801      		.word	0x1f8
 1257 027f 4500 0000 		.long	0x45
 1258 0283 11        		.uleb128 0x11
 1259 0284 0000 0000 		.long	.LASF33
 1260 0288 01        		.byte	0x1
 1261 0289 F801      		.word	0x1f8
 1262 028b 2C00 0000 		.long	0x2c
 1263 028f 00        		.byte	0
 1264 0290 00        		.byte	0
 1265 0291 00        		.byte	0
 1266 0292 00        		.byte	0
 1267 0293 1A        		.uleb128 0x1a
 1268 0294 01        		.byte	0x1
 1269 0295 0000 0000 		.long	.LASF50
 1270 0299 01        		.byte	0x1
 1271 029a F5        		.byte	0xf5
 1272 029b 01        		.byte	0x1
 1273 029c 0000 0000 		.long	.LFB5
 1274 02a0 0000 0000 		.long	.LFE5
 1275 02a4 0000 0000 		.long	.LLST0
 1276 02a8 01        		.byte	0x1
 1277 02a9 2903 0000 		.long	0x329
 1278 02ad 1B        		.uleb128 0x1b
 1279 02ae 0000 0000 		.long	.LASF27
 1280 02b2 01        		.byte	0x1
 1281 02b3 F5        		.byte	0xf5
 1282 02b4 1902 0000 		.long	0x219
 1283 02b8 0000 0000 		.long	.LLST1
 1284 02bc 1C        		.uleb128 0x1c
 1285 02bd 6C65 6E00 		.string	"len"
 1286 02c1 01        		.byte	0x1
 1287 02c2 F5        		.byte	0xf5
 1288 02c3 3700 0000 		.long	0x37
 1289 02c7 0000 0000 		.long	.LLST2
 1290 02cb 1D        		.uleb128 0x1d
 1291 02cc D801 0000 		.long	0x1d8
 1292 02d0 0000 0000 		.long	.LBB24
 1293 02d4 0000 0000 		.long	.Ldebug_ranges0+0
 1294 02d8 01        		.byte	0x1
 1295 02d9 F7        		.byte	0xf7
 1296 02da 1E        		.uleb128 0x1e
 1297 02db FB01 0000 		.long	0x1fb
 1298 02df 1F        		.uleb128 0x1f
 1299 02e0 F001 0000 		.long	0x1f0
 1300 02e4 0000 0000 		.long	.LLST3
 1301 02e8 1F        		.uleb128 0x1f
 1302 02e9 E501 0000 		.long	0x1e5
 1303 02ed 0000 0000 		.long	.LLST4
 1304 02f1 20        		.uleb128 0x20
 1305 02f2 0000 0000 		.long	.Ldebug_ranges0+0
 1306 02f6 21        		.uleb128 0x21
 1307 02f7 0602 0000 		.long	0x206
 1308 02fb 0000 0000 		.long	.LLST5
 1309 02ff 21        		.uleb128 0x21
 1310 0300 0F02 0000 		.long	0x20f
 1311 0304 0000 0000 		.long	.LLST6
 1312 0308 22        		.uleb128 0x22
 1313 0309 0000 0000 		.long	.LVL8
 1314 030d EF09 0000 		.long	0x9ef
 1315 0311 23        		.uleb128 0x23
 1316 0312 06        		.byte	0x6
 1317 0313 68        		.byte	0x68
 1318 0314 93        		.byte	0x93
 1319 0315 01        		.uleb128 0x1
 1320 0316 69        		.byte	0x69
 1321 0317 93        		.byte	0x93
 1322 0318 01        		.uleb128 0x1
 1323 0319 05        		.byte	0x5
 1324 031a 03        		.byte	0x3
 1325 031b 0000 0000 		.long	usbTxStatus1+2
 1326 031f 23        		.uleb128 0x23
 1327 0320 01        		.byte	0x1
 1328 0321 66        		.byte	0x66
 1329 0322 02        		.byte	0x2
 1330 0323 8C        		.byte	0x8c
 1331 0324 00        		.sleb128 0
 1332 0325 00        		.byte	0
 1333 0326 00        		.byte	0
 1334 0327 00        		.byte	0
 1335 0328 00        		.byte	0
 1336 0329 24        		.uleb128 0x24
 1337 032a 0000 0000 		.long	.LASF35
 1338 032e 01        		.byte	0x1
 1339 032f A601      		.word	0x1a6
 1340 0331 01        		.byte	0x1
 1341 0332 03        		.byte	0x3
 1342 0333 8703 0000 		.long	0x387
 1343 0337 19        		.uleb128 0x19
 1344 0338 0000 0000 		.long	.LASF27
 1345 033c 01        		.byte	0x1
 1346 033d A601      		.word	0x1a6
 1347 033f 1902 0000 		.long	0x219
 1348 0343 0F        		.uleb128 0xf
 1349 0344 6C65 6E00 		.string	"len"
 1350 0348 01        		.byte	0x1
 1351 0349 A601      		.word	0x1a6
 1352 034b 3700 0000 		.long	0x37
 1353 034f 10        		.uleb128 0x10
 1354 0350 7271 00   		.string	"rq"
 1355 0353 01        		.byte	0x1
 1356 0354 A801      		.word	0x1a8
 1357 0356 C001 0000 		.long	0x1c0
 1358 035a 25        		.uleb128 0x25
 1359 035b 7803 0000 		.long	0x378
 1360 035f 11        		.uleb128 0x11
 1361 0360 0000 0000 		.long	.LASF36
 1362 0364 01        		.byte	0x1
 1363 0365 BA01      		.word	0x1ba
 1364 0367 3700 0000 		.long	0x37
 1365 036b 11        		.uleb128 0x11
 1366 036c 0000 0000 		.long	.LASF37
 1367 0370 01        		.byte	0x1
 1368 0371 BE01      		.word	0x1be
 1369 0373 3700 0000 		.long	0x37
 1370 0377 00        		.byte	0
 1371 0378 12        		.uleb128 0x12
 1372 0379 11        		.uleb128 0x11
 1373 037a 0000 0000 		.long	.LASF38
 1374 037e 01        		.byte	0x1
 1375 037f DC01      		.word	0x1dc
 1376 0381 3700 0000 		.long	0x37
 1377 0385 00        		.byte	0
 1378 0386 00        		.byte	0
 1379 0387 0E        		.uleb128 0xe
 1380 0388 0000 0000 		.long	.LASF39
 1381 038c 01        		.byte	0x1
 1382 038d 6A01      		.word	0x16a
 1383 038f 01        		.byte	0x1
 1384 0390 3700 0000 		.long	0x37
 1385 0394 03        		.byte	0x3
 1386 0395 F903 0000 		.long	0x3f9
 1387 0399 0F        		.uleb128 0xf
 1388 039a 7271 00   		.string	"rq"
 1389 039d 01        		.byte	0x1
 1390 039e 6A01      		.word	0x16a
 1391 03a0 C001 0000 		.long	0x1c0
 1392 03a4 10        		.uleb128 0x10
 1393 03a5 6C65 6E00 		.string	"len"
 1394 03a9 01        		.byte	0x1
 1395 03aa 6C01      		.word	0x16c
 1396 03ac 3700 0000 		.long	0x37
 1397 03b0 11        		.uleb128 0x11
 1398 03b1 0000 0000 		.long	.LASF40
 1399 03b5 01        		.byte	0x1
 1400 03b6 6C01      		.word	0x16c
 1401 03b8 1902 0000 		.long	0x219
 1402 03bc 11        		.uleb128 0x11
 1403 03bd 0000 0000 		.long	.LASF41
 1404 03c1 01        		.byte	0x1
 1405 03c2 6D01      		.word	0x16d
 1406 03c4 3700 0000 		.long	0x37
 1407 03c8 11        		.uleb128 0x11
 1408 03c9 0000 0000 		.long	.LASF42
 1409 03cd 01        		.byte	0x1
 1410 03ce 6F01      		.word	0x16f
 1411 03d0 3700 0000 		.long	0x37
 1412 03d4 26        		.uleb128 0x26
 1413 03d5 0000 0000 		.long	.LASF84
 1414 03d9 01        		.byte	0x1
 1415 03da 9C01      		.word	0x19c
 1416 03dc 12        		.uleb128 0x12
 1417 03dd 11        		.uleb128 0x11
 1418 03de 0000 0000 		.long	.LASF24
 1419 03e2 01        		.byte	0x1
 1420 03e3 7301      		.word	0x173
 1421 03e5 3700 0000 		.long	0x37
 1422 03e9 12        		.uleb128 0x12
 1423 03ea 11        		.uleb128 0x11
 1424 03eb 0000 0000 		.long	.LASF43
 1425 03ef 01        		.byte	0x1
 1426 03f0 7501      		.word	0x175
 1427 03f2 3700 0000 		.long	0x37
 1428 03f6 00        		.byte	0
 1429 03f7 00        		.byte	0
 1430 03f8 00        		.byte	0
 1431 03f9 24        		.uleb128 0x24
 1432 03fa 0000 0000 		.long	.LASF44
 1433 03fe 01        		.byte	0x1
 1434 03ff 0C02      		.word	0x20c
 1435 0401 01        		.byte	0x1
 1436 0402 03        		.byte	0x3
 1437 0403 2004 0000 		.long	0x420
 1438 0407 11        		.uleb128 0x11
 1439 0408 0000 0000 		.long	.LASF45
 1440 040c 01        		.byte	0x1
 1441 040d 0E02      		.word	0x20e
 1442 040f 3700 0000 		.long	0x37
 1443 0413 10        		.uleb128 0x10
 1444 0414 6C65 6E00 		.string	"len"
 1445 0418 01        		.byte	0x1
 1446 0419 0F02      		.word	0x20f
 1447 041b 3700 0000 		.long	0x37
 1448 041f 00        		.byte	0
 1449 0420 24        		.uleb128 0x24
 1450 0421 0000 0000 		.long	.LASF46
 1451 0425 01        		.byte	0x1
 1452 0426 2602      		.word	0x226
 1453 0428 01        		.byte	0x1
 1454 0429 03        		.byte	0x3
 1455 042a 5304 0000 		.long	0x453
 1456 042e 19        		.uleb128 0x19
 1457 042f 0000 0000 		.long	.LASF47
 1458 0433 01        		.byte	0x1
 1459 0434 2602      		.word	0x226
 1460 0436 3700 0000 		.long	0x37
 1461 043a 11        		.uleb128 0x11
 1462 043b 0000 0000 		.long	.LASF48
 1463 043f 01        		.byte	0x1
 1464 0440 2902      		.word	0x229
 1465 0442 3700 0000 		.long	0x37
 1466 0446 11        		.uleb128 0x11
 1467 0447 0000 0000 		.long	.LASF49
 1468 044b 01        		.byte	0x1
 1469 044c 2A02      		.word	0x22a
 1470 044e 3700 0000 		.long	0x37
 1471 0452 00        		.byte	0
 1472 0453 27        		.uleb128 0x27
 1473 0454 01        		.byte	0x1
 1474 0455 0000 0000 		.long	.LASF51
 1475 0459 01        		.byte	0x1
 1476 045a 3502      		.word	0x235
 1477 045c 01        		.byte	0x1
 1478 045d 0000 0000 		.long	.LFB12
 1479 0461 0000 0000 		.long	.LFE12
 1480 0465 0000 0000 		.long	.LLST7
 1481 0469 01        		.byte	0x1
 1482 046a AB07 0000 		.long	0x7ab
 1483 046e 28        		.uleb128 0x28
 1484 046f 6C65 6E00 		.string	"len"
 1485 0473 01        		.byte	0x1
 1486 0474 3702      		.word	0x237
 1487 0476 2500 0000 		.long	0x25
 1488 047a 0000 0000 		.long	.LLST8
 1489 047e 28        		.uleb128 0x28
 1490 047f 6900      		.string	"i"
 1491 0481 01        		.byte	0x1
 1492 0482 3802      		.word	0x238
 1493 0484 3700 0000 		.long	0x37
 1494 0488 0000 0000 		.long	.LLST9
 1495 048c 29        		.uleb128 0x29
 1496 048d 0000 0000 		.long	.LASF85
 1497 0491 01        		.byte	0x1
 1498 0492 5902      		.word	0x259
 1499 0494 0000 0000 		.long	.L52
 1500 0498 2A        		.uleb128 0x2a
 1501 0499 2903 0000 		.long	0x329
 1502 049d 0000 0000 		.long	.LBB60
 1503 04a1 0000 0000 		.long	.LBE60
 1504 04a5 01        		.byte	0x1
 1505 04a6 4202      		.word	0x242
 1506 04a8 3B06 0000 		.long	0x63b
 1507 04ac 1F        		.uleb128 0x1f
 1508 04ad 4303 0000 		.long	0x343
 1509 04b1 0000 0000 		.long	.LLST10
 1510 04b5 1F        		.uleb128 0x1f
 1511 04b6 3703 0000 		.long	0x337
 1512 04ba 0000 0000 		.long	.LLST11
 1513 04be 2B        		.uleb128 0x2b
 1514 04bf 0000 0000 		.long	.LBB61
 1515 04c3 0000 0000 		.long	.LBE61
 1516 04c7 21        		.uleb128 0x21
 1517 04c8 4F03 0000 		.long	0x34f
 1518 04cc 0000 0000 		.long	.LLST12
 1519 04d0 2C        		.uleb128 0x2c
 1520 04d1 0000 0000 		.long	.LBB62
 1521 04d5 0000 0000 		.long	.LBE62
 1522 04d9 1106 0000 		.long	0x611
 1523 04dd 21        		.uleb128 0x21
 1524 04de 5F03 0000 		.long	0x35f
 1525 04e2 0000 0000 		.long	.LLST13
 1526 04e6 21        		.uleb128 0x21
 1527 04e7 6B03 0000 		.long	0x36b
 1528 04eb 0000 0000 		.long	.LLST14
 1529 04ef 2A        		.uleb128 0x2a
 1530 04f0 8703 0000 		.long	0x387
 1531 04f4 0000 0000 		.long	.LBB63
 1532 04f8 0000 0000 		.long	.LBE63
 1533 04fc 01        		.byte	0x1
 1534 04fd C201      		.word	0x1c2
 1535 04ff FB05 0000 		.long	0x5fb
 1536 0503 1F        		.uleb128 0x1f
 1537 0504 9903 0000 		.long	0x399
 1538 0508 0000 0000 		.long	.LLST15
 1539 050c 2B        		.uleb128 0x2b
 1540 050d 0000 0000 		.long	.LBB64
 1541 0511 0000 0000 		.long	.LBE64
 1542 0515 21        		.uleb128 0x21
 1543 0516 A403 0000 		.long	0x3a4
 1544 051a 0000 0000 		.long	.LLST16
 1545 051e 21        		.uleb128 0x21
 1546 051f B003 0000 		.long	0x3b0
 1547 0523 0000 0000 		.long	.LLST17
 1548 0527 21        		.uleb128 0x21
 1549 0528 BC03 0000 		.long	0x3bc
 1550 052c 0000 0000 		.long	.LLST18
 1551 0530 21        		.uleb128 0x21
 1552 0531 C803 0000 		.long	0x3c8
 1553 0535 0000 0000 		.long	.LLST19
 1554 0539 2D        		.uleb128 0x2d
 1555 053a D403 0000 		.long	0x3d4
 1556 053e 20        		.uleb128 0x20
 1557 053f 0000 0000 		.long	.Ldebug_ranges0+0x18
 1558 0543 21        		.uleb128 0x21
 1559 0544 DD03 0000 		.long	0x3dd
 1560 0548 0000 0000 		.long	.LLST20
 1561 054c 2E        		.uleb128 0x2e
 1562 054d 0000 0000 		.long	.Ldebug_ranges0+0x38
 1563 0551 5F05 0000 		.long	0x55f
 1564 0555 21        		.uleb128 0x21
 1565 0556 EA03 0000 		.long	0x3ea
 1566 055a 0000 0000 		.long	.LLST21
 1567 055e 00        		.byte	0
 1568 055f 2F        		.uleb128 0x2f
 1569 0560 C601 0000 		.long	0x1c6
 1570 0564 0000 0000 		.long	.LBB68
 1571 0568 0000 0000 		.long	.LBE68
 1572 056c 01        		.byte	0x1
 1573 056d 8201      		.word	0x182
 1574 056f 2A        		.uleb128 0x2a
 1575 0570 6E01 0000 		.long	0x16e
 1576 0574 0000 0000 		.long	.LBB70
 1577 0578 0000 0000 		.long	.LBE70
 1578 057c 01        		.byte	0x1
 1579 057d 8901      		.word	0x189
 1580 057f D805 0000 		.long	0x5d8
 1581 0583 1F        		.uleb128 0x1f
 1582 0584 8001 0000 		.long	0x180
 1583 0588 0000 0000 		.long	.LLST22
 1584 058c 1F        		.uleb128 0x1f
 1585 058d 8001 0000 		.long	0x180
 1586 0591 0000 0000 		.long	.LLST22
 1587 0595 2B        		.uleb128 0x2b
 1588 0596 0000 0000 		.long	.LBB71
 1589 059a 0000 0000 		.long	.LBE71
 1590 059e 21        		.uleb128 0x21
 1591 059f 8B01 0000 		.long	0x18b
 1592 05a3 0000 0000 		.long	.LLST24
 1593 05a7 21        		.uleb128 0x21
 1594 05a8 9701 0000 		.long	0x197
 1595 05ac 0000 0000 		.long	.LLST25
 1596 05b0 2B        		.uleb128 0x2b
 1597 05b1 0000 0000 		.long	.LBB72
 1598 05b5 0000 0000 		.long	.LBE72
 1599 05b9 21        		.uleb128 0x21
 1600 05ba A401 0000 		.long	0x1a4
 1601 05be 0000 0000 		.long	.LLST26
 1602 05c2 2B        		.uleb128 0x2b
 1603 05c3 0000 0000 		.long	.LBB73
 1604 05c7 0000 0000 		.long	.LBE73
 1605 05cb 21        		.uleb128 0x21
 1606 05cc B101 0000 		.long	0x1b1
 1607 05d0 0000 0000 		.long	.LLST27
 1608 05d4 00        		.byte	0
 1609 05d5 00        		.byte	0
 1610 05d6 00        		.byte	0
 1611 05d7 00        		.byte	0
 1612 05d8 2F        		.uleb128 0x2f
 1613 05d9 C601 0000 		.long	0x1c6
 1614 05dd 0000 0000 		.long	.LBB74
 1615 05e1 0000 0000 		.long	.LBE74
 1616 05e5 01        		.byte	0x1
 1617 05e6 9501      		.word	0x195
 1618 05e8 2F        		.uleb128 0x2f
 1619 05e9 CF01 0000 		.long	0x1cf
 1620 05ed 0000 0000 		.long	.LBB76
 1621 05f1 0000 0000 		.long	.LBE76
 1622 05f5 01        		.byte	0x1
 1623 05f6 9601      		.word	0x196
 1624 05f8 00        		.byte	0
 1625 05f9 00        		.byte	0
 1626 05fa 00        		.byte	0
 1627 05fb 22        		.uleb128 0x22
 1628 05fc 0000 0000 		.long	.LVL16
 1629 0600 FD09 0000 		.long	0x9fd
 1630 0604 23        		.uleb128 0x23
 1631 0605 06        		.byte	0x6
 1632 0606 68        		.byte	0x68
 1633 0607 93        		.byte	0x93
 1634 0608 01        		.uleb128 0x1
 1635 0609 69        		.byte	0x69
 1636 060a 93        		.byte	0x93
 1637 060b 01        		.uleb128 0x1
 1638 060c 02        		.byte	0x2
 1639 060d 8C        		.byte	0x8c
 1640 060e 00        		.sleb128 0
 1641 060f 00        		.byte	0
 1642 0610 00        		.byte	0
 1643 0611 2B        		.uleb128 0x2b
 1644 0612 0000 0000 		.long	.LBB80
 1645 0616 0000 0000 		.long	.LBE80
 1646 061a 21        		.uleb128 0x21
 1647 061b 7903 0000 		.long	0x379
 1648 061f 0000 0000 		.long	.LLST28
 1649 0623 22        		.uleb128 0x22
 1650 0624 0000 0000 		.long	.LVL71
 1651 0628 0A0A 0000 		.long	0xa0a
 1652 062c 23        		.uleb128 0x23
 1653 062d 06        		.byte	0x6
 1654 062e 68        		.byte	0x68
 1655 062f 93        		.byte	0x93
 1656 0630 01        		.uleb128 0x1
 1657 0631 69        		.byte	0x69
 1658 0632 93        		.byte	0x93
 1659 0633 01        		.uleb128 0x1
 1660 0634 02        		.byte	0x2
 1661 0635 8C        		.byte	0x8c
 1662 0636 00        		.sleb128 0
 1663 0637 00        		.byte	0
 1664 0638 00        		.byte	0
 1665 0639 00        		.byte	0
 1666 063a 00        		.byte	0
 1667 063b 30        		.uleb128 0x30
 1668 063c F903 0000 		.long	0x3f9
 1669 0640 0000 0000 		.long	.LBB81
 1670 0644 0000 0000 		.long	.Ldebug_ranges0+0x50
 1671 0648 01        		.byte	0x1
 1672 0649 4C02      		.word	0x24c
 1673 064b 3B07 0000 		.long	0x73b
 1674 064f 20        		.uleb128 0x20
 1675 0650 0000 0000 		.long	.Ldebug_ranges0+0x50
 1676 0654 21        		.uleb128 0x21
 1677 0655 0704 0000 		.long	0x407
 1678 0659 0000 0000 		.long	.LLST29
 1679 065d 21        		.uleb128 0x21
 1680 065e 1304 0000 		.long	0x413
 1681 0662 0000 0000 		.long	.LLST30
 1682 0666 30        		.uleb128 0x30
 1683 0667 2C02 0000 		.long	0x22c
 1684 066b 0000 0000 		.long	.LBB83
 1685 066f 0000 0000 		.long	.Ldebug_ranges0+0x68
 1686 0673 01        		.byte	0x1
 1687 0674 1602      		.word	0x216
 1688 0676 FA06 0000 		.long	0x6fa
 1689 067a 1F        		.uleb128 0x1f
 1690 067b 3E02 0000 		.long	0x23e
 1691 067f 0000 0000 		.long	.LLST31
 1692 0683 1F        		.uleb128 0x1f
 1693 0684 4A02 0000 		.long	0x24a
 1694 0688 0000 0000 		.long	.LLST32
 1695 068c 2C        		.uleb128 0x2c
 1696 068d 0000 0000 		.long	.LBB85
 1697 0691 0000 0000 		.long	.LBE85
 1698 0695 DB06 0000 		.long	0x6db
 1699 0699 21        		.uleb128 0x21
 1700 069a 5702 0000 		.long	0x257
 1701 069e 0000 0000 		.long	.LLST33
 1702 06a2 21        		.uleb128 0x21
 1703 06a3 6102 0000 		.long	0x261
 1704 06a7 0000 0000 		.long	.LLST34
 1705 06ab 2B        		.uleb128 0x2b
 1706 06ac 0000 0000 		.long	.LBB86
 1707 06b0 0000 0000 		.long	.LBE86
 1708 06b4 21        		.uleb128 0x21
 1709 06b5 6C02 0000 		.long	0x26c
 1710 06b9 0000 0000 		.long	.LLST35
 1711 06bd 2B        		.uleb128 0x2b
 1712 06be 0000 0000 		.long	.LBB87
 1713 06c2 0000 0000 		.long	.LBE87
 1714 06c6 21        		.uleb128 0x21
 1715 06c7 7702 0000 		.long	0x277
 1716 06cb 0000 0000 		.long	.LLST36
 1717 06cf 21        		.uleb128 0x21
 1718 06d0 8302 0000 		.long	0x283
 1719 06d4 0000 0000 		.long	.LLST35
 1720 06d8 00        		.byte	0
 1721 06d9 00        		.byte	0
 1722 06da 00        		.byte	0
 1723 06db 22        		.uleb128 0x22
 1724 06dc 0000 0000 		.long	.LVL80
 1725 06e0 170A 0000 		.long	0xa17
 1726 06e4 23        		.uleb128 0x23
 1727 06e5 06        		.byte	0x6
 1728 06e6 68        		.byte	0x68
 1729 06e7 93        		.byte	0x93
 1730 06e8 01        		.uleb128 0x1
 1731 06e9 69        		.byte	0x69
 1732 06ea 93        		.byte	0x93
 1733 06eb 01        		.uleb128 0x1
 1734 06ec 05        		.byte	0x5
 1735 06ed 03        		.byte	0x3
 1736 06ee 0000 0000 		.long	usbTxBuf+1
 1737 06f2 23        		.uleb128 0x23
 1738 06f3 01        		.byte	0x1
 1739 06f4 66        		.byte	0x66
 1740 06f5 02        		.byte	0x2
 1741 06f6 8C        		.byte	0x8c
 1742 06f7 00        		.sleb128 0
 1743 06f8 00        		.byte	0
 1744 06f9 00        		.byte	0
 1745 06fa 31        		.uleb128 0x31
 1746 06fb 0000 0000 		.long	.LVL98
 1747 06ff EF09 0000 		.long	0x9ef
 1748 0703 1C07 0000 		.long	0x71c
 1749 0707 23        		.uleb128 0x23
 1750 0708 06        		.byte	0x6
 1751 0709 68        		.byte	0x68
 1752 070a 93        		.byte	0x93
 1753 070b 01        		.uleb128 0x1
 1754 070c 69        		.byte	0x69
 1755 070d 93        		.byte	0x93
 1756 070e 01        		.uleb128 0x1
 1757 070f 05        		.byte	0x5
 1758 0710 03        		.byte	0x3
 1759 0711 0000 0000 		.long	usbTxBuf+1
 1760 0715 23        		.uleb128 0x23
 1761 0716 01        		.byte	0x1
 1762 0717 66        		.byte	0x66
 1763 0718 02        		.byte	0x2
 1764 0719 8C        		.byte	0x8c
 1765 071a 00        		.sleb128 0
 1766 071b 00        		.byte	0
 1767 071c 22        		.uleb128 0x22
 1768 071d 0000 0000 		.long	.LVL114
 1769 0721 EF09 0000 		.long	0x9ef
 1770 0725 23        		.uleb128 0x23
 1771 0726 06        		.byte	0x6
 1772 0727 68        		.byte	0x68
 1773 0728 93        		.byte	0x93
 1774 0729 01        		.uleb128 0x1
 1775 072a 69        		.byte	0x69
 1776 072b 93        		.byte	0x93
 1777 072c 01        		.uleb128 0x1
 1778 072d 05        		.byte	0x5
 1779 072e 03        		.byte	0x3
 1780 072f 0000 0000 		.long	usbTxBuf+1
 1781 0733 23        		.uleb128 0x23
 1782 0734 01        		.byte	0x1
 1783 0735 66        		.byte	0x66
 1784 0736 01        		.byte	0x1
 1785 0737 30        		.byte	0x30
 1786 0738 00        		.byte	0
 1787 0739 00        		.byte	0
 1788 073a 00        		.byte	0
 1789 073b 2C        		.uleb128 0x2c
 1790 073c 0000 0000 		.long	.LBB91
 1791 0740 0000 0000 		.long	.LBE91
 1792 0744 5907 0000 		.long	0x759
 1793 0748 32        		.uleb128 0x32
 1794 0749 0000 0000 		.long	.LASF52
 1795 074d 01        		.byte	0x1
 1796 074e 5002      		.word	0x250
 1797 0750 3700 0000 		.long	0x37
 1798 0754 0000 0000 		.long	.LLST38
 1799 0758 00        		.byte	0
 1800 0759 2F        		.uleb128 0x2f
 1801 075a CF01 0000 		.long	0x1cf
 1802 075e 0000 0000 		.long	.LBB92
 1803 0762 0000 0000 		.long	.LBE92
 1804 0766 01        		.byte	0x1
 1805 0767 5702      		.word	0x257
 1806 0769 33        		.uleb128 0x33
 1807 076a 2004 0000 		.long	0x420
 1808 076e 0000 0000 		.long	.LBB94
 1809 0772 0000 0000 		.long	.LBE94
 1810 0776 01        		.byte	0x1
 1811 0777 5A02      		.word	0x25a
 1812 0779 1F        		.uleb128 0x1f
 1813 077a 2E04 0000 		.long	0x42e
 1814 077e 0000 0000 		.long	.LLST39
 1815 0782 2B        		.uleb128 0x2b
 1816 0783 0000 0000 		.long	.LBB95
 1817 0787 0000 0000 		.long	.LBE95
 1818 078b 21        		.uleb128 0x21
 1819 078c 4604 0000 		.long	0x446
 1820 0790 0000 0000 		.long	.LLST40
 1821 0794 34        		.uleb128 0x34
 1822 0795 3A04 0000 		.long	0x43a
 1823 0799 05        		.byte	0x5
 1824 079a 03        		.byte	0x3
 1825 079b 0000 0000 		.long	wasReset.1770
 1826 079f 35        		.uleb128 0x35
 1827 07a0 0000 0000 		.long	.LVL111
 1828 07a4 250A 0000 		.long	0xa25
 1829 07a8 00        		.byte	0
 1830 07a9 00        		.byte	0
 1831 07aa 00        		.byte	0
 1832 07ab 36        		.uleb128 0x36
 1833 07ac 01        		.byte	0x1
 1834 07ad 0000 0000 		.long	.LASF53
 1835 07b1 01        		.byte	0x1
 1836 07b2 5F02      		.word	0x25f
 1837 07b4 01        		.byte	0x1
 1838 07b5 0000 0000 		.long	.LFB13
 1839 07b9 0000 0000 		.long	.LFE13
 1840 07bd 03        		.byte	0x3
 1841 07be 92        		.byte	0x92
 1842 07bf 20        		.uleb128 0x20
 1843 07c0 02        		.sleb128 2
 1844 07c1 01        		.byte	0x1
 1845 07c2 D707 0000 		.long	0x7d7
 1846 07c6 2F        		.uleb128 0x2f
 1847 07c7 C601 0000 		.long	0x1c6
 1848 07cb 0000 0000 		.long	.LBB97
 1849 07cf 0000 0000 		.long	.LBE97
 1850 07d3 01        		.byte	0x1
 1851 07d4 6802      		.word	0x268
 1852 07d6 00        		.byte	0
 1853 07d7 37        		.uleb128 0x37
 1854 07d8 0000 0000 		.long	.LASF54
 1855 07dc 01        		.byte	0x1
 1856 07dd 31        		.byte	0x31
 1857 07de 3700 0000 		.long	0x37
 1858 07e2 05        		.byte	0x5
 1859 07e3 03        		.byte	0x3
 1860 07e4 0000 0000 		.long	usbMsgLen
 1861 07e8 37        		.uleb128 0x37
 1862 07e9 0000 0000 		.long	.LASF55
 1863 07ed 01        		.byte	0x1
 1864 07ee 32        		.byte	0x32
 1865 07ef 3700 0000 		.long	0x37
 1866 07f3 05        		.byte	0x5
 1867 07f4 03        		.byte	0x3
 1868 07f5 0000 0000 		.long	usbMsgFlags
 1869 07f9 38        		.uleb128 0x38
 1870 07fa 0000 0000 		.long	.LASF56
 1871 07fe 01        		.byte	0x1
 1872 07ff 30        		.byte	0x30
 1873 0800 1902 0000 		.long	0x219
 1874 0804 01        		.byte	0x1
 1875 0805 05        		.byte	0x5
 1876 0806 03        		.byte	0x3
 1877 0807 0000 0000 		.long	usbMsgPtr
 1878 080b 38        		.uleb128 0x38
 1879 080c 0000 0000 		.long	.LASF57
 1880 0810 01        		.byte	0x1
 1881 0811 1F        		.byte	0x1f
 1882 0812 3700 0000 		.long	0x37
 1883 0816 01        		.byte	0x1
 1884 0817 05        		.byte	0x5
 1885 0818 03        		.byte	0x3
 1886 0819 0000 0000 		.long	usbRxToken
 1887 081d 38        		.uleb128 0x38
 1888 081e 0000 0000 		.long	.LASF58
 1889 0822 01        		.byte	0x1
 1890 0823 1C        		.byte	0x1c
 1891 0824 3700 0000 		.long	0x37
 1892 0828 01        		.byte	0x1
 1893 0829 05        		.byte	0x5
 1894 082a 03        		.byte	0x3
 1895 082b 0000 0000 		.long	usbConfiguration
 1896 082f 09        		.uleb128 0x9
 1897 0830 3F08 0000 		.long	0x83f
 1898 0834 3F08 0000 		.long	0x83f
 1899 0838 0A        		.uleb128 0xa
 1900 0839 B400 0000 		.long	0xb4
 1901 083d 11        		.byte	0x11
 1902 083e 00        		.byte	0
 1903 083f 39        		.uleb128 0x39
 1904 0840 2502 0000 		.long	0x225
 1905 0844 38        		.uleb128 0x38
 1906 0845 0000 0000 		.long	.LASF59
 1907 0849 01        		.byte	0x1
 1908 084a 6F        		.byte	0x6f
 1909 084b 5608 0000 		.long	0x856
 1910 084f 01        		.byte	0x1
 1911 0850 05        		.byte	0x5
 1912 0851 03        		.byte	0x3
 1913 0852 0000 0000 		.long	usbDescriptorDevice
 1914 0856 39        		.uleb128 0x39
 1915 0857 2F08 0000 		.long	0x82f
 1916 085b 09        		.uleb128 0x9
 1917 085c 3F08 0000 		.long	0x83f
 1918 0860 6B08 0000 		.long	0x86b
 1919 0864 0A        		.uleb128 0xa
 1920 0865 B400 0000 		.long	0xb4
 1921 0869 21        		.byte	0x21
 1922 086a 00        		.byte	0
 1923 086b 38        		.uleb128 0x38
 1924 086c 0000 0000 		.long	.LASF60
 1925 0870 01        		.byte	0x1
 1926 0871 8E        		.byte	0x8e
 1927 0872 7D08 0000 		.long	0x87d
 1928 0876 01        		.byte	0x1
 1929 0877 05        		.byte	0x5
 1930 0878 03        		.byte	0x3
 1931 0879 0000 0000 		.long	usbDescriptorConfiguration
 1932 087d 39        		.uleb128 0x39
 1933 087e 5B08 0000 		.long	0x85b
 1934 0882 09        		.uleb128 0x9
 1935 0883 3F08 0000 		.long	0x83f
 1936 0887 8D08 0000 		.long	0x88d
 1937 088b 3A        		.uleb128 0x3a
 1938 088c 00        		.byte	0
 1939 088d 3B        		.uleb128 0x3b
 1940 088e 0000 0000 		.long	.LASF61
 1941 0892 03        		.byte	0x3
 1942 0893 D301      		.word	0x1d3
 1943 0895 9B08 0000 		.long	0x89b
 1944 0899 01        		.byte	0x1
 1945 089a 01        		.byte	0x1
 1946 089b 39        		.uleb128 0x39
 1947 089c 8208 0000 		.long	0x882
 1948 08a0 09        		.uleb128 0x9
 1949 08a1 3F08 0000 		.long	0x83f
 1950 08a5 B008 0000 		.long	0x8b0
 1951 08a9 0A        		.uleb128 0xa
 1952 08aa B400 0000 		.long	0xb4
 1953 08ae 03        		.byte	0x3
 1954 08af 00        		.byte	0
 1955 08b0 38        		.uleb128 0x38
 1956 08b1 0000 0000 		.long	.LASF62
 1957 08b5 01        		.byte	0x1
 1958 08b6 46        		.byte	0x46
 1959 08b7 C208 0000 		.long	0x8c2
 1960 08bb 01        		.byte	0x1
 1961 08bc 05        		.byte	0x5
 1962 08bd 03        		.byte	0x3
 1963 08be 0000 0000 		.long	usbDescriptorString0
 1964 08c2 39        		.uleb128 0x39
 1965 08c3 A008 0000 		.long	0x8a0
 1966 08c7 09        		.uleb128 0x9
 1967 08c8 D708 0000 		.long	0x8d7
 1968 08cc D708 0000 		.long	0x8d7
 1969 08d0 0A        		.uleb128 0xa
 1970 08d1 B400 0000 		.long	0xb4
 1971 08d5 0A        		.byte	0xa
 1972 08d6 00        		.byte	0
 1973 08d7 39        		.uleb128 0x39
 1974 08d8 3E00 0000 		.long	0x3e
 1975 08dc 38        		.uleb128 0x38
 1976 08dd 0000 0000 		.long	.LASF63
 1977 08e1 01        		.byte	0x1
 1978 08e2 50        		.byte	0x50
 1979 08e3 EE08 0000 		.long	0x8ee
 1980 08e7 01        		.byte	0x1
 1981 08e8 05        		.byte	0x5
 1982 08e9 03        		.byte	0x3
 1983 08ea 0000 0000 		.long	usbDescriptorStringVendor
 1984 08ee 39        		.uleb128 0x39
 1985 08ef C708 0000 		.long	0x8c7
 1986 08f3 09        		.uleb128 0x9
 1987 08f4 D708 0000 		.long	0x8d7
 1988 08f8 0309 0000 		.long	0x903
 1989 08fc 0A        		.uleb128 0xa
 1990 08fd B400 0000 		.long	0xb4
 1991 0901 11        		.byte	0x11
 1992 0902 00        		.byte	0
 1993 0903 38        		.uleb128 0x38
 1994 0904 0000 0000 		.long	.LASF64
 1995 0908 01        		.byte	0x1
 1996 0909 59        		.byte	0x59
 1997 090a 1509 0000 		.long	0x915
 1998 090e 01        		.byte	0x1
 1999 090f 05        		.byte	0x5
 2000 0910 03        		.byte	0x3
 2001 0911 0000 0000 		.long	usbDescriptorStringDevice
 2002 0915 39        		.uleb128 0x39
 2003 0916 F308 0000 		.long	0x8f3
 2004 091a 09        		.uleb128 0x9
 2005 091b D708 0000 		.long	0x8d7
 2006 091f 2509 0000 		.long	0x925
 2007 0923 3A        		.uleb128 0x3a
 2008 0924 00        		.byte	0
 2009 0925 3B        		.uleb128 0x3b
 2010 0926 0000 0000 		.long	.LASF65
 2011 092a 03        		.byte	0x3
 2012 092b EB01      		.word	0x1eb
 2013 092d 3309 0000 		.long	0x933
 2014 0931 01        		.byte	0x1
 2015 0932 01        		.byte	0x1
 2016 0933 39        		.uleb128 0x39
 2017 0934 1A09 0000 		.long	0x91a
 2018 0938 38        		.uleb128 0x38
 2019 0939 0000 0000 		.long	.LASF66
 2020 093d 01        		.byte	0x1
 2021 093e 26        		.byte	0x26
 2022 093f BB00 0000 		.long	0xbb
 2023 0943 01        		.byte	0x1
 2024 0944 05        		.byte	0x5
 2025 0945 03        		.byte	0x3
 2026 0946 0000 0000 		.long	usbTxStatus1
 2027 094a 09        		.uleb128 0x9
 2028 094b 3700 0000 		.long	0x37
 2029 094f 5A09 0000 		.long	0x95a
 2030 0953 0A        		.uleb128 0xa
 2031 0954 B400 0000 		.long	0xb4
 2032 0958 15        		.byte	0x15
 2033 0959 00        		.byte	0
 2034 095a 38        		.uleb128 0x38
 2035 095b 0000 0000 		.long	.LASF67
 2036 095f 01        		.byte	0x1
 2037 0960 18        		.byte	0x18
 2038 0961 4A09 0000 		.long	0x94a
 2039 0965 01        		.byte	0x1
 2040 0966 05        		.byte	0x5
 2041 0967 03        		.byte	0x3
 2042 0968 0000 0000 		.long	usbRxBuf
 2043 096c 38        		.uleb128 0x38
 2044 096d 0000 0000 		.long	.LASF68
 2045 0971 01        		.byte	0x1
 2046 0972 19        		.byte	0x19
 2047 0973 3700 0000 		.long	0x37
 2048 0977 01        		.byte	0x1
 2049 0978 05        		.byte	0x5
 2050 0979 03        		.byte	0x3
 2051 097a 0000 0000 		.long	usbInputBufOffset
 2052 097e 38        		.uleb128 0x38
 2053 097f 0000 0000 		.long	.LASF69
 2054 0983 01        		.byte	0x1
 2055 0984 1A        		.byte	0x1a
 2056 0985 3700 0000 		.long	0x37
 2057 0989 01        		.byte	0x1
 2058 098a 05        		.byte	0x5
 2059 098b 03        		.byte	0x3
 2060 098c 0000 0000 		.long	usbDeviceAddr
 2061 0990 38        		.uleb128 0x38
 2062 0991 0000 0000 		.long	.LASF70
 2063 0995 01        		.byte	0x1
 2064 0996 1B        		.byte	0x1b
 2065 0997 3700 0000 		.long	0x37
 2066 099b 01        		.byte	0x1
 2067 099c 05        		.byte	0x5
 2068 099d 03        		.byte	0x3
 2069 099e 0000 0000 		.long	usbNewDeviceAddr
 2070 09a2 38        		.uleb128 0x38
 2071 09a3 0000 0000 		.long	.LASF71
 2072 09a7 01        		.byte	0x1
 2073 09a8 1D        		.byte	0x1d
 2074 09a9 B409 0000 		.long	0x9b4
 2075 09ad 01        		.byte	0x1
 2076 09ae 05        		.byte	0x5
 2077 09af 03        		.byte	0x3
 2078 09b0 0000 0000 		.long	usbRxLen
 2079 09b4 08        		.uleb128 0x8
 2080 09b5 2500 0000 		.long	0x25
 2081 09b9 38        		.uleb128 0x38
 2082 09ba 0000 0000 		.long	.LASF72
 2083 09be 01        		.byte	0x1
 2084 09bf 1E        		.byte	0x1e
 2085 09c0 3700 0000 		.long	0x37
 2086 09c4 01        		.byte	0x1
 2087 09c5 05        		.byte	0x5
 2088 09c6 03        		.byte	0x3
 2089 09c7 0000 0000 		.long	usbCurrentTok
 2090 09cb 38        		.uleb128 0x38
 2091 09cc 0000 0000 		.long	.LASF73
 2092 09d0 01        		.byte	0x1
 2093 09d1 20        		.byte	0x20
 2094 09d2 9F00 0000 		.long	0x9f
 2095 09d6 01        		.byte	0x1
 2096 09d7 05        		.byte	0x5
 2097 09d8 03        		.byte	0x3
 2098 09d9 0000 0000 		.long	usbTxLen
 2099 09dd 38        		.uleb128 0x38
 2100 09de 0000 0000 		.long	.LASF74
 2101 09e2 01        		.byte	0x1
 2102 09e3 21        		.byte	0x21
 2103 09e4 A400 0000 		.long	0xa4
 2104 09e8 01        		.byte	0x1
 2105 09e9 05        		.byte	0x5
 2106 09ea 03        		.byte	0x3
 2107 09eb 0000 0000 		.long	usbTxBuf
 2108 09ef 3C        		.uleb128 0x3c
 2109 09f0 01        		.byte	0x1
 2110 09f1 01        		.byte	0x1
 2111 09f2 0000 0000 		.long	.LASF75
 2112 09f6 0000 0000 		.long	.LASF75
 2113 09fa 03        		.byte	0x3
 2114 09fb 3D01      		.word	0x13d
 2115 09fd 3D        		.uleb128 0x3d
 2116 09fe 01        		.byte	0x1
 2117 09ff 01        		.byte	0x1
 2118 0a00 0000 0000 		.long	.LASF76
 2119 0a04 0000 0000 		.long	.LASF76
 2120 0a08 03        		.byte	0x3
 2121 0a09 BA        		.byte	0xba
 2122 0a0a 3D        		.uleb128 0x3d
 2123 0a0b 01        		.byte	0x1
 2124 0a0c 01        		.byte	0x1
 2125 0a0d 0000 0000 		.long	.LASF77
 2126 0a11 0000 0000 		.long	.LASF77
 2127 0a15 03        		.byte	0x3
 2128 0a16 F9        		.byte	0xf9
 2129 0a17 3C        		.uleb128 0x3c
 2130 0a18 01        		.byte	0x1
 2131 0a19 01        		.byte	0x1
 2132 0a1a 0000 0000 		.long	.LASF78
 2133 0a1e 0000 0000 		.long	.LASF78
 2134 0a22 03        		.byte	0x3
 2135 0a23 0B01      		.word	0x10b
 2136 0a25 3D        		.uleb128 0x3d
 2137 0a26 01        		.byte	0x1
 2138 0a27 01        		.byte	0x1
 2139 0a28 0000 0000 		.long	.LASF79
 2140 0a2c 0000 0000 		.long	.LASF79
 2141 0a30 04        		.byte	0x4
 2142 0a31 AD        		.byte	0xad
 2143 0a32 00        		.byte	0
 2144               		.section	.debug_abbrev,"",@progbits
 2145               	.Ldebug_abbrev0:
 2146 0000 01        		.uleb128 0x1
 2147 0001 11        		.uleb128 0x11
 2148 0002 01        		.byte	0x1
 2149 0003 25        		.uleb128 0x25
 2150 0004 0E        		.uleb128 0xe
 2151 0005 13        		.uleb128 0x13
 2152 0006 0B        		.uleb128 0xb
 2153 0007 03        		.uleb128 0x3
 2154 0008 0E        		.uleb128 0xe
 2155 0009 1B        		.uleb128 0x1b
 2156 000a 0E        		.uleb128 0xe
 2157 000b 11        		.uleb128 0x11
 2158 000c 01        		.uleb128 0x1
 2159 000d 12        		.uleb128 0x12
 2160 000e 01        		.uleb128 0x1
 2161 000f 10        		.uleb128 0x10
 2162 0010 06        		.uleb128 0x6
 2163 0011 00        		.byte	0
 2164 0012 00        		.byte	0
 2165 0013 02        		.uleb128 0x2
 2166 0014 24        		.uleb128 0x24
 2167 0015 00        		.byte	0
 2168 0016 0B        		.uleb128 0xb
 2169 0017 0B        		.uleb128 0xb
 2170 0018 3E        		.uleb128 0x3e
 2171 0019 0B        		.uleb128 0xb
 2172 001a 03        		.uleb128 0x3
 2173 001b 0E        		.uleb128 0xe
 2174 001c 00        		.byte	0
 2175 001d 00        		.byte	0
 2176 001e 03        		.uleb128 0x3
 2177 001f 16        		.uleb128 0x16
 2178 0020 00        		.byte	0
 2179 0021 03        		.uleb128 0x3
 2180 0022 0E        		.uleb128 0xe
 2181 0023 3A        		.uleb128 0x3a
 2182 0024 0B        		.uleb128 0xb
 2183 0025 3B        		.uleb128 0x3b
 2184 0026 0B        		.uleb128 0xb
 2185 0027 49        		.uleb128 0x49
 2186 0028 13        		.uleb128 0x13
 2187 0029 00        		.byte	0
 2188 002a 00        		.byte	0
 2189 002b 04        		.uleb128 0x4
 2190 002c 24        		.uleb128 0x24
 2191 002d 00        		.byte	0
 2192 002e 0B        		.uleb128 0xb
 2193 002f 0B        		.uleb128 0xb
 2194 0030 3E        		.uleb128 0x3e
 2195 0031 0B        		.uleb128 0xb
 2196 0032 03        		.uleb128 0x3
 2197 0033 08        		.uleb128 0x8
 2198 0034 00        		.byte	0
 2199 0035 00        		.byte	0
 2200 0036 05        		.uleb128 0x5
 2201 0037 13        		.uleb128 0x13
 2202 0038 01        		.byte	0x1
 2203 0039 03        		.uleb128 0x3
 2204 003a 0E        		.uleb128 0xe
 2205 003b 0B        		.uleb128 0xb
 2206 003c 0B        		.uleb128 0xb
 2207 003d 3A        		.uleb128 0x3a
 2208 003e 0B        		.uleb128 0xb
 2209 003f 3B        		.uleb128 0x3b
 2210 0040 05        		.uleb128 0x5
 2211 0041 01        		.uleb128 0x1
 2212 0042 13        		.uleb128 0x13
 2213 0043 00        		.byte	0
 2214 0044 00        		.byte	0
 2215 0045 06        		.uleb128 0x6
 2216 0046 0D        		.uleb128 0xd
 2217 0047 00        		.byte	0
 2218 0048 03        		.uleb128 0x3
 2219 0049 08        		.uleb128 0x8
 2220 004a 3A        		.uleb128 0x3a
 2221 004b 0B        		.uleb128 0xb
 2222 004c 3B        		.uleb128 0x3b
 2223 004d 05        		.uleb128 0x5
 2224 004e 49        		.uleb128 0x49
 2225 004f 13        		.uleb128 0x13
 2226 0050 38        		.uleb128 0x38
 2227 0051 0A        		.uleb128 0xa
 2228 0052 00        		.byte	0
 2229 0053 00        		.byte	0
 2230 0054 07        		.uleb128 0x7
 2231 0055 0D        		.uleb128 0xd
 2232 0056 00        		.byte	0
 2233 0057 03        		.uleb128 0x3
 2234 0058 0E        		.uleb128 0xe
 2235 0059 3A        		.uleb128 0x3a
 2236 005a 0B        		.uleb128 0xb
 2237 005b 3B        		.uleb128 0x3b
 2238 005c 05        		.uleb128 0x5
 2239 005d 49        		.uleb128 0x49
 2240 005e 13        		.uleb128 0x13
 2241 005f 38        		.uleb128 0x38
 2242 0060 0A        		.uleb128 0xa
 2243 0061 00        		.byte	0
 2244 0062 00        		.byte	0
 2245 0063 08        		.uleb128 0x8
 2246 0064 35        		.uleb128 0x35
 2247 0065 00        		.byte	0
 2248 0066 49        		.uleb128 0x49
 2249 0067 13        		.uleb128 0x13
 2250 0068 00        		.byte	0
 2251 0069 00        		.byte	0
 2252 006a 09        		.uleb128 0x9
 2253 006b 01        		.uleb128 0x1
 2254 006c 01        		.byte	0x1
 2255 006d 49        		.uleb128 0x49
 2256 006e 13        		.uleb128 0x13
 2257 006f 01        		.uleb128 0x1
 2258 0070 13        		.uleb128 0x13
 2259 0071 00        		.byte	0
 2260 0072 00        		.byte	0
 2261 0073 0A        		.uleb128 0xa
 2262 0074 21        		.uleb128 0x21
 2263 0075 00        		.byte	0
 2264 0076 49        		.uleb128 0x49
 2265 0077 13        		.uleb128 0x13
 2266 0078 2F        		.uleb128 0x2f
 2267 0079 0B        		.uleb128 0xb
 2268 007a 00        		.byte	0
 2269 007b 00        		.byte	0
 2270 007c 0B        		.uleb128 0xb
 2271 007d 16        		.uleb128 0x16
 2272 007e 00        		.byte	0
 2273 007f 03        		.uleb128 0x3
 2274 0080 0E        		.uleb128 0xe
 2275 0081 3A        		.uleb128 0x3a
 2276 0082 0B        		.uleb128 0xb
 2277 0083 3B        		.uleb128 0x3b
 2278 0084 05        		.uleb128 0x5
 2279 0085 49        		.uleb128 0x49
 2280 0086 13        		.uleb128 0x13
 2281 0087 00        		.byte	0
 2282 0088 00        		.byte	0
 2283 0089 0C        		.uleb128 0xc
 2284 008a 17        		.uleb128 0x17
 2285 008b 01        		.byte	0x1
 2286 008c 03        		.uleb128 0x3
 2287 008d 0E        		.uleb128 0xe
 2288 008e 0B        		.uleb128 0xb
 2289 008f 0B        		.uleb128 0xb
 2290 0090 3A        		.uleb128 0x3a
 2291 0091 0B        		.uleb128 0xb
 2292 0092 3B        		.uleb128 0x3b
 2293 0093 05        		.uleb128 0x5
 2294 0094 01        		.uleb128 0x1
 2295 0095 13        		.uleb128 0x13
 2296 0096 00        		.byte	0
 2297 0097 00        		.byte	0
 2298 0098 0D        		.uleb128 0xd
 2299 0099 0D        		.uleb128 0xd
 2300 009a 00        		.byte	0
 2301 009b 03        		.uleb128 0x3
 2302 009c 0E        		.uleb128 0xe
 2303 009d 3A        		.uleb128 0x3a
 2304 009e 0B        		.uleb128 0xb
 2305 009f 3B        		.uleb128 0x3b
 2306 00a0 05        		.uleb128 0x5
 2307 00a1 49        		.uleb128 0x49
 2308 00a2 13        		.uleb128 0x13
 2309 00a3 00        		.byte	0
 2310 00a4 00        		.byte	0
 2311 00a5 0E        		.uleb128 0xe
 2312 00a6 2E        		.uleb128 0x2e
 2313 00a7 01        		.byte	0x1
 2314 00a8 03        		.uleb128 0x3
 2315 00a9 0E        		.uleb128 0xe
 2316 00aa 3A        		.uleb128 0x3a
 2317 00ab 0B        		.uleb128 0xb
 2318 00ac 3B        		.uleb128 0x3b
 2319 00ad 05        		.uleb128 0x5
 2320 00ae 27        		.uleb128 0x27
 2321 00af 0C        		.uleb128 0xc
 2322 00b0 49        		.uleb128 0x49
 2323 00b1 13        		.uleb128 0x13
 2324 00b2 20        		.uleb128 0x20
 2325 00b3 0B        		.uleb128 0xb
 2326 00b4 01        		.uleb128 0x1
 2327 00b5 13        		.uleb128 0x13
 2328 00b6 00        		.byte	0
 2329 00b7 00        		.byte	0
 2330 00b8 0F        		.uleb128 0xf
 2331 00b9 05        		.uleb128 0x5
 2332 00ba 00        		.byte	0
 2333 00bb 03        		.uleb128 0x3
 2334 00bc 08        		.uleb128 0x8
 2335 00bd 3A        		.uleb128 0x3a
 2336 00be 0B        		.uleb128 0xb
 2337 00bf 3B        		.uleb128 0x3b
 2338 00c0 05        		.uleb128 0x5
 2339 00c1 49        		.uleb128 0x49
 2340 00c2 13        		.uleb128 0x13
 2341 00c3 00        		.byte	0
 2342 00c4 00        		.byte	0
 2343 00c5 10        		.uleb128 0x10
 2344 00c6 34        		.uleb128 0x34
 2345 00c7 00        		.byte	0
 2346 00c8 03        		.uleb128 0x3
 2347 00c9 08        		.uleb128 0x8
 2348 00ca 3A        		.uleb128 0x3a
 2349 00cb 0B        		.uleb128 0xb
 2350 00cc 3B        		.uleb128 0x3b
 2351 00cd 05        		.uleb128 0x5
 2352 00ce 49        		.uleb128 0x49
 2353 00cf 13        		.uleb128 0x13
 2354 00d0 00        		.byte	0
 2355 00d1 00        		.byte	0
 2356 00d2 11        		.uleb128 0x11
 2357 00d3 34        		.uleb128 0x34
 2358 00d4 00        		.byte	0
 2359 00d5 03        		.uleb128 0x3
 2360 00d6 0E        		.uleb128 0xe
 2361 00d7 3A        		.uleb128 0x3a
 2362 00d8 0B        		.uleb128 0xb
 2363 00d9 3B        		.uleb128 0x3b
 2364 00da 05        		.uleb128 0x5
 2365 00db 49        		.uleb128 0x49
 2366 00dc 13        		.uleb128 0x13
 2367 00dd 00        		.byte	0
 2368 00de 00        		.byte	0
 2369 00df 12        		.uleb128 0x12
 2370 00e0 0B        		.uleb128 0xb
 2371 00e1 01        		.byte	0x1
 2372 00e2 00        		.byte	0
 2373 00e3 00        		.byte	0
 2374 00e4 13        		.uleb128 0x13
 2375 00e5 0F        		.uleb128 0xf
 2376 00e6 00        		.byte	0
 2377 00e7 0B        		.uleb128 0xb
 2378 00e8 0B        		.uleb128 0xb
 2379 00e9 49        		.uleb128 0x49
 2380 00ea 13        		.uleb128 0x13
 2381 00eb 00        		.byte	0
 2382 00ec 00        		.byte	0
 2383 00ed 14        		.uleb128 0x14
 2384 00ee 2E        		.uleb128 0x2e
 2385 00ef 00        		.byte	0
 2386 00f0 03        		.uleb128 0x3
 2387 00f1 0E        		.uleb128 0xe
 2388 00f2 3A        		.uleb128 0x3a
 2389 00f3 0B        		.uleb128 0xb
 2390 00f4 3B        		.uleb128 0x3b
 2391 00f5 0B        		.uleb128 0xb
 2392 00f6 27        		.uleb128 0x27
 2393 00f7 0C        		.uleb128 0xc
 2394 00f8 20        		.uleb128 0x20
 2395 00f9 0B        		.uleb128 0xb
 2396 00fa 00        		.byte	0
 2397 00fb 00        		.byte	0
 2398 00fc 15        		.uleb128 0x15
 2399 00fd 2E        		.uleb128 0x2e
 2400 00fe 01        		.byte	0x1
 2401 00ff 03        		.uleb128 0x3
 2402 0100 0E        		.uleb128 0xe
 2403 0101 3A        		.uleb128 0x3a
 2404 0102 0B        		.uleb128 0xb
 2405 0103 3B        		.uleb128 0x3b
 2406 0104 0B        		.uleb128 0xb
 2407 0105 27        		.uleb128 0x27
 2408 0106 0C        		.uleb128 0xc
 2409 0107 20        		.uleb128 0x20
 2410 0108 0B        		.uleb128 0xb
 2411 0109 01        		.uleb128 0x1
 2412 010a 13        		.uleb128 0x13
 2413 010b 00        		.byte	0
 2414 010c 00        		.byte	0
 2415 010d 16        		.uleb128 0x16
 2416 010e 05        		.uleb128 0x5
 2417 010f 00        		.byte	0
 2418 0110 03        		.uleb128 0x3
 2419 0111 0E        		.uleb128 0xe
 2420 0112 3A        		.uleb128 0x3a
 2421 0113 0B        		.uleb128 0xb
 2422 0114 3B        		.uleb128 0x3b
 2423 0115 0B        		.uleb128 0xb
 2424 0116 49        		.uleb128 0x49
 2425 0117 13        		.uleb128 0x13
 2426 0118 00        		.byte	0
 2427 0119 00        		.byte	0
 2428 011a 17        		.uleb128 0x17
 2429 011b 05        		.uleb128 0x5
 2430 011c 00        		.byte	0
 2431 011d 03        		.uleb128 0x3
 2432 011e 08        		.uleb128 0x8
 2433 011f 3A        		.uleb128 0x3a
 2434 0120 0B        		.uleb128 0xb
 2435 0121 3B        		.uleb128 0x3b
 2436 0122 0B        		.uleb128 0xb
 2437 0123 49        		.uleb128 0x49
 2438 0124 13        		.uleb128 0x13
 2439 0125 00        		.byte	0
 2440 0126 00        		.byte	0
 2441 0127 18        		.uleb128 0x18
 2442 0128 34        		.uleb128 0x34
 2443 0129 00        		.byte	0
 2444 012a 03        		.uleb128 0x3
 2445 012b 08        		.uleb128 0x8
 2446 012c 3A        		.uleb128 0x3a
 2447 012d 0B        		.uleb128 0xb
 2448 012e 3B        		.uleb128 0x3b
 2449 012f 0B        		.uleb128 0xb
 2450 0130 49        		.uleb128 0x49
 2451 0131 13        		.uleb128 0x13
 2452 0132 00        		.byte	0
 2453 0133 00        		.byte	0
 2454 0134 19        		.uleb128 0x19
 2455 0135 05        		.uleb128 0x5
 2456 0136 00        		.byte	0
 2457 0137 03        		.uleb128 0x3
 2458 0138 0E        		.uleb128 0xe
 2459 0139 3A        		.uleb128 0x3a
 2460 013a 0B        		.uleb128 0xb
 2461 013b 3B        		.uleb128 0x3b
 2462 013c 05        		.uleb128 0x5
 2463 013d 49        		.uleb128 0x49
 2464 013e 13        		.uleb128 0x13
 2465 013f 00        		.byte	0
 2466 0140 00        		.byte	0
 2467 0141 1A        		.uleb128 0x1a
 2468 0142 2E        		.uleb128 0x2e
 2469 0143 01        		.byte	0x1
 2470 0144 3F        		.uleb128 0x3f
 2471 0145 0C        		.uleb128 0xc
 2472 0146 03        		.uleb128 0x3
 2473 0147 0E        		.uleb128 0xe
 2474 0148 3A        		.uleb128 0x3a
 2475 0149 0B        		.uleb128 0xb
 2476 014a 3B        		.uleb128 0x3b
 2477 014b 0B        		.uleb128 0xb
 2478 014c 27        		.uleb128 0x27
 2479 014d 0C        		.uleb128 0xc
 2480 014e 11        		.uleb128 0x11
 2481 014f 01        		.uleb128 0x1
 2482 0150 12        		.uleb128 0x12
 2483 0151 01        		.uleb128 0x1
 2484 0152 40        		.uleb128 0x40
 2485 0153 06        		.uleb128 0x6
 2486 0154 9742      		.uleb128 0x2117
 2487 0156 0C        		.uleb128 0xc
 2488 0157 01        		.uleb128 0x1
 2489 0158 13        		.uleb128 0x13
 2490 0159 00        		.byte	0
 2491 015a 00        		.byte	0
 2492 015b 1B        		.uleb128 0x1b
 2493 015c 05        		.uleb128 0x5
 2494 015d 00        		.byte	0
 2495 015e 03        		.uleb128 0x3
 2496 015f 0E        		.uleb128 0xe
 2497 0160 3A        		.uleb128 0x3a
 2498 0161 0B        		.uleb128 0xb
 2499 0162 3B        		.uleb128 0x3b
 2500 0163 0B        		.uleb128 0xb
 2501 0164 49        		.uleb128 0x49
 2502 0165 13        		.uleb128 0x13
 2503 0166 02        		.uleb128 0x2
 2504 0167 06        		.uleb128 0x6
 2505 0168 00        		.byte	0
 2506 0169 00        		.byte	0
 2507 016a 1C        		.uleb128 0x1c
 2508 016b 05        		.uleb128 0x5
 2509 016c 00        		.byte	0
 2510 016d 03        		.uleb128 0x3
 2511 016e 08        		.uleb128 0x8
 2512 016f 3A        		.uleb128 0x3a
 2513 0170 0B        		.uleb128 0xb
 2514 0171 3B        		.uleb128 0x3b
 2515 0172 0B        		.uleb128 0xb
 2516 0173 49        		.uleb128 0x49
 2517 0174 13        		.uleb128 0x13
 2518 0175 02        		.uleb128 0x2
 2519 0176 06        		.uleb128 0x6
 2520 0177 00        		.byte	0
 2521 0178 00        		.byte	0
 2522 0179 1D        		.uleb128 0x1d
 2523 017a 1D        		.uleb128 0x1d
 2524 017b 01        		.byte	0x1
 2525 017c 31        		.uleb128 0x31
 2526 017d 13        		.uleb128 0x13
 2527 017e 52        		.uleb128 0x52
 2528 017f 01        		.uleb128 0x1
 2529 0180 55        		.uleb128 0x55
 2530 0181 06        		.uleb128 0x6
 2531 0182 58        		.uleb128 0x58
 2532 0183 0B        		.uleb128 0xb
 2533 0184 59        		.uleb128 0x59
 2534 0185 0B        		.uleb128 0xb
 2535 0186 00        		.byte	0
 2536 0187 00        		.byte	0
 2537 0188 1E        		.uleb128 0x1e
 2538 0189 05        		.uleb128 0x5
 2539 018a 00        		.byte	0
 2540 018b 31        		.uleb128 0x31
 2541 018c 13        		.uleb128 0x13
 2542 018d 00        		.byte	0
 2543 018e 00        		.byte	0
 2544 018f 1F        		.uleb128 0x1f
 2545 0190 05        		.uleb128 0x5
 2546 0191 00        		.byte	0
 2547 0192 31        		.uleb128 0x31
 2548 0193 13        		.uleb128 0x13
 2549 0194 02        		.uleb128 0x2
 2550 0195 06        		.uleb128 0x6
 2551 0196 00        		.byte	0
 2552 0197 00        		.byte	0
 2553 0198 20        		.uleb128 0x20
 2554 0199 0B        		.uleb128 0xb
 2555 019a 01        		.byte	0x1
 2556 019b 55        		.uleb128 0x55
 2557 019c 06        		.uleb128 0x6
 2558 019d 00        		.byte	0
 2559 019e 00        		.byte	0
 2560 019f 21        		.uleb128 0x21
 2561 01a0 34        		.uleb128 0x34
 2562 01a1 00        		.byte	0
 2563 01a2 31        		.uleb128 0x31
 2564 01a3 13        		.uleb128 0x13
 2565 01a4 02        		.uleb128 0x2
 2566 01a5 06        		.uleb128 0x6
 2567 01a6 00        		.byte	0
 2568 01a7 00        		.byte	0
 2569 01a8 22        		.uleb128 0x22
 2570 01a9 8982 01   		.uleb128 0x4109
 2571 01ac 01        		.byte	0x1
 2572 01ad 11        		.uleb128 0x11
 2573 01ae 01        		.uleb128 0x1
 2574 01af 31        		.uleb128 0x31
 2575 01b0 13        		.uleb128 0x13
 2576 01b1 00        		.byte	0
 2577 01b2 00        		.byte	0
 2578 01b3 23        		.uleb128 0x23
 2579 01b4 8A82 01   		.uleb128 0x410a
 2580 01b7 00        		.byte	0
 2581 01b8 02        		.uleb128 0x2
 2582 01b9 0A        		.uleb128 0xa
 2583 01ba 9142      		.uleb128 0x2111
 2584 01bc 0A        		.uleb128 0xa
 2585 01bd 00        		.byte	0
 2586 01be 00        		.byte	0
 2587 01bf 24        		.uleb128 0x24
 2588 01c0 2E        		.uleb128 0x2e
 2589 01c1 01        		.byte	0x1
 2590 01c2 03        		.uleb128 0x3
 2591 01c3 0E        		.uleb128 0xe
 2592 01c4 3A        		.uleb128 0x3a
 2593 01c5 0B        		.uleb128 0xb
 2594 01c6 3B        		.uleb128 0x3b
 2595 01c7 05        		.uleb128 0x5
 2596 01c8 27        		.uleb128 0x27
 2597 01c9 0C        		.uleb128 0xc
 2598 01ca 20        		.uleb128 0x20
 2599 01cb 0B        		.uleb128 0xb
 2600 01cc 01        		.uleb128 0x1
 2601 01cd 13        		.uleb128 0x13
 2602 01ce 00        		.byte	0
 2603 01cf 00        		.byte	0
 2604 01d0 25        		.uleb128 0x25
 2605 01d1 0B        		.uleb128 0xb
 2606 01d2 01        		.byte	0x1
 2607 01d3 01        		.uleb128 0x1
 2608 01d4 13        		.uleb128 0x13
 2609 01d5 00        		.byte	0
 2610 01d6 00        		.byte	0
 2611 01d7 26        		.uleb128 0x26
 2612 01d8 0A        		.uleb128 0xa
 2613 01d9 00        		.byte	0
 2614 01da 03        		.uleb128 0x3
 2615 01db 0E        		.uleb128 0xe
 2616 01dc 3A        		.uleb128 0x3a
 2617 01dd 0B        		.uleb128 0xb
 2618 01de 3B        		.uleb128 0x3b
 2619 01df 05        		.uleb128 0x5
 2620 01e0 00        		.byte	0
 2621 01e1 00        		.byte	0
 2622 01e2 27        		.uleb128 0x27
 2623 01e3 2E        		.uleb128 0x2e
 2624 01e4 01        		.byte	0x1
 2625 01e5 3F        		.uleb128 0x3f
 2626 01e6 0C        		.uleb128 0xc
 2627 01e7 03        		.uleb128 0x3
 2628 01e8 0E        		.uleb128 0xe
 2629 01e9 3A        		.uleb128 0x3a
 2630 01ea 0B        		.uleb128 0xb
 2631 01eb 3B        		.uleb128 0x3b
 2632 01ec 05        		.uleb128 0x5
 2633 01ed 27        		.uleb128 0x27
 2634 01ee 0C        		.uleb128 0xc
 2635 01ef 11        		.uleb128 0x11
 2636 01f0 01        		.uleb128 0x1
 2637 01f1 12        		.uleb128 0x12
 2638 01f2 01        		.uleb128 0x1
 2639 01f3 40        		.uleb128 0x40
 2640 01f4 06        		.uleb128 0x6
 2641 01f5 9742      		.uleb128 0x2117
 2642 01f7 0C        		.uleb128 0xc
 2643 01f8 01        		.uleb128 0x1
 2644 01f9 13        		.uleb128 0x13
 2645 01fa 00        		.byte	0
 2646 01fb 00        		.byte	0
 2647 01fc 28        		.uleb128 0x28
 2648 01fd 34        		.uleb128 0x34
 2649 01fe 00        		.byte	0
 2650 01ff 03        		.uleb128 0x3
 2651 0200 08        		.uleb128 0x8
 2652 0201 3A        		.uleb128 0x3a
 2653 0202 0B        		.uleb128 0xb
 2654 0203 3B        		.uleb128 0x3b
 2655 0204 05        		.uleb128 0x5
 2656 0205 49        		.uleb128 0x49
 2657 0206 13        		.uleb128 0x13
 2658 0207 02        		.uleb128 0x2
 2659 0208 06        		.uleb128 0x6
 2660 0209 00        		.byte	0
 2661 020a 00        		.byte	0
 2662 020b 29        		.uleb128 0x29
 2663 020c 0A        		.uleb128 0xa
 2664 020d 00        		.byte	0
 2665 020e 03        		.uleb128 0x3
 2666 020f 0E        		.uleb128 0xe
 2667 0210 3A        		.uleb128 0x3a
 2668 0211 0B        		.uleb128 0xb
 2669 0212 3B        		.uleb128 0x3b
 2670 0213 05        		.uleb128 0x5
 2671 0214 11        		.uleb128 0x11
 2672 0215 01        		.uleb128 0x1
 2673 0216 00        		.byte	0
 2674 0217 00        		.byte	0
 2675 0218 2A        		.uleb128 0x2a
 2676 0219 1D        		.uleb128 0x1d
 2677 021a 01        		.byte	0x1
 2678 021b 31        		.uleb128 0x31
 2679 021c 13        		.uleb128 0x13
 2680 021d 11        		.uleb128 0x11
 2681 021e 01        		.uleb128 0x1
 2682 021f 12        		.uleb128 0x12
 2683 0220 01        		.uleb128 0x1
 2684 0221 58        		.uleb128 0x58
 2685 0222 0B        		.uleb128 0xb
 2686 0223 59        		.uleb128 0x59
 2687 0224 05        		.uleb128 0x5
 2688 0225 01        		.uleb128 0x1
 2689 0226 13        		.uleb128 0x13
 2690 0227 00        		.byte	0
 2691 0228 00        		.byte	0
 2692 0229 2B        		.uleb128 0x2b
 2693 022a 0B        		.uleb128 0xb
 2694 022b 01        		.byte	0x1
 2695 022c 11        		.uleb128 0x11
 2696 022d 01        		.uleb128 0x1
 2697 022e 12        		.uleb128 0x12
 2698 022f 01        		.uleb128 0x1
 2699 0230 00        		.byte	0
 2700 0231 00        		.byte	0
 2701 0232 2C        		.uleb128 0x2c
 2702 0233 0B        		.uleb128 0xb
 2703 0234 01        		.byte	0x1
 2704 0235 11        		.uleb128 0x11
 2705 0236 01        		.uleb128 0x1
 2706 0237 12        		.uleb128 0x12
 2707 0238 01        		.uleb128 0x1
 2708 0239 01        		.uleb128 0x1
 2709 023a 13        		.uleb128 0x13
 2710 023b 00        		.byte	0
 2711 023c 00        		.byte	0
 2712 023d 2D        		.uleb128 0x2d
 2713 023e 0A        		.uleb128 0xa
 2714 023f 00        		.byte	0
 2715 0240 31        		.uleb128 0x31
 2716 0241 13        		.uleb128 0x13
 2717 0242 00        		.byte	0
 2718 0243 00        		.byte	0
 2719 0244 2E        		.uleb128 0x2e
 2720 0245 0B        		.uleb128 0xb
 2721 0246 01        		.byte	0x1
 2722 0247 55        		.uleb128 0x55
 2723 0248 06        		.uleb128 0x6
 2724 0249 01        		.uleb128 0x1
 2725 024a 13        		.uleb128 0x13
 2726 024b 00        		.byte	0
 2727 024c 00        		.byte	0
 2728 024d 2F        		.uleb128 0x2f
 2729 024e 1D        		.uleb128 0x1d
 2730 024f 00        		.byte	0
 2731 0250 31        		.uleb128 0x31
 2732 0251 13        		.uleb128 0x13
 2733 0252 11        		.uleb128 0x11
 2734 0253 01        		.uleb128 0x1
 2735 0254 12        		.uleb128 0x12
 2736 0255 01        		.uleb128 0x1
 2737 0256 58        		.uleb128 0x58
 2738 0257 0B        		.uleb128 0xb
 2739 0258 59        		.uleb128 0x59
 2740 0259 05        		.uleb128 0x5
 2741 025a 00        		.byte	0
 2742 025b 00        		.byte	0
 2743 025c 30        		.uleb128 0x30
 2744 025d 1D        		.uleb128 0x1d
 2745 025e 01        		.byte	0x1
 2746 025f 31        		.uleb128 0x31
 2747 0260 13        		.uleb128 0x13
 2748 0261 52        		.uleb128 0x52
 2749 0262 01        		.uleb128 0x1
 2750 0263 55        		.uleb128 0x55
 2751 0264 06        		.uleb128 0x6
 2752 0265 58        		.uleb128 0x58
 2753 0266 0B        		.uleb128 0xb
 2754 0267 59        		.uleb128 0x59
 2755 0268 05        		.uleb128 0x5
 2756 0269 01        		.uleb128 0x1
 2757 026a 13        		.uleb128 0x13
 2758 026b 00        		.byte	0
 2759 026c 00        		.byte	0
 2760 026d 31        		.uleb128 0x31
 2761 026e 8982 01   		.uleb128 0x4109
 2762 0271 01        		.byte	0x1
 2763 0272 11        		.uleb128 0x11
 2764 0273 01        		.uleb128 0x1
 2765 0274 31        		.uleb128 0x31
 2766 0275 13        		.uleb128 0x13
 2767 0276 01        		.uleb128 0x1
 2768 0277 13        		.uleb128 0x13
 2769 0278 00        		.byte	0
 2770 0279 00        		.byte	0
 2771 027a 32        		.uleb128 0x32
 2772 027b 34        		.uleb128 0x34
 2773 027c 00        		.byte	0
 2774 027d 03        		.uleb128 0x3
 2775 027e 0E        		.uleb128 0xe
 2776 027f 3A        		.uleb128 0x3a
 2777 0280 0B        		.uleb128 0xb
 2778 0281 3B        		.uleb128 0x3b
 2779 0282 05        		.uleb128 0x5
 2780 0283 49        		.uleb128 0x49
 2781 0284 13        		.uleb128 0x13
 2782 0285 02        		.uleb128 0x2
 2783 0286 06        		.uleb128 0x6
 2784 0287 00        		.byte	0
 2785 0288 00        		.byte	0
 2786 0289 33        		.uleb128 0x33
 2787 028a 1D        		.uleb128 0x1d
 2788 028b 01        		.byte	0x1
 2789 028c 31        		.uleb128 0x31
 2790 028d 13        		.uleb128 0x13
 2791 028e 11        		.uleb128 0x11
 2792 028f 01        		.uleb128 0x1
 2793 0290 12        		.uleb128 0x12
 2794 0291 01        		.uleb128 0x1
 2795 0292 58        		.uleb128 0x58
 2796 0293 0B        		.uleb128 0xb
 2797 0294 59        		.uleb128 0x59
 2798 0295 05        		.uleb128 0x5
 2799 0296 00        		.byte	0
 2800 0297 00        		.byte	0
 2801 0298 34        		.uleb128 0x34
 2802 0299 34        		.uleb128 0x34
 2803 029a 00        		.byte	0
 2804 029b 31        		.uleb128 0x31
 2805 029c 13        		.uleb128 0x13
 2806 029d 02        		.uleb128 0x2
 2807 029e 0A        		.uleb128 0xa
 2808 029f 00        		.byte	0
 2809 02a0 00        		.byte	0
 2810 02a1 35        		.uleb128 0x35
 2811 02a2 8982 01   		.uleb128 0x4109
 2812 02a5 00        		.byte	0
 2813 02a6 11        		.uleb128 0x11
 2814 02a7 01        		.uleb128 0x1
 2815 02a8 31        		.uleb128 0x31
 2816 02a9 13        		.uleb128 0x13
 2817 02aa 00        		.byte	0
 2818 02ab 00        		.byte	0
 2819 02ac 36        		.uleb128 0x36
 2820 02ad 2E        		.uleb128 0x2e
 2821 02ae 01        		.byte	0x1
 2822 02af 3F        		.uleb128 0x3f
 2823 02b0 0C        		.uleb128 0xc
 2824 02b1 03        		.uleb128 0x3
 2825 02b2 0E        		.uleb128 0xe
 2826 02b3 3A        		.uleb128 0x3a
 2827 02b4 0B        		.uleb128 0xb
 2828 02b5 3B        		.uleb128 0x3b
 2829 02b6 05        		.uleb128 0x5
 2830 02b7 27        		.uleb128 0x27
 2831 02b8 0C        		.uleb128 0xc
 2832 02b9 11        		.uleb128 0x11
 2833 02ba 01        		.uleb128 0x1
 2834 02bb 12        		.uleb128 0x12
 2835 02bc 01        		.uleb128 0x1
 2836 02bd 40        		.uleb128 0x40
 2837 02be 0A        		.uleb128 0xa
 2838 02bf 9742      		.uleb128 0x2117
 2839 02c1 0C        		.uleb128 0xc
 2840 02c2 01        		.uleb128 0x1
 2841 02c3 13        		.uleb128 0x13
 2842 02c4 00        		.byte	0
 2843 02c5 00        		.byte	0
 2844 02c6 37        		.uleb128 0x37
 2845 02c7 34        		.uleb128 0x34
 2846 02c8 00        		.byte	0
 2847 02c9 03        		.uleb128 0x3
 2848 02ca 0E        		.uleb128 0xe
 2849 02cb 3A        		.uleb128 0x3a
 2850 02cc 0B        		.uleb128 0xb
 2851 02cd 3B        		.uleb128 0x3b
 2852 02ce 0B        		.uleb128 0xb
 2853 02cf 49        		.uleb128 0x49
 2854 02d0 13        		.uleb128 0x13
 2855 02d1 02        		.uleb128 0x2
 2856 02d2 0A        		.uleb128 0xa
 2857 02d3 00        		.byte	0
 2858 02d4 00        		.byte	0
 2859 02d5 38        		.uleb128 0x38
 2860 02d6 34        		.uleb128 0x34
 2861 02d7 00        		.byte	0
 2862 02d8 03        		.uleb128 0x3
 2863 02d9 0E        		.uleb128 0xe
 2864 02da 3A        		.uleb128 0x3a
 2865 02db 0B        		.uleb128 0xb
 2866 02dc 3B        		.uleb128 0x3b
 2867 02dd 0B        		.uleb128 0xb
 2868 02de 49        		.uleb128 0x49
 2869 02df 13        		.uleb128 0x13
 2870 02e0 3F        		.uleb128 0x3f
 2871 02e1 0C        		.uleb128 0xc
 2872 02e2 02        		.uleb128 0x2
 2873 02e3 0A        		.uleb128 0xa
 2874 02e4 00        		.byte	0
 2875 02e5 00        		.byte	0
 2876 02e6 39        		.uleb128 0x39
 2877 02e7 26        		.uleb128 0x26
 2878 02e8 00        		.byte	0
 2879 02e9 49        		.uleb128 0x49
 2880 02ea 13        		.uleb128 0x13
 2881 02eb 00        		.byte	0
 2882 02ec 00        		.byte	0
 2883 02ed 3A        		.uleb128 0x3a
 2884 02ee 21        		.uleb128 0x21
 2885 02ef 00        		.byte	0
 2886 02f0 00        		.byte	0
 2887 02f1 00        		.byte	0
 2888 02f2 3B        		.uleb128 0x3b
 2889 02f3 34        		.uleb128 0x34
 2890 02f4 00        		.byte	0
 2891 02f5 03        		.uleb128 0x3
 2892 02f6 0E        		.uleb128 0xe
 2893 02f7 3A        		.uleb128 0x3a
 2894 02f8 0B        		.uleb128 0xb
 2895 02f9 3B        		.uleb128 0x3b
 2896 02fa 05        		.uleb128 0x5
 2897 02fb 49        		.uleb128 0x49
 2898 02fc 13        		.uleb128 0x13
 2899 02fd 3F        		.uleb128 0x3f
 2900 02fe 0C        		.uleb128 0xc
 2901 02ff 3C        		.uleb128 0x3c
 2902 0300 0C        		.uleb128 0xc
 2903 0301 00        		.byte	0
 2904 0302 00        		.byte	0
 2905 0303 3C        		.uleb128 0x3c
 2906 0304 2E        		.uleb128 0x2e
 2907 0305 00        		.byte	0
 2908 0306 3F        		.uleb128 0x3f
 2909 0307 0C        		.uleb128 0xc
 2910 0308 3C        		.uleb128 0x3c
 2911 0309 0C        		.uleb128 0xc
 2912 030a 8740      		.uleb128 0x2007
 2913 030c 0E        		.uleb128 0xe
 2914 030d 03        		.uleb128 0x3
 2915 030e 0E        		.uleb128 0xe
 2916 030f 3A        		.uleb128 0x3a
 2917 0310 0B        		.uleb128 0xb
 2918 0311 3B        		.uleb128 0x3b
 2919 0312 05        		.uleb128 0x5
 2920 0313 00        		.byte	0
 2921 0314 00        		.byte	0
 2922 0315 3D        		.uleb128 0x3d
 2923 0316 2E        		.uleb128 0x2e
 2924 0317 00        		.byte	0
 2925 0318 3F        		.uleb128 0x3f
 2926 0319 0C        		.uleb128 0xc
 2927 031a 3C        		.uleb128 0x3c
 2928 031b 0C        		.uleb128 0xc
 2929 031c 8740      		.uleb128 0x2007
 2930 031e 0E        		.uleb128 0xe
 2931 031f 03        		.uleb128 0x3
 2932 0320 0E        		.uleb128 0xe
 2933 0321 3A        		.uleb128 0x3a
 2934 0322 0B        		.uleb128 0xb
 2935 0323 3B        		.uleb128 0x3b
 2936 0324 0B        		.uleb128 0xb
 2937 0325 00        		.byte	0
 2938 0326 00        		.byte	0
 2939 0327 00        		.byte	0
 2940               		.section	.debug_loc,"",@progbits
 2941               	.Ldebug_loc0:
 2942               	.LLST0:
 2943 0000 0000 0000 		.long	.LFB5-.Ltext0
 2944 0004 0200 0000 		.long	.LCFI0-.Ltext0
 2945 0008 0300      		.word	0x3
 2946 000a 92        		.byte	0x92
 2947 000b 20        		.uleb128 0x20
 2948 000c 02        		.sleb128 2
 2949 000d 0200 0000 		.long	.LCFI0-.Ltext0
 2950 0011 4A00 0000 		.long	.LFE5-.Ltext0
 2951 0015 0300      		.word	0x3
 2952 0017 92        		.byte	0x92
 2953 0018 20        		.uleb128 0x20
 2954 0019 03        		.sleb128 3
 2955 001a 0000 0000 		.long	0
 2956 001e 0000 0000 		.long	0
 2957               	.LLST1:
 2958 0022 0000 0000 		.long	.LVL0-.Ltext0
 2959 0026 2600 0000 		.long	.LVL2-.Ltext0
 2960 002a 0600      		.word	0x6
 2961 002c 68        		.byte	0x68
 2962 002d 93        		.byte	0x93
 2963 002e 01        		.uleb128 0x1
 2964 002f 69        		.byte	0x69
 2965 0030 93        		.byte	0x93
 2966 0031 01        		.uleb128 0x1
 2967 0032 2600 0000 		.long	.LVL2-.Ltext0
 2968 0036 2800 0000 		.long	.LVL3-.Ltext0
 2969 003a 0600      		.word	0x6
 2970 003c 6E        		.byte	0x6e
 2971 003d 93        		.byte	0x93
 2972 003e 01        		.uleb128 0x1
 2973 003f 6F        		.byte	0x6f
 2974 0040 93        		.byte	0x93
 2975 0041 01        		.uleb128 0x1
 2976 0042 2800 0000 		.long	.LVL3-.Ltext0
 2977 0046 3000 0000 		.long	.LVL4-.Ltext0
 2978 004a 0600      		.word	0x6
 2979 004c 68        		.byte	0x68
 2980 004d 93        		.byte	0x93
 2981 004e 01        		.uleb128 0x1
 2982 004f 69        		.byte	0x69
 2983 0050 93        		.byte	0x93
 2984 0051 01        		.uleb128 0x1
 2985 0052 3000 0000 		.long	.LVL4-.Ltext0
 2986 0056 4A00 0000 		.long	.LFE5-.Ltext0
 2987 005a 0400      		.word	0x4
 2988 005c F3        		.byte	0xf3
 2989 005d 01        		.uleb128 0x1
 2990 005e 68        		.byte	0x68
 2991 005f 9F        		.byte	0x9f
 2992 0060 0000 0000 		.long	0
 2993 0064 0000 0000 		.long	0
 2994               	.LLST2:
 2995 0068 0000 0000 		.long	.LVL0-.Ltext0
 2996 006c 3F00 0000 		.long	.LVL8-1-.Ltext0
 2997 0070 0100      		.word	0x1
 2998 0072 66        		.byte	0x66
 2999 0073 3F00 0000 		.long	.LVL8-1-.Ltext0
 3000 0077 4200 0000 		.long	.LVL9-.Ltext0
 3001 007b 0100      		.word	0x1
 3002 007d 6C        		.byte	0x6c
 3003 007e 4200 0000 		.long	.LVL9-.Ltext0
 3004 0082 4600 0000 		.long	.LVL10-.Ltext0
 3005 0086 0300      		.word	0x3
 3006 0088 8C        		.byte	0x8c
 3007 0089 7C        		.sleb128 -4
 3008 008a 9F        		.byte	0x9f
 3009 008b 4600 0000 		.long	.LVL10-.Ltext0
 3010 008f 4A00 0000 		.long	.LFE5-.Ltext0
 3011 0093 0400      		.word	0x4
 3012 0095 F3        		.byte	0xf3
 3013 0096 01        		.uleb128 0x1
 3014 0097 66        		.byte	0x66
 3015 0098 9F        		.byte	0x9f
 3016 0099 0000 0000 		.long	0
 3017 009d 0000 0000 		.long	0
 3018               	.LLST3:
 3019 00a1 0200 0000 		.long	.LVL1-.Ltext0
 3020 00a5 3F00 0000 		.long	.LVL8-1-.Ltext0
 3021 00a9 0100      		.word	0x1
 3022 00ab 66        		.byte	0x66
 3023 00ac 3F00 0000 		.long	.LVL8-1-.Ltext0
 3024 00b0 4200 0000 		.long	.LVL9-.Ltext0
 3025 00b4 0100      		.word	0x1
 3026 00b6 6C        		.byte	0x6c
 3027 00b7 4200 0000 		.long	.LVL9-.Ltext0
 3028 00bb 4600 0000 		.long	.LVL10-.Ltext0
 3029 00bf 0300      		.word	0x3
 3030 00c1 8C        		.byte	0x8c
 3031 00c2 7C        		.sleb128 -4
 3032 00c3 9F        		.byte	0x9f
 3033 00c4 0000 0000 		.long	0
 3034 00c8 0000 0000 		.long	0
 3035               	.LLST4:
 3036 00cc 0200 0000 		.long	.LVL1-.Ltext0
 3037 00d0 2600 0000 		.long	.LVL2-.Ltext0
 3038 00d4 0600      		.word	0x6
 3039 00d6 68        		.byte	0x68
 3040 00d7 93        		.byte	0x93
 3041 00d8 01        		.uleb128 0x1
 3042 00d9 69        		.byte	0x69
 3043 00da 93        		.byte	0x93
 3044 00db 01        		.uleb128 0x1
 3045 00dc 2600 0000 		.long	.LVL2-.Ltext0
 3046 00e0 2800 0000 		.long	.LVL3-.Ltext0
 3047 00e4 0600      		.word	0x6
 3048 00e6 6E        		.byte	0x6e
 3049 00e7 93        		.byte	0x93
 3050 00e8 01        		.uleb128 0x1
 3051 00e9 6F        		.byte	0x6f
 3052 00ea 93        		.byte	0x93
 3053 00eb 01        		.uleb128 0x1
 3054 00ec 2800 0000 		.long	.LVL3-.Ltext0
 3055 00f0 3000 0000 		.long	.LVL4-.Ltext0
 3056 00f4 0600      		.word	0x6
 3057 00f6 68        		.byte	0x68
 3058 00f7 93        		.byte	0x93
 3059 00f8 01        		.uleb128 0x1
 3060 00f9 69        		.byte	0x69
 3061 00fa 93        		.byte	0x93
 3062 00fb 01        		.uleb128 0x1
 3063 00fc 3000 0000 		.long	.LVL4-.Ltext0
 3064 0100 3200 0000 		.long	.LVL5-.Ltext0
 3065 0104 0300      		.word	0x3
 3066 0106 8E        		.byte	0x8e
 3067 0107 01        		.sleb128 1
 3068 0108 9F        		.byte	0x9f
 3069 0109 3200 0000 		.long	.LVL5-.Ltext0
 3070 010d 3F00 0000 		.long	.LVL8-1-.Ltext0
 3071 0111 0600      		.word	0x6
 3072 0113 6E        		.byte	0x6e
 3073 0114 93        		.byte	0x93
 3074 0115 01        		.uleb128 0x1
 3075 0116 6F        		.byte	0x6f
 3076 0117 93        		.byte	0x93
 3077 0118 01        		.uleb128 0x1
 3078 0119 0000 0000 		.long	0
 3079 011d 0000 0000 		.long	0
 3080               	.LLST5:
 3081 0121 3000 0000 		.long	.LVL4-.Ltext0
 3082 0125 3200 0000 		.long	.LVL5-.Ltext0
 3083 0129 0D00      		.word	0xd
 3084 012b 8E        		.byte	0x8e
 3085 012c 00        		.sleb128 0
 3086 012d F3        		.byte	0xf3
 3087 012e 01        		.uleb128 0x1
 3088 012f 68        		.byte	0x68
 3089 0130 1C        		.byte	0x1c
 3090 0131 03        		.byte	0x3
 3091 0132 0000 0000 		.long	usbTxStatus1+3
 3092 0136 22        		.byte	0x22
 3093 0137 9F        		.byte	0x9f
 3094 0138 3200 0000 		.long	.LVL5-.Ltext0
 3095 013c 3F00 0000 		.long	.LVL8-1-.Ltext0
 3096 0140 0D00      		.word	0xd
 3097 0142 8E        		.byte	0x8e
 3098 0143 00        		.sleb128 0
 3099 0144 F3        		.byte	0xf3
 3100 0145 01        		.uleb128 0x1
 3101 0146 68        		.byte	0x68
 3102 0147 1C        		.byte	0x1c
 3103 0148 03        		.byte	0x3
 3104 0149 0000 0000 		.long	usbTxStatus1+2
 3105 014d 22        		.byte	0x22
 3106 014e 9F        		.byte	0x9f
 3107 014f 0000 0000 		.long	0
 3108 0153 0000 0000 		.long	0
 3109               	.LLST6:
 3110 0157 3000 0000 		.long	.LVL4-.Ltext0
 3111 015b 3E00 0000 		.long	.LVL7-.Ltext0
 3112 015f 0100      		.word	0x1
 3113 0161 68        		.byte	0x68
 3114 0162 0000 0000 		.long	0
 3115 0166 0000 0000 		.long	0
 3116               	.LLST7:
 3117 016a 4A00 0000 		.long	.LFB12-.Ltext0
 3118 016e 4C00 0000 		.long	.LCFI1-.Ltext0
 3119 0172 0300      		.word	0x3
 3120 0174 92        		.byte	0x92
 3121 0175 20        		.uleb128 0x20
 3122 0176 02        		.sleb128 2
 3123 0177 4C00 0000 		.long	.LCFI1-.Ltext0
 3124 017b 4E00 0000 		.long	.LCFI2-.Ltext0
 3125 017f 0300      		.word	0x3
 3126 0181 92        		.byte	0x92
 3127 0182 20        		.uleb128 0x20
 3128 0183 03        		.sleb128 3
 3129 0184 4E00 0000 		.long	.LCFI2-.Ltext0
 3130 0188 2603 0000 		.long	.LFE12-.Ltext0
 3131 018c 0300      		.word	0x3
 3132 018e 92        		.byte	0x92
 3133 018f 20        		.uleb128 0x20
 3134 0190 04        		.sleb128 4
 3135 0191 0000 0000 		.long	0
 3136 0195 0000 0000 		.long	0
 3137               	.LLST8:
 3138 0199 5400 0000 		.long	.LVL11-.Ltext0
 3139 019d 9300 0000 		.long	.LVL16-1-.Ltext0
 3140 01a1 0100      		.word	0x1
 3141 01a3 66        		.byte	0x66
 3142 01a4 9C00 0000 		.long	.LVL17-.Ltext0
 3143 01a8 E601 0000 		.long	.LVL66-.Ltext0
 3144 01ac 0100      		.word	0x1
 3145 01ae 66        		.byte	0x66
 3146 01af 0802 0000 		.long	.LVL70-.Ltext0
 3147 01b3 1302 0000 		.long	.LVL71-1-.Ltext0
 3148 01b7 0100      		.word	0x1
 3149 01b9 66        		.byte	0x66
 3150 01ba 0000 0000 		.long	0
 3151 01be 0000 0000 		.long	0
 3152               	.LLST9:
 3153 01c2 DC02 0000 		.long	.LVL103-.Ltext0
 3154 01c6 DE02 0000 		.long	.LVL104-.Ltext0
 3155 01ca 0200      		.word	0x2
 3156 01cc 44        		.byte	0x44
 3157 01cd 9F        		.byte	0x9f
 3158 01ce DE02 0000 		.long	.LVL104-.Ltext0
 3159 01d2 0B03 0000 		.long	.LVL111-1-.Ltext0
 3160 01d6 0100      		.word	0x1
 3161 01d8 68        		.byte	0x68
 3162 01d9 0000 0000 		.long	0
 3163 01dd 0000 0000 		.long	0
 3164               	.LLST10:
 3165 01e1 6800 0000 		.long	.LVL12-.Ltext0
 3166 01e5 9300 0000 		.long	.LVL16-1-.Ltext0
 3167 01e9 0100      		.word	0x1
 3168 01eb 66        		.byte	0x66
 3169 01ec 9C00 0000 		.long	.LVL17-.Ltext0
 3170 01f0 E601 0000 		.long	.LVL66-.Ltext0
 3171 01f4 0100      		.word	0x1
 3172 01f6 66        		.byte	0x66
 3173 01f7 0802 0000 		.long	.LVL70-.Ltext0
 3174 01fb 1302 0000 		.long	.LVL71-1-.Ltext0
 3175 01ff 0100      		.word	0x1
 3176 0201 66        		.byte	0x66
 3177 0202 0000 0000 		.long	0
 3178 0206 0000 0000 		.long	0
 3179               	.LLST11:
 3180 020a 6800 0000 		.long	.LVL12-.Ltext0
 3181 020e 2602 0000 		.long	.LVL74-.Ltext0
 3182 0212 0600      		.word	0x6
 3183 0214 6C        		.byte	0x6c
 3184 0215 93        		.byte	0x93
 3185 0216 01        		.uleb128 0x1
 3186 0217 6D        		.byte	0x6d
 3187 0218 93        		.byte	0x93
 3188 0219 01        		.uleb128 0x1
 3189 021a 0000 0000 		.long	0
 3190 021e 0000 0000 		.long	0
 3191               	.LLST12:
 3192 0222 6800 0000 		.long	.LVL12-.Ltext0
 3193 0226 2A02 0000 		.long	.LVL75-.Ltext0
 3194 022a 0600      		.word	0x6
 3195 022c 6C        		.byte	0x6c
 3196 022d 93        		.byte	0x93
 3197 022e 01        		.uleb128 0x1
 3198 022f 6D        		.byte	0x6d
 3199 0230 93        		.byte	0x93
 3200 0231 01        		.uleb128 0x1
 3201 0232 0000 0000 		.long	0
 3202 0236 0000 0000 		.long	0
 3203               	.LLST13:
 3204 023a 9400 0000 		.long	.LVL16-.Ltext0
 3205 023e 9C00 0000 		.long	.LVL17-.Ltext0
 3206 0242 0100      		.word	0x1
 3207 0244 68        		.byte	0x68
 3208 0245 E601 0000 		.long	.LVL66-.Ltext0
 3209 0249 0802 0000 		.long	.LVL70-.Ltext0
 3210 024d 0100      		.word	0x1
 3211 024f 68        		.byte	0x68
 3212 0250 0000 0000 		.long	0
 3213 0254 0000 0000 		.long	0
 3214               	.LLST14:
 3215 0258 8A00 0000 		.long	.LVL13-.Ltext0
 3216 025c 8E00 0000 		.long	.LVL14-.Ltext0
 3217 0260 0600      		.word	0x6
 3218 0262 82        		.byte	0x82
 3219 0263 00        		.sleb128 0
 3220 0264 08        		.byte	0x8
 3221 0265 60        		.byte	0x60
 3222 0266 1A        		.byte	0x1a
 3223 0267 9F        		.byte	0x9f
 3224 0268 8E00 0000 		.long	.LVL14-.Ltext0
 3225 026c 9200 0000 		.long	.LVL15-.Ltext0
 3226 0270 0100      		.word	0x1
 3227 0272 68        		.byte	0x68
 3228 0273 9200 0000 		.long	.LVL15-.Ltext0
 3229 0277 9300 0000 		.long	.LVL16-1-.Ltext0
 3230 027b 0600      		.word	0x6
 3231 027d 82        		.byte	0x82
 3232 027e 00        		.sleb128 0
 3233 027f 08        		.byte	0x8
 3234 0280 60        		.byte	0x60
 3235 0281 1A        		.byte	0x1a
 3236 0282 9F        		.byte	0x9f
 3237 0283 9C00 0000 		.long	.LVL17-.Ltext0
 3238 0287 A600 0000 		.long	.LVL20-.Ltext0
 3239 028b 0100      		.word	0x1
 3240 028d 68        		.byte	0x68
 3241 028e A600 0000 		.long	.LVL20-.Ltext0
 3242 0292 AC00 0000 		.long	.LVL22-.Ltext0
 3243 0296 0600      		.word	0x6
 3244 0298 82        		.byte	0x82
 3245 0299 00        		.sleb128 0
 3246 029a 08        		.byte	0x8
 3247 029b 60        		.byte	0x60
 3248 029c 1A        		.byte	0x1a
 3249 029d 9F        		.byte	0x9f
 3250 029e AC00 0000 		.long	.LVL22-.Ltext0
 3251 02a2 D000 0000 		.long	.LVL27-.Ltext0
 3252 02a6 0800      		.word	0x8
 3253 02a8 8C        		.byte	0x8c
 3254 02a9 00        		.sleb128 0
 3255 02aa 94        		.byte	0x94
 3256 02ab 01        		.byte	0x1
 3257 02ac 08        		.byte	0x8
 3258 02ad 60        		.byte	0x60
 3259 02ae 1A        		.byte	0x1a
 3260 02af 9F        		.byte	0x9f
 3261 02b0 D000 0000 		.long	.LVL27-.Ltext0
 3262 02b4 D200 0000 		.long	.LVL28-.Ltext0
 3263 02b8 0600      		.word	0x6
 3264 02ba 82        		.byte	0x82
 3265 02bb 00        		.sleb128 0
 3266 02bc 08        		.byte	0x8
 3267 02bd 60        		.byte	0x60
 3268 02be 1A        		.byte	0x1a
 3269 02bf 9F        		.byte	0x9f
 3270 02c0 D200 0000 		.long	.LVL28-.Ltext0
 3271 02c4 E601 0000 		.long	.LVL66-.Ltext0
 3272 02c8 0800      		.word	0x8
 3273 02ca 8C        		.byte	0x8c
 3274 02cb 00        		.sleb128 0
 3275 02cc 94        		.byte	0x94
 3276 02cd 01        		.byte	0x1
 3277 02ce 08        		.byte	0x8
 3278 02cf 60        		.byte	0x60
 3279 02d0 1A        		.byte	0x1a
 3280 02d1 9F        		.byte	0x9f
 3281 02d2 0000 0000 		.long	0
 3282 02d6 0000 0000 		.long	0
 3283               	.LLST15:
 3284 02da 9C00 0000 		.long	.LVL17-.Ltext0
 3285 02de E601 0000 		.long	.LVL66-.Ltext0
 3286 02e2 0600      		.word	0x6
 3287 02e4 6C        		.byte	0x6c
 3288 02e5 93        		.byte	0x93
 3289 02e6 01        		.uleb128 0x1
 3290 02e7 6D        		.byte	0x6d
 3291 02e8 93        		.byte	0x93
 3292 02e9 01        		.uleb128 0x1
 3293 02ea 0000 0000 		.long	0
 3294 02ee 0000 0000 		.long	0
 3295               	.LLST16:
 3296 02f2 9C00 0000 		.long	.LVL17-.Ltext0
 3297 02f6 C800 0000 		.long	.LVL25-.Ltext0
 3298 02fa 0200      		.word	0x2
 3299 02fc 30        		.byte	0x30
 3300 02fd 9F        		.byte	0x9f
 3301 02fe C800 0000 		.long	.LVL25-.Ltext0
 3302 0302 D000 0000 		.long	.LVL27-.Ltext0
 3303 0306 0200      		.word	0x2
 3304 0308 32        		.byte	0x32
 3305 0309 9F        		.byte	0x9f
 3306 030a D000 0000 		.long	.LVL27-.Ltext0
 3307 030e A201 0000 		.long	.LVL58-.Ltext0
 3308 0312 0200      		.word	0x2
 3309 0314 30        		.byte	0x30
 3310 0315 9F        		.byte	0x9f
 3311 0316 A401 0000 		.long	.LVL59-.Ltext0
 3312 031a DC01 0000 		.long	.LVL65-.Ltext0
 3313 031e 0200      		.word	0x2
 3314 0320 30        		.byte	0x30
 3315 0321 9F        		.byte	0x9f
 3316 0322 DC01 0000 		.long	.LVL65-.Ltext0
 3317 0326 E601 0000 		.long	.LVL66-.Ltext0
 3318 032a 0100      		.word	0x1
 3319 032c 68        		.byte	0x68
 3320 032d 0000 0000 		.long	0
 3321 0331 0000 0000 		.long	0
 3322               	.LLST17:
 3323 0335 CC00 0000 		.long	.LVL26-.Ltext0
 3324 0339 D000 0000 		.long	.LVL27-.Ltext0
 3325 033d 0600      		.word	0x6
 3326 033f 62        		.byte	0x62
 3327 0340 93        		.byte	0x93
 3328 0341 01        		.uleb128 0x1
 3329 0342 63        		.byte	0x63
 3330 0343 93        		.byte	0x93
 3331 0344 01        		.uleb128 0x1
 3332 0345 DA01 0000 		.long	.LVL64-.Ltext0
 3333 0349 E601 0000 		.long	.LVL66-.Ltext0
 3334 034d 0600      		.word	0x6
 3335 034f 62        		.byte	0x62
 3336 0350 93        		.byte	0x93
 3337 0351 01        		.uleb128 0x1
 3338 0352 63        		.byte	0x63
 3339 0353 93        		.byte	0x93
 3340 0354 01        		.uleb128 0x1
 3341 0355 0000 0000 		.long	0
 3342 0359 0000 0000 		.long	0
 3343               	.LLST18:
 3344 035d 9E00 0000 		.long	.LVL18-.Ltext0
 3345 0361 B800 0000 		.long	.LVL23-.Ltext0
 3346 0365 0100      		.word	0x1
 3347 0367 69        		.byte	0x69
 3348 0368 B800 0000 		.long	.LVL23-.Ltext0
 3349 036c D000 0000 		.long	.LVL27-.Ltext0
 3350 0370 0200      		.word	0x2
 3351 0372 8C        		.byte	0x8c
 3352 0373 02        		.sleb128 2
 3353 0374 D000 0000 		.long	.LVL27-.Ltext0
 3354 0378 9E01 0000 		.long	.LVL57-.Ltext0
 3355 037c 0100      		.word	0x1
 3356 037e 69        		.byte	0x69
 3357 037f 9E01 0000 		.long	.LVL57-.Ltext0
 3358 0383 A401 0000 		.long	.LVL59-.Ltext0
 3359 0387 0200      		.word	0x2
 3360 0389 8C        		.byte	0x8c
 3361 038a 02        		.sleb128 2
 3362 038b A401 0000 		.long	.LVL59-.Ltext0
 3363 038f DC01 0000 		.long	.LVL65-.Ltext0
 3364 0393 0100      		.word	0x1
 3365 0395 69        		.byte	0x69
 3366 0396 DC01 0000 		.long	.LVL65-.Ltext0
 3367 039a E601 0000 		.long	.LVL66-.Ltext0
 3368 039e 0200      		.word	0x2
 3369 03a0 8C        		.byte	0x8c
 3370 03a1 02        		.sleb128 2
 3371 03a2 0000 0000 		.long	0
 3372 03a6 0000 0000 		.long	0
 3373               	.LLST19:
 3374 03aa A000 0000 		.long	.LVL19-.Ltext0
 3375 03ae E601 0000 		.long	.LVL66-.Ltext0
 3376 03b2 0100      		.word	0x1
 3377 03b4 63        		.byte	0x63
 3378 03b5 0000 0000 		.long	0
 3379 03b9 0000 0000 		.long	0
 3380               	.LLST20:
 3381 03bd A600 0000 		.long	.LVL20-.Ltext0
 3382 03c1 BA00 0000 		.long	.LVL24-.Ltext0
 3383 03c5 0100      		.word	0x1
 3384 03c7 68        		.byte	0x68
 3385 03c8 BA00 0000 		.long	.LVL24-.Ltext0
 3386 03cc D000 0000 		.long	.LVL27-.Ltext0
 3387 03d0 0200      		.word	0x2
 3388 03d2 8C        		.byte	0x8c
 3389 03d3 01        		.sleb128 1
 3390 03d4 D000 0000 		.long	.LVL27-.Ltext0
 3391 03d8 E800 0000 		.long	.LVL29-.Ltext0
 3392 03dc 0100      		.word	0x1
 3393 03de 68        		.byte	0x68
 3394 03df E800 0000 		.long	.LVL29-.Ltext0
 3395 03e3 EA00 0000 		.long	.LVL30-.Ltext0
 3396 03e7 0200      		.word	0x2
 3397 03e9 8C        		.byte	0x8c
 3398 03ea 01        		.sleb128 1
 3399 03eb EA00 0000 		.long	.LVL30-.Ltext0
 3400 03ef EC00 0000 		.long	.LVL31-.Ltext0
 3401 03f3 0100      		.word	0x1
 3402 03f5 68        		.byte	0x68
 3403 03f6 EC00 0000 		.long	.LVL31-.Ltext0
 3404 03fa F800 0000 		.long	.LVL32-.Ltext0
 3405 03fe 0200      		.word	0x2
 3406 0400 8C        		.byte	0x8c
 3407 0401 01        		.sleb128 1
 3408 0402 F800 0000 		.long	.LVL32-.Ltext0
 3409 0406 0A01 0000 		.long	.LVL33-.Ltext0
 3410 040a 0100      		.word	0x1
 3411 040c 68        		.byte	0x68
 3412 040d 0A01 0000 		.long	.LVL33-.Ltext0
 3413 0411 A401 0000 		.long	.LVL59-.Ltext0
 3414 0415 0200      		.word	0x2
 3415 0417 8C        		.byte	0x8c
 3416 0418 01        		.sleb128 1
 3417 0419 A401 0000 		.long	.LVL59-.Ltext0
 3418 041d BC01 0000 		.long	.LVL60-.Ltext0
 3419 0421 0100      		.word	0x1
 3420 0423 68        		.byte	0x68
 3421 0424 BC01 0000 		.long	.LVL60-.Ltext0
 3422 0428 C801 0000 		.long	.LVL61-.Ltext0
 3423 042c 0200      		.word	0x2
 3424 042e 8C        		.byte	0x8c
 3425 042f 01        		.sleb128 1
 3426 0430 C801 0000 		.long	.LVL61-.Ltext0
 3427 0434 D401 0000 		.long	.LVL63-.Ltext0
 3428 0438 0100      		.word	0x1
 3429 043a 68        		.byte	0x68
 3430 043b D401 0000 		.long	.LVL63-.Ltext0
 3431 043f E601 0000 		.long	.LVL66-.Ltext0
 3432 0443 0200      		.word	0x2
 3433 0445 8C        		.byte	0x8c
 3434 0446 01        		.sleb128 1
 3435 0447 0000 0000 		.long	0
 3436 044b 0000 0000 		.long	0
 3437               	.LLST21:
 3438 044f AA00 0000 		.long	.LVL21-.Ltext0
 3439 0453 AC00 0000 		.long	.LVL22-.Ltext0
 3440 0457 0500      		.word	0x5
 3441 0459 82        		.byte	0x82
 3442 045a 00        		.sleb128 0
 3443 045b 4F        		.byte	0x4f
 3444 045c 1A        		.byte	0x1a
 3445 045d 9F        		.byte	0x9f
 3446 045e AC00 0000 		.long	.LVL22-.Ltext0
 3447 0462 CC00 0000 		.long	.LVL26-.Ltext0
 3448 0466 0100      		.word	0x1
 3449 0468 62        		.byte	0x62
 3450 0469 CC00 0000 		.long	.LVL26-.Ltext0
 3451 046d D000 0000 		.long	.LVL27-.Ltext0
 3452 0471 0700      		.word	0x7
 3453 0473 8C        		.byte	0x8c
 3454 0474 00        		.sleb128 0
 3455 0475 94        		.byte	0x94
 3456 0476 01        		.byte	0x1
 3457 0477 4F        		.byte	0x4f
 3458 0478 1A        		.byte	0x1a
 3459 0479 9F        		.byte	0x9f
 3460 047a 0000 0000 		.long	0
 3461 047e 0000 0000 		.long	0
 3462               	.LLST22:
 3463 0482 0A01 0000 		.long	.LVL33-.Ltext0
 3464 0486 A401 0000 		.long	.LVL59-.Ltext0
 3465 048a 0600      		.word	0x6
 3466 048c 6C        		.byte	0x6c
 3467 048d 93        		.byte	0x93
 3468 048e 01        		.uleb128 0x1
 3469 048f 6D        		.byte	0x6d
 3470 0490 93        		.byte	0x93
 3471 0491 01        		.uleb128 0x1
 3472 0492 0000 0000 		.long	0
 3473 0496 0000 0000 		.long	0
 3474               	.LLST24:
 3475 049a 0A01 0000 		.long	.LVL33-.Ltext0
 3476 049e 0E01 0000 		.long	.LVL34-.Ltext0
 3477 04a2 0200      		.word	0x2
 3478 04a4 30        		.byte	0x30
 3479 04a5 9F        		.byte	0x9f
 3480 04a6 0E01 0000 		.long	.LVL34-.Ltext0
 3481 04aa 1E01 0000 		.long	.LVL36-.Ltext0
 3482 04ae 0200      		.word	0x2
 3483 04b0 42        		.byte	0x42
 3484 04b1 9F        		.byte	0x9f
 3485 04b2 1E01 0000 		.long	.LVL36-.Ltext0
 3486 04b6 2201 0000 		.long	.LVL37-.Ltext0
 3487 04ba 0200      		.word	0x2
 3488 04bc 30        		.byte	0x30
 3489 04bd 9F        		.byte	0x9f
 3490 04be 2201 0000 		.long	.LVL37-.Ltext0
 3491 04c2 3201 0000 		.long	.LVL39-.Ltext0
 3492 04c6 0300      		.word	0x3
 3493 04c8 08        		.byte	0x8
 3494 04c9 22        		.byte	0x22
 3495 04ca 9F        		.byte	0x9f
 3496 04cb 3201 0000 		.long	.LVL39-.Ltext0
 3497 04cf 3A01 0000 		.long	.LVL41-.Ltext0
 3498 04d3 0200      		.word	0x2
 3499 04d5 30        		.byte	0x30
 3500 04d6 9F        		.byte	0x9f
 3501 04d7 3A01 0000 		.long	.LVL41-.Ltext0
 3502 04db 4A01 0000 		.long	.LVL43-.Ltext0
 3503 04df 0200      		.word	0x2
 3504 04e1 34        		.byte	0x34
 3505 04e2 9F        		.byte	0x9f
 3506 04e3 4A01 0000 		.long	.LVL43-.Ltext0
 3507 04e7 4E01 0000 		.long	.LVL44-.Ltext0
 3508 04eb 0200      		.word	0x2
 3509 04ed 30        		.byte	0x30
 3510 04ee 9F        		.byte	0x9f
 3511 04ef 4E01 0000 		.long	.LVL44-.Ltext0
 3512 04f3 5E01 0000 		.long	.LVL46-.Ltext0
 3513 04f7 0200      		.word	0x2
 3514 04f9 46        		.byte	0x46
 3515 04fa 9F        		.byte	0x9f
 3516 04fb 5E01 0000 		.long	.LVL46-.Ltext0
 3517 04ff 6201 0000 		.long	.LVL47-.Ltext0
 3518 0503 0200      		.word	0x2
 3519 0505 30        		.byte	0x30
 3520 0506 9F        		.byte	0x9f
 3521 0507 6201 0000 		.long	.LVL47-.Ltext0
 3522 050b 7201 0000 		.long	.LVL49-.Ltext0
 3523 050f 0300      		.word	0x3
 3524 0511 08        		.byte	0x8
 3525 0512 24        		.byte	0x24
 3526 0513 9F        		.byte	0x9f
 3527 0514 7201 0000 		.long	.LVL49-.Ltext0
 3528 0518 7601 0000 		.long	.LVL50-.Ltext0
 3529 051c 0200      		.word	0x2
 3530 051e 30        		.byte	0x30
 3531 051f 9F        		.byte	0x9f
 3532 0520 7601 0000 		.long	.LVL50-.Ltext0
 3533 0524 8601 0000 		.long	.LVL52-.Ltext0
 3534 0528 0200      		.word	0x2
 3535 052a 39        		.byte	0x39
 3536 052b 9F        		.byte	0x9f
 3537 052c 8601 0000 		.long	.LVL52-.Ltext0
 3538 0530 8A01 0000 		.long	.LVL53-.Ltext0
 3539 0534 0200      		.word	0x2
 3540 0536 30        		.byte	0x30
 3541 0537 9F        		.byte	0x9f
 3542 0538 8A01 0000 		.long	.LVL53-.Ltext0
 3543 053c 9A01 0000 		.long	.LVL55-.Ltext0
 3544 0540 0300      		.word	0x3
 3545 0542 08        		.byte	0x8
 3546 0543 50        		.byte	0x50
 3547 0544 9F        		.byte	0x9f
 3548 0545 9A01 0000 		.long	.LVL55-.Ltext0
 3549 0549 9C01 0000 		.long	.LVL56-.Ltext0
 3550 054d 0200      		.word	0x2
 3551 054f 30        		.byte	0x30
 3552 0550 9F        		.byte	0x9f
 3553 0551 9C01 0000 		.long	.LVL56-.Ltext0
 3554 0555 A201 0000 		.long	.LVL58-.Ltext0
 3555 0559 0100      		.word	0x1
 3556 055b 68        		.byte	0x68
 3557 055c 0000 0000 		.long	0
 3558 0560 0000 0000 		.long	0
 3559               	.LLST25:
 3560 0564 0A01 0000 		.long	.LVL33-.Ltext0
 3561 0568 A401 0000 		.long	.LVL59-.Ltext0
 3562 056c 0300      		.word	0x3
 3563 056e 08        		.byte	0x8
 3564 056f 40        		.byte	0x40
 3565 0570 9F        		.byte	0x9f
 3566 0571 0000 0000 		.long	0
 3567 0575 0000 0000 		.long	0
 3568               	.LLST26:
 3569 0579 0A01 0000 		.long	.LVL33-.Ltext0
 3570 057d 1201 0000 		.long	.LVL35-.Ltext0
 3571 0581 0100      		.word	0x1
 3572 0583 68        		.byte	0x68
 3573 0584 1201 0000 		.long	.LVL35-.Ltext0
 3574 0588 1E01 0000 		.long	.LVL36-.Ltext0
 3575 058c 0200      		.word	0x2
 3576 058e 8C        		.byte	0x8c
 3577 058f 03        		.sleb128 3
 3578 0590 1E01 0000 		.long	.LVL36-.Ltext0
 3579 0594 2601 0000 		.long	.LVL38-.Ltext0
 3580 0598 0100      		.word	0x1
 3581 059a 68        		.byte	0x68
 3582 059b 2601 0000 		.long	.LVL38-.Ltext0
 3583 059f 3201 0000 		.long	.LVL39-.Ltext0
 3584 05a3 0200      		.word	0x2
 3585 05a5 8C        		.byte	0x8c
 3586 05a6 03        		.sleb128 3
 3587 05a7 3201 0000 		.long	.LVL39-.Ltext0
 3588 05ab 3E01 0000 		.long	.LVL42-.Ltext0
 3589 05af 0100      		.word	0x1
 3590 05b1 68        		.byte	0x68
 3591 05b2 3E01 0000 		.long	.LVL42-.Ltext0
 3592 05b6 4A01 0000 		.long	.LVL43-.Ltext0
 3593 05ba 0200      		.word	0x2
 3594 05bc 8C        		.byte	0x8c
 3595 05bd 03        		.sleb128 3
 3596 05be 4A01 0000 		.long	.LVL43-.Ltext0
 3597 05c2 5201 0000 		.long	.LVL45-.Ltext0
 3598 05c6 0100      		.word	0x1
 3599 05c8 68        		.byte	0x68
 3600 05c9 5201 0000 		.long	.LVL45-.Ltext0
 3601 05cd 5E01 0000 		.long	.LVL46-.Ltext0
 3602 05d1 0200      		.word	0x2
 3603 05d3 8C        		.byte	0x8c
 3604 05d4 03        		.sleb128 3
 3605 05d5 5E01 0000 		.long	.LVL46-.Ltext0
 3606 05d9 6601 0000 		.long	.LVL48-.Ltext0
 3607 05dd 0100      		.word	0x1
 3608 05df 68        		.byte	0x68
 3609 05e0 6601 0000 		.long	.LVL48-.Ltext0
 3610 05e4 7201 0000 		.long	.LVL49-.Ltext0
 3611 05e8 0200      		.word	0x2
 3612 05ea 8C        		.byte	0x8c
 3613 05eb 03        		.sleb128 3
 3614 05ec 7201 0000 		.long	.LVL49-.Ltext0
 3615 05f0 7A01 0000 		.long	.LVL51-.Ltext0
 3616 05f4 0100      		.word	0x1
 3617 05f6 68        		.byte	0x68
 3618 05f7 7A01 0000 		.long	.LVL51-.Ltext0
 3619 05fb 8601 0000 		.long	.LVL52-.Ltext0
 3620 05ff 0200      		.word	0x2
 3621 0601 8C        		.byte	0x8c
 3622 0602 03        		.sleb128 3
 3623 0603 8601 0000 		.long	.LVL52-.Ltext0
 3624 0607 8E01 0000 		.long	.LVL54-.Ltext0
 3625 060b 0100      		.word	0x1
 3626 060d 68        		.byte	0x68
 3627 060e 8E01 0000 		.long	.LVL54-.Ltext0
 3628 0612 9A01 0000 		.long	.LVL55-.Ltext0
 3629 0616 0200      		.word	0x2
 3630 0618 8C        		.byte	0x8c
 3631 0619 03        		.sleb128 3
 3632 061a 9A01 0000 		.long	.LVL55-.Ltext0
 3633 061e 9C01 0000 		.long	.LVL56-.Ltext0
 3634 0622 0100      		.word	0x1
 3635 0624 68        		.byte	0x68
 3636 0625 9C01 0000 		.long	.LVL56-.Ltext0
 3637 0629 A201 0000 		.long	.LVL58-.Ltext0
 3638 062d 0200      		.word	0x2
 3639 062f 8C        		.byte	0x8c
 3640 0630 03        		.sleb128 3
 3641 0631 0000 0000 		.long	0
 3642 0635 0000 0000 		.long	0
 3643               	.LLST27:
 3644 0639 3601 0000 		.long	.LVL40-.Ltext0
 3645 063d 7201 0000 		.long	.LVL49-.Ltext0
 3646 0641 0100      		.word	0x1
 3647 0643 69        		.byte	0x69
 3648 0644 0000 0000 		.long	0
 3649 0648 0000 0000 		.long	0
 3650               	.LLST28:
 3651 064c 1402 0000 		.long	.LVL71-.Ltext0
 3652 0650 1A02 0000 		.long	.LVL72-.Ltext0
 3653 0654 0100      		.word	0x1
 3654 0656 68        		.byte	0x68
 3655 0657 2002 0000 		.long	.LVL73-.Ltext0
 3656 065b 2602 0000 		.long	.LVL74-.Ltext0
 3657 065f 0100      		.word	0x1
 3658 0661 68        		.byte	0x68
 3659 0662 0000 0000 		.long	0
 3660 0666 0000 0000 		.long	0
 3661               	.LLST29:
 3662 066a 3C02 0000 		.long	.LVL76-.Ltext0
 3663 066e 4402 0000 		.long	.LVL77-.Ltext0
 3664 0672 0100      		.word	0x1
 3665 0674 68        		.byte	0x68
 3666 0675 4402 0000 		.long	.LVL77-.Ltext0
 3667 0679 6E02 0000 		.long	.LVL81-.Ltext0
 3668 067d 0100      		.word	0x1
 3669 067f 6C        		.byte	0x6c
 3670 0680 7402 0000 		.long	.LVL82-.Ltext0
 3671 0684 BA02 0000 		.long	.LVL97-.Ltext0
 3672 0688 0100      		.word	0x1
 3673 068a 6C        		.byte	0x6c
 3674 068b 1403 0000 		.long	.LVL113-.Ltext0
 3675 068f 1E03 0000 		.long	.LVL115-.Ltext0
 3676 0693 0100      		.word	0x1
 3677 0695 6C        		.byte	0x6c
 3678 0696 0000 0000 		.long	0
 3679 069a 0000 0000 		.long	0
 3680               	.LLST30:
 3681 069e C402 0000 		.long	.LVL99-.Ltext0
 3682 06a2 D002 0000 		.long	.LVL101-.Ltext0
 3683 06a6 0100      		.word	0x1
 3684 06a8 6C        		.byte	0x6c
 3685 06a9 D002 0000 		.long	.LVL101-.Ltext0
 3686 06ad D802 0000 		.long	.LVL102-.Ltext0
 3687 06b1 0200      		.word	0x2
 3688 06b3 4E        		.byte	0x4e
 3689 06b4 9F        		.byte	0x9f
 3690 06b5 D802 0000 		.long	.LVL102-.Ltext0
 3691 06b9 DC02 0000 		.long	.LVL103-.Ltext0
 3692 06bd 0100      		.word	0x1
 3693 06bf 6C        		.byte	0x6c
 3694 06c0 1C03 0000 		.long	.LVL114-.Ltext0
 3695 06c4 2003 0000 		.long	.LVL116-.Ltext0
 3696 06c8 0200      		.word	0x2
 3697 06ca 34        		.byte	0x34
 3698 06cb 9F        		.byte	0x9f
 3699 06cc 0000 0000 		.long	0
 3700 06d0 0000 0000 		.long	0
 3701               	.LLST31:
 3702 06d4 6A02 0000 		.long	.LVL79-.Ltext0
 3703 06d8 6B02 0000 		.long	.LVL80-1-.Ltext0
 3704 06dc 0600      		.word	0x6
 3705 06de 68        		.byte	0x68
 3706 06df 93        		.byte	0x93
 3707 06e0 01        		.uleb128 0x1
 3708 06e1 69        		.byte	0x69
 3709 06e2 93        		.byte	0x93
 3710 06e3 01        		.uleb128 0x1
 3711 06e4 8402 0000 		.long	.LVL84-.Ltext0
 3712 06e8 8802 0000 		.long	.LVL85-.Ltext0
 3713 06ec 0600      		.word	0x6
 3714 06ee 6A        		.byte	0x6a
 3715 06ef 93        		.byte	0x93
 3716 06f0 01        		.uleb128 0x1
 3717 06f1 6B        		.byte	0x6b
 3718 06f2 93        		.byte	0x93
 3719 06f3 01        		.uleb128 0x1
 3720 06f4 8802 0000 		.long	.LVL85-.Ltext0
 3721 06f8 8A02 0000 		.long	.LVL86-.Ltext0
 3722 06fc 0C00      		.word	0xc
 3723 06fe 8E        		.byte	0x8e
 3724 06ff 00        		.sleb128 0
 3725 0700 88        		.byte	0x88
 3726 0701 00        		.sleb128 0
 3727 0702 1C        		.byte	0x1c
 3728 0703 03        		.byte	0x3
 3729 0704 0000 0000 		.long	usbTxBuf+1
 3730 0708 22        		.byte	0x22
 3731 0709 9F        		.byte	0x9f
 3732 070a 8A02 0000 		.long	.LVL86-.Ltext0
 3733 070e 8E02 0000 		.long	.LVL87-.Ltext0
 3734 0712 0C00      		.word	0xc
 3735 0714 8E        		.byte	0x8e
 3736 0715 00        		.sleb128 0
 3737 0716 88        		.byte	0x88
 3738 0717 00        		.sleb128 0
 3739 0718 1C        		.byte	0x1c
 3740 0719 03        		.byte	0x3
 3741 071a 0000 0000 		.long	usbTxBuf+2
 3742 071e 22        		.byte	0x22
 3743 071f 9F        		.byte	0x9f
 3744 0720 8E02 0000 		.long	.LVL87-.Ltext0
 3745 0724 9402 0000 		.long	.LVL89-.Ltext0
 3746 0728 0C00      		.word	0xc
 3747 072a 8E        		.byte	0x8e
 3748 072b 00        		.sleb128 0
 3749 072c 88        		.byte	0x88
 3750 072d 00        		.sleb128 0
 3751 072e 1C        		.byte	0x1c
 3752 072f 03        		.byte	0x3
 3753 0730 0000 0000 		.long	usbTxBuf+1
 3754 0734 22        		.byte	0x22
 3755 0735 9F        		.byte	0x9f
 3756 0736 9A02 0000 		.long	.LVL90-.Ltext0
 3757 073a 9C02 0000 		.long	.LVL91-.Ltext0
 3758 073e 0600      		.word	0x6
 3759 0740 6E        		.byte	0x6e
 3760 0741 93        		.byte	0x93
 3761 0742 01        		.uleb128 0x1
 3762 0743 6F        		.byte	0x6f
 3763 0744 93        		.byte	0x93
 3764 0745 01        		.uleb128 0x1
 3765 0746 9C02 0000 		.long	.LVL91-.Ltext0
 3766 074a 9E02 0000 		.long	.LVL92-.Ltext0
 3767 074e 0C00      		.word	0xc
 3768 0750 8A        		.byte	0x8a
 3769 0751 00        		.sleb128 0
 3770 0752 88        		.byte	0x88
 3771 0753 00        		.sleb128 0
 3772 0754 1C        		.byte	0x1c
 3773 0755 03        		.byte	0x3
 3774 0756 0000 0000 		.long	usbTxBuf+2
 3775 075a 22        		.byte	0x22
 3776 075b 9F        		.byte	0x9f
 3777 075c 9E02 0000 		.long	.LVL92-.Ltext0
 3778 0760 A402 0000 		.long	.LVL94-.Ltext0
 3779 0764 0C00      		.word	0xc
 3780 0766 8A        		.byte	0x8a
 3781 0767 00        		.sleb128 0
 3782 0768 88        		.byte	0x88
 3783 0769 00        		.sleb128 0
 3784 076a 1C        		.byte	0x1c
 3785 076b 03        		.byte	0x3
 3786 076c 0000 0000 		.long	usbTxBuf+1
 3787 0770 22        		.byte	0x22
 3788 0771 9F        		.byte	0x9f
 3789 0772 0000 0000 		.long	0
 3790 0776 0000 0000 		.long	0
 3791               	.LLST32:
 3792 077a 5602 0000 		.long	.LVL78-.Ltext0
 3793 077e 6E02 0000 		.long	.LVL81-.Ltext0
 3794 0782 0100      		.word	0x1
 3795 0784 6C        		.byte	0x6c
 3796 0785 7402 0000 		.long	.LVL82-.Ltext0
 3797 0789 BA02 0000 		.long	.LVL97-.Ltext0
 3798 078d 0100      		.word	0x1
 3799 078f 6C        		.byte	0x6c
 3800 0790 0000 0000 		.long	0
 3801 0794 0000 0000 		.long	0
 3802               	.LLST33:
 3803 0798 7402 0000 		.long	.LVL82-.Ltext0
 3804 079c 8802 0000 		.long	.LVL85-.Ltext0
 3805 07a0 0100      		.word	0x1
 3806 07a2 6C        		.byte	0x6c
 3807 07a3 8802 0000 		.long	.LVL85-.Ltext0
 3808 07a7 9402 0000 		.long	.LVL89-.Ltext0
 3809 07ab 0100      		.word	0x1
 3810 07ad 62        		.byte	0x62
 3811 07ae 9402 0000 		.long	.LVL89-.Ltext0
 3812 07b2 9C02 0000 		.long	.LVL91-.Ltext0
 3813 07b6 0100      		.word	0x1
 3814 07b8 6C        		.byte	0x6c
 3815 07b9 9C02 0000 		.long	.LVL91-.Ltext0
 3816 07bd A602 0000 		.long	.LVL95-.Ltext0
 3817 07c1 0100      		.word	0x1
 3818 07c3 62        		.byte	0x62
 3819 07c4 0000 0000 		.long	0
 3820 07c8 0000 0000 		.long	0
 3821               	.LLST34:
 3822 07cc 7C02 0000 		.long	.LVL83-.Ltext0
 3823 07d0 8802 0000 		.long	.LVL85-.Ltext0
 3824 07d4 0600      		.word	0x6
 3825 07d6 68        		.byte	0x68
 3826 07d7 93        		.byte	0x93
 3827 07d8 01        		.uleb128 0x1
 3828 07d9 69        		.byte	0x69
 3829 07da 93        		.byte	0x93
 3830 07db 01        		.uleb128 0x1
 3831 07dc 8802 0000 		.long	.LVL85-.Ltext0
 3832 07e0 9402 0000 		.long	.LVL89-.Ltext0
 3833 07e4 0600      		.word	0x6
 3834 07e6 6E        		.byte	0x6e
 3835 07e7 93        		.byte	0x93
 3836 07e8 01        		.uleb128 0x1
 3837 07e9 6F        		.byte	0x6f
 3838 07ea 93        		.byte	0x93
 3839 07eb 01        		.uleb128 0x1
 3840 07ec 9402 0000 		.long	.LVL89-.Ltext0
 3841 07f0 9C02 0000 		.long	.LVL91-.Ltext0
 3842 07f4 0600      		.word	0x6
 3843 07f6 68        		.byte	0x68
 3844 07f7 93        		.byte	0x93
 3845 07f8 01        		.uleb128 0x1
 3846 07f9 69        		.byte	0x69
 3847 07fa 93        		.byte	0x93
 3848 07fb 01        		.uleb128 0x1
 3849 07fc 9C02 0000 		.long	.LVL91-.Ltext0
 3850 0800 9E02 0000 		.long	.LVL92-.Ltext0
 3851 0804 0300      		.word	0x3
 3852 0806 8A        		.byte	0x8a
 3853 0807 01        		.sleb128 1
 3854 0808 9F        		.byte	0x9f
 3855 0809 9E02 0000 		.long	.LVL92-.Ltext0
 3856 080d A402 0000 		.long	.LVL94-.Ltext0
 3857 0811 0600      		.word	0x6
 3858 0813 6A        		.byte	0x6a
 3859 0814 93        		.byte	0x93
 3860 0815 01        		.uleb128 0x1
 3861 0816 6B        		.byte	0x6b
 3862 0817 93        		.byte	0x93
 3863 0818 01        		.uleb128 0x1
 3864 0819 B202 0000 		.long	.LVL96-.Ltext0
 3865 081d BA02 0000 		.long	.LVL97-.Ltext0
 3866 0821 0600      		.word	0x6
 3867 0823 68        		.byte	0x68
 3868 0824 93        		.byte	0x93
 3869 0825 01        		.uleb128 0x1
 3870 0826 69        		.byte	0x69
 3871 0827 93        		.byte	0x93
 3872 0828 01        		.uleb128 0x1
 3873 0829 0000 0000 		.long	0
 3874 082d 0000 0000 		.long	0
 3875               	.LLST35:
 3876 0831 8A02 0000 		.long	.LVL86-.Ltext0
 3877 0835 9402 0000 		.long	.LVL89-.Ltext0
 3878 0839 0100      		.word	0x1
 3879 083b 63        		.byte	0x63
 3880 083c 0000 0000 		.long	0
 3881 0840 0000 0000 		.long	0
 3882               	.LLST36:
 3883 0844 8802 0000 		.long	.LVL85-.Ltext0
 3884 0848 8E02 0000 		.long	.LVL87-.Ltext0
 3885 084c 0600      		.word	0x6
 3886 084e 6E        		.byte	0x6e
 3887 084f 93        		.byte	0x93
 3888 0850 01        		.uleb128 0x1
 3889 0851 6F        		.byte	0x6f
 3890 0852 93        		.byte	0x93
 3891 0853 01        		.uleb128 0x1
 3892 0854 8E02 0000 		.long	.LVL87-.Ltext0
 3893 0858 9402 0000 		.long	.LVL89-.Ltext0
 3894 085c 0300      		.word	0x3
 3895 085e 8E        		.byte	0x8e
 3896 085f 7F        		.sleb128 -1
 3897 0860 9F        		.byte	0x9f
 3898 0861 0000 0000 		.long	0
 3899 0865 0000 0000 		.long	0
 3900               	.LLST38:
 3901 0869 E002 0000 		.long	.LVL105-.Ltext0
 3902 086d E202 0000 		.long	.LVL106-.Ltext0
 3903 0871 0600      		.word	0x6
 3904 0873 89        		.byte	0x89
 3905 0874 00        		.sleb128 0
 3906 0875 08        		.byte	0x8
 3907 0876 44        		.byte	0x44
 3908 0877 1A        		.byte	0x1a
 3909 0878 9F        		.byte	0x9f
 3910 0879 E202 0000 		.long	.LVL106-.Ltext0
 3911 087d F202 0000 		.long	.LVL108-.Ltext0
 3912 0881 0100      		.word	0x1
 3913 0883 69        		.byte	0x69
 3914 0884 0000 0000 		.long	0
 3915 0888 0000 0000 		.long	0
 3916               	.LLST39:
 3917 088c F602 0000 		.long	.LVL109-.Ltext0
 3918 0890 0B03 0000 		.long	.LVL111-1-.Ltext0
 3919 0894 0100      		.word	0x1
 3920 0896 68        		.byte	0x68
 3921 0897 0000 0000 		.long	0
 3922 089b 0000 0000 		.long	0
 3923               	.LLST40:
 3924 089f FC02 0000 		.long	.LVL110-.Ltext0
 3925 08a3 1203 0000 		.long	.LVL112-.Ltext0
 3926 08a7 0100      		.word	0x1
 3927 08a9 6C        		.byte	0x6c
 3928 08aa 0000 0000 		.long	0
 3929 08ae 0000 0000 		.long	0
 3930               		.section	.debug_aranges,"",@progbits
 3931 0000 1C00 0000 		.long	0x1c
 3932 0004 0200      		.word	0x2
 3933 0006 0000 0000 		.long	.Ldebug_info0
 3934 000a 04        		.byte	0x4
 3935 000b 00        		.byte	0
 3936 000c 0000      		.word	0
 3937 000e 0000      		.word	0
 3938 0010 0000 0000 		.long	.Ltext0
 3939 0014 4003 0000 		.long	.Letext0-.Ltext0
 3940 0018 0000 0000 		.long	0
 3941 001c 0000 0000 		.long	0
 3942               		.section	.debug_ranges,"",@progbits
 3943               	.Ldebug_ranges0:
 3944 0000 0200 0000 		.long	.LBB24-.Ltext0
 3945 0004 2400 0000 		.long	.LBE24-.Ltext0
 3946 0008 2800 0000 		.long	.LBB27-.Ltext0
 3947 000c 4600 0000 		.long	.LBE27-.Ltext0
 3948 0010 0000 0000 		.long	0
 3949 0014 0000 0000 		.long	0
 3950 0018 A400 0000 		.long	.LBB65-.Ltext0
 3951 001c C800 0000 		.long	.LBE65-.Ltext0
 3952 0020 CC00 0000 		.long	.LBB78-.Ltext0
 3953 0024 CE01 0000 		.long	.LBE78-.Ltext0
 3954 0028 D201 0000 		.long	.LBB79-.Ltext0
 3955 002c D601 0000 		.long	.LBE79-.Ltext0
 3956 0030 0000 0000 		.long	0
 3957 0034 0000 0000 		.long	0
 3958 0038 AA00 0000 		.long	.LBB66-.Ltext0
 3959 003c C800 0000 		.long	.LBE66-.Ltext0
 3960 0040 CC00 0000 		.long	.LBB67-.Ltext0
 3961 0044 D000 0000 		.long	.LBE67-.Ltext0
 3962 0048 0000 0000 		.long	0
 3963 004c 0000 0000 		.long	0
 3964 0050 4402 0000 		.long	.LBB81-.Ltext0
 3965 0054 DC02 0000 		.long	.LBE81-.Ltext0
 3966 0058 1403 0000 		.long	.LBB96-.Ltext0
 3967 005c 2003 0000 		.long	.LBE96-.Ltext0
 3968 0060 0000 0000 		.long	0
 3969 0064 0000 0000 		.long	0
 3970 0068 5602 0000 		.long	.LBB83-.Ltext0
 3971 006c 6E02 0000 		.long	.LBE83-.Ltext0
 3972 0070 7402 0000 		.long	.LBB89-.Ltext0
 3973 0074 BA02 0000 		.long	.LBE89-.Ltext0
 3974 0078 0000 0000 		.long	0
 3975 007c 0000 0000 		.long	0
 3976               		.section	.debug_line,"",@progbits
 3977               	.Ldebug_line0:
 3978 0000 8203 0000 		.section	.debug_str,"MS",@progbits,1
 3978      0200 6400 
 3978      0000 0201 
 3978      FB0E 0A00 
 3978      0101 0101 
 3979               	.LASF12:
 3980 0000 776F 7264 		.string	"word"
 3980      00
 3981               	.LASF30:
 3982 0005 7573 6244 		.string	"usbDriverDescriptor"
 3982      7269 7665 
 3982      7244 6573 
 3982      6372 6970 
 3982      746F 7200 
 3983               	.LASF75:
 3984 0019 7573 6243 		.string	"usbCrc16Append"
 3984      7263 3136 
 3984      4170 7065 
 3984      6E64 00
 3985               	.LASF43:
 3986 0028 7265 6369 		.string	"recipient"
 3986      7069 656E 
 3986      7400 
 3987               	.LASF59:
 3988 0032 7573 6244 		.string	"usbDescriptorDevice"
 3988      6573 6372 
 3988      6970 746F 
 3988      7244 6576 
 3988      6963 6500 
 3989               	.LASF18:
 3990 0046 6252 6571 		.string	"bRequest"
 3990      7565 7374 
 3990      00
 3991               	.LASF71:
 3992 004f 7573 6252 		.string	"usbRxLen"
 3992      784C 656E 
 3992      00
 3993               	.LASF42:
 3994 0058 696E 6465 		.string	"index"
 3994      7800 
 3995               	.LASF58:
 3996 005e 7573 6243 		.string	"usbConfiguration"
 3996      6F6E 6669 
 3996      6775 7261 
 3996      7469 6F6E 
 3996      00
 3997               	.LASF10:
 3998 006f 7369 7A65 		.string	"sizetype"
 3998      7479 7065 
 3998      00
 3999               	.LASF53:
 4000 0078 7573 6249 		.string	"usbInit"
 4000      6E69 7400 
 4001               	.LASF68:
 4002 0080 7573 6249 		.string	"usbInputBufOffset"
 4002      6E70 7574 
 4002      4275 664F 
 4002      6666 7365 
 4002      7400 
 4003               	.LASF28:
 4004 0092 7478 5374 		.string	"txStatus"
 4004      6174 7573 
 4004      00
 4005               	.LASF16:
 4006 009b 7573 6252 		.string	"usbRequest"
 4006      6571 7565 
 4006      7374 00
 4007               	.LASF41:
 4008 00a6 7661 6C75 		.string	"value"
 4008      6500 
 4009               	.LASF50:
 4010 00ac 7573 6253 		.string	"usbSetInterrupt"
 4010      6574 496E 
 4010      7465 7272 
 4010      7570 7400 
 4011               	.LASF36:
 4012 00bc 7265 706C 		.string	"replyLen"
 4012      794C 656E 
 4012      00
 4013               	.LASF63:
 4014 00c5 7573 6244 		.string	"usbDescriptorStringVendor"
 4014      6573 6372 
 4014      6970 746F 
 4014      7253 7472 
 4014      696E 6756 
 4015               	.LASF2:
 4016 00df 7569 6E74 		.string	"uint8_t"
 4016      385F 7400 
 4017               	.LASF80:
 4018 00e7 474E 5520 		.string	"GNU C99 5.4.0 -mn-flash=1 -mno-skip-bug -mcall-prologues -mmcu=avr25 -gdwarf-2 -Os -std=c
 4018      4339 3920 
 4018      352E 342E 
 4018      3020 2D6D 
 4018      6E2D 666C 
 4019               	.LASF73:
 4020 0184 7573 6254 		.string	"usbTxLen"
 4020      784C 656E 
 4020      00
 4021               	.LASF32:
 4022 018d 5F5F 6164 		.string	"__addr16"
 4022      6472 3136 
 4022      00
 4023               	.LASF44:
 4024 0196 7573 6242 		.string	"usbBuildTxBlock"
 4024      7569 6C64 
 4024      5478 426C 
 4024      6F63 6B00 
 4025               	.LASF85:
 4026 01a6 6973 4E6F 		.string	"isNotReset"
 4026      7452 6573 
 4026      6574 00
 4027               	.LASF24:
 4028 01b1 5F63 6D64 		.string	"_cmd"
 4028      00
 4029               	.LASF7:
 4030 01b6 6C6F 6E67 		.string	"long long int"
 4030      206C 6F6E 
 4030      6720 696E 
 4030      7400 
 4031               	.LASF46:
 4032 01c4 7573 6248 		.string	"usbHandleResetHook"
 4032      616E 646C 
 4032      6552 6573 
 4032      6574 486F 
 4032      6F6B 00
 4033               	.LASF29:
 4034 01d7 6368 6172 		.string	"char"
 4034      00
 4035               	.LASF5:
 4036 01dc 6C6F 6E67 		.string	"long int"
 4036      2069 6E74 
 4036      00
 4037               	.LASF78:
 4038 01e5 7573 6246 		.string	"usbFunctionRead"
 4038      756E 6374 
 4038      696F 6E52 
 4038      6561 6400 
 4039               	.LASF34:
 4040 01f5 7573 6247 		.string	"usbGenericSetInterrupt"
 4040      656E 6572 
 4040      6963 5365 
 4040      7449 6E74 
 4040      6572 7275 
 4041               	.LASF38:
 4042 020c 7276 616C 		.string	"rval"
 4042      00
 4043               	.LASF82:
 4044 0211 2F68 6F6D 		.string	"/home/birkler/src/birkler/avrtinybootloader/app_hid"
 4044      652F 6269 
 4044      726B 6C65 
 4044      722F 7372 
 4044      632F 6269 
 4045               	.LASF19:
 4046 0245 7756 616C 		.string	"wValue"
 4046      7565 00
 4047               	.LASF69:
 4048 024c 7573 6244 		.string	"usbDeviceAddr"
 4048      6576 6963 
 4048      6541 6464 
 4048      7200 
 4049               	.LASF25:
 4050 025a 7573 6252 		.string	"usbResetDataToggling"
 4050      6573 6574 
 4050      4461 7461 
 4050      546F 6767 
 4050      6C69 6E67 
 4051               	.LASF66:
 4052 026f 7573 6254 		.string	"usbTxStatus1"
 4052      7853 7461 
 4052      7475 7331 
 4052      00
 4053               	.LASF1:
 4054 027c 756E 7369 		.string	"unsigned char"
 4054      676E 6564 
 4054      2063 6861 
 4054      7200 
 4055               	.LASF77:
 4056 028a 7573 6246 		.string	"usbFunctionWrite"
 4056      756E 6374 
 4056      696F 6E57 
 4056      7269 7465 
 4056      00
 4057               	.LASF56:
 4058 029b 7573 624D 		.string	"usbMsgPtr"
 4058      7367 5074 
 4058      7200 
 4059               	.LASF0:
 4060 02a5 7369 676E 		.string	"signed char"
 4060      6564 2063 
 4060      6861 7200 
 4061               	.LASF23:
 4062 02b1 666C 6167 		.string	"flags"
 4062      7300 
 4063               	.LASF8:
 4064 02b7 6C6F 6E67 		.string	"long long unsigned int"
 4064      206C 6F6E 
 4064      6720 756E 
 4064      7369 676E 
 4064      6564 2069 
 4065               	.LASF37:
 4066 02ce 7479 7065 		.string	"type"
 4066      00
 4067               	.LASF15:
 4068 02d3 7573 6254 		.string	"usbTxStatus"
 4068      7853 7461 
 4068      7475 7300 
 4069               	.LASF4:
 4070 02df 756E 7369 		.string	"unsigned int"
 4070      676E 6564 
 4070      2069 6E74 
 4070      00
 4071               	.LASF3:
 4072 02ec 7569 6E74 		.string	"uint16_t"
 4072      3136 5F74 
 4072      00
 4073               	.LASF81:
 4074 02f5 2E2E 2F75 		.string	"../usbdrv/usbdrv.c"
 4074      7362 6472 
 4074      762F 7573 
 4074      6264 7276 
 4074      2E63 00
 4075               	.LASF33:
 4076 0308 5F5F 7265 		.string	"__result"
 4076      7375 6C74 
 4076      00
 4077               	.LASF40:
 4078 0311 6461 7461 		.string	"dataPtr"
 4078      5074 7200 
 4079               	.LASF60:
 4080 0319 7573 6244 		.string	"usbDescriptorConfiguration"
 4080      6573 6372 
 4080      6970 746F 
 4080      7243 6F6E 
 4080      6669 6775 
 4081               	.LASF51:
 4082 0334 7573 6250 		.string	"usbPoll"
 4082      6F6C 6C00 
 4083               	.LASF83:
 4084 033c 7573 6257 		.string	"usbWord"
 4084      6F72 6400 
 4085               	.LASF26:
 4086 0344 7573 6252 		.string	"usbResetStall"
 4086      6573 6574 
 4086      5374 616C 
 4086      6C00 
 4087               	.LASF70:
 4088 0352 7573 624E 		.string	"usbNewDeviceAddr"
 4088      6577 4465 
 4088      7669 6365 
 4088      4164 6472 
 4088      00
 4089               	.LASF65:
 4090 0363 7573 6244 		.string	"usbDescriptorStringSerialNumber"
 4090      6573 6372 
 4090      6970 746F 
 4090      7253 7472 
 4090      696E 6753 
 4091               	.LASF62:
 4092 0383 7573 6244 		.string	"usbDescriptorString0"
 4092      6573 6372 
 4092      6970 746F 
 4092      7253 7472 
 4092      696E 6730 
 4093               	.LASF14:
 4094 0398 7573 6257 		.string	"usbWord_t"
 4094      6F72 645F 
 4094      7400 
 4095               	.LASF45:
 4096 03a2 7761 6E74 		.string	"wantLen"
 4096      4C65 6E00 
 4097               	.LASF74:
 4098 03aa 7573 6254 		.string	"usbTxBuf"
 4098      7842 7566 
 4098      00
 4099               	.LASF11:
 4100 03b3 7573 6254 		.string	"usbTxStatus_t"
 4100      7853 7461 
 4100      7475 735F 
 4100      7400 
 4101               	.LASF39:
 4102 03c1 7573 6244 		.string	"usbDriverSetup"
 4102      7269 7665 
 4102      7253 6574 
 4102      7570 00
 4103               	.LASF84:
 4104 03d0 736B 6970 		.string	"skipMsgPtrAssignment"
 4104      4D73 6750 
 4104      7472 4173 
 4104      7369 676E 
 4104      6D65 6E74 
 4105               	.LASF17:
 4106 03e5 626D 5265 		.string	"bmRequestType"
 4106      7175 6573 
 4106      7454 7970 
 4106      6500 
 4107               	.LASF27:
 4108 03f3 6461 7461 		.string	"data"
 4108      00
 4109               	.LASF9:
 4110 03f8 6275 6666 		.string	"buffer"
 4110      6572 00
 4111               	.LASF52:
 4112 03ff 7573 624C 		.string	"usbLineStatus"
 4112      696E 6553 
 4112      7461 7475 
 4112      7300 
 4113               	.LASF72:
 4114 040d 7573 6243 		.string	"usbCurrentTok"
 4114      7572 7265 
 4114      6E74 546F 
 4114      6B00 
 4115               	.LASF49:
 4116 041b 6973 5265 		.string	"isReset"
 4116      7365 7400 
 4117               	.LASF61:
 4118 0423 7573 6244 		.string	"usbDescriptorHidReport"
 4118      6573 6372 
 4118      6970 746F 
 4118      7248 6964 
 4118      5265 706F 
 4119               	.LASF6:
 4120 043a 6C6F 6E67 		.string	"long unsigned int"
 4120      2075 6E73 
 4120      6967 6E65 
 4120      6420 696E 
 4120      7400 
 4121               	.LASF13:
 4122 044c 6279 7465 		.string	"bytes"
 4122      7300 
 4123               	.LASF76:
 4124 0452 7573 6246 		.string	"usbFunctionSetup"
 4124      756E 6374 
 4124      696F 6E53 
 4124      6574 7570 
 4124      00
 4125               	.LASF64:
 4126 0463 7573 6244 		.string	"usbDescriptorStringDevice"
 4126      6573 6372 
 4126      6970 746F 
 4126      7253 7472 
 4126      696E 6744 
 4127               	.LASF54:
 4128 047d 7573 624D 		.string	"usbMsgLen"
 4128      7367 4C65 
 4128      6E00 
 4129               	.LASF22:
 4130 0487 7573 6252 		.string	"usbRequest_t"
 4130      6571 7565 
 4130      7374 5F74 
 4130      00
 4131               	.LASF79:
 4132 0494 6361 6C69 		.string	"calibrateOscillator"
 4132      6272 6174 
 4132      654F 7363 
 4132      696C 6C61 
 4132      746F 7200 
 4133               	.LASF31:
 4134 04a8 7573 6244 		.string	"usbDeviceRead"
 4134      6576 6963 
 4134      6552 6561 
 4134      6400 
 4135               	.LASF35:
 4136 04b6 7573 6250 		.string	"usbProcessRx"
 4136      726F 6365 
 4136      7373 5278 
 4136      00
 4137               	.LASF21:
 4138 04c3 774C 656E 		.string	"wLength"
 4138      6774 6800 
 4139               	.LASF57:
 4140 04cb 7573 6252 		.string	"usbRxToken"
 4140      7854 6F6B 
 4140      656E 00
 4141               	.LASF67:
 4142 04d6 7573 6252 		.string	"usbRxBuf"
 4142      7842 7566 
 4142      00
 4143               	.LASF55:
 4144 04df 7573 624D 		.string	"usbMsgFlags"
 4144      7367 466C 
 4144      6167 7300 
 4145               	.LASF48:
 4146 04eb 7761 7352 		.string	"wasReset"
 4146      6573 6574 
 4146      00
 4147               	.LASF20:
 4148 04f4 7749 6E64 		.string	"wIndex"
 4148      6578 00
 4149               	.LASF47:
 4150 04fb 6E6F 7452 		.string	"notResetState"
 4150      6573 6574 
 4150      5374 6174 
 4150      6500 
 4151               		.ident	"GCC: (GNU) 5.4.0"
 4152               	.global __do_copy_data
 4153               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbdrv.c
     /tmp/ccx7VRld.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccx7VRld.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccx7VRld.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccx7VRld.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccx7VRld.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccx7VRld.s:12     .text:0000000000000000 usbSetInterrupt
                            *COM*:000000000000000c usbTxStatus1
     /tmp/ccx7VRld.s:94     .text:000000000000004a usbPoll
                            *COM*:0000000000000001 usbRxLen
                            *COM*:0000000000000001 usbInputBufOffset
                            *COM*:0000000000000016 usbRxBuf
                            *COM*:0000000000000001 usbRxToken
                            *COM*:000000000000000b usbTxBuf
     /tmp/ccx7VRld.s:928    .data:0000000000000001 usbTxLen
     /tmp/ccx7VRld.s:808    .bss:0000000000000001 usbMsgFlags
                            *COM*:0000000000000001 usbNewDeviceAddr
     /tmp/ccx7VRld.s:851    .progmem.data:0000000000000022 usbDescriptorDevice
                            *COM*:0000000000000002 usbMsgPtr
     /tmp/ccx7VRld.s:813    .progmem.data:0000000000000000 usbDescriptorConfiguration
     /tmp/ccx7VRld.s:910    .progmem.data:000000000000006e usbDescriptorString0
     /tmp/ccx7VRld.s:895    .progmem.data:0000000000000058 usbDescriptorStringVendor
     /tmp/ccx7VRld.s:873    .progmem.data:0000000000000034 usbDescriptorStringDevice
                            *COM*:0000000000000001 usbConfiguration
     /tmp/ccx7VRld.s:920    .data:0000000000000000 usbMsgLen
                            *COM*:0000000000000001 usbDeviceAddr
                             .bss:0000000000000000 wasReset.1770
     /tmp/ccx7VRld.s:775    .text:0000000000000326 usbInit
                            *COM*:0000000000000001 usbCurrentTok

UNDEFINED SYMBOLS
usbCrc16Append
usbFunctionSetup
usbDescriptorHidReport
usbFunctionWrite
usbFunctionRead
calibrateOscillator
__do_copy_data
__do_clear_bss
